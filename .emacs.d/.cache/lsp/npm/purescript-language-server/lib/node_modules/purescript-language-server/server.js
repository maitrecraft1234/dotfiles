#!/usr/bin/env node
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __export = (target, all5) => {
  __markAsModule(target);
  for (var name2 in all5)
    __defProp(target, name2, { get: all5[name2], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// output/LanguageServer.IdePurescript.Main/foreign.js
function version() {
  try {
    return require("./package.json").version;
  } catch (e) {
    return e.message;
  }
}
var init_foreign = __esm({
  "output/LanguageServer.IdePurescript.Main/foreign.js"() {
  }
});

// output/Control.Apply/foreign.js
var arrayApply;
var init_foreign2 = __esm({
  "output/Control.Apply/foreign.js"() {
    arrayApply = function(fs) {
      return function(xs) {
        var l = fs.length;
        var k = xs.length;
        var result2 = new Array(l * k);
        var n = 0;
        for (var i = 0; i < l; i++) {
          var f = fs[i];
          for (var j = 0; j < k; j++) {
            result2[n++] = f(xs[j]);
          }
        }
        return result2;
      };
    };
  }
});

// output/Control.Semigroupoid/index.js
var semigroupoidFn, compose;
var init_Control = __esm({
  "output/Control.Semigroupoid/index.js"() {
    semigroupoidFn = {
      compose: function(f) {
        return function(g) {
          return function(x) {
            return f(g(x));
          };
        };
      }
    };
    compose = function(dict) {
      return dict.compose;
    };
  }
});

// output/Control.Category/index.js
var identity, categoryFn;
var init_Control2 = __esm({
  "output/Control.Category/index.js"() {
    init_Control();
    init_Control();
    identity = function(dict) {
      return dict.identity;
    };
    categoryFn = {
      identity: function(x) {
        return x;
      },
      Semigroupoid0: function() {
        return semigroupoidFn;
      }
    };
  }
});

// output/Data.Boolean/index.js
var otherwise;
var init_Data = __esm({
  "output/Data.Boolean/index.js"() {
    otherwise = true;
  }
});

// output/Data.Function/index.js
var on, flip, $$const, applyFlipped;
var init_Data2 = __esm({
  "output/Data.Function/index.js"() {
    init_Control2();
    init_Data();
    init_Control2();
    on = function(f) {
      return function(g) {
        return function(x) {
          return function(y) {
            return f(g(x))(g(y));
          };
        };
      };
    };
    flip = function(f) {
      return function(b) {
        return function(a) {
          return f(a)(b);
        };
      };
    };
    $$const = function(a) {
      return function(v) {
        return a;
      };
    };
    applyFlipped = function(x) {
      return function(f) {
        return f(x);
      };
    };
  }
});

// output/Data.Functor/foreign.js
var arrayMap;
var init_foreign3 = __esm({
  "output/Data.Functor/foreign.js"() {
    arrayMap = function(f) {
      return function(arr) {
        var l = arr.length;
        var result2 = new Array(l);
        for (var i = 0; i < l; i++) {
          result2[i] = f(arr[i]);
        }
        return result2;
      };
    };
  }
});

// output/Data.Unit/foreign.js
var unit;
var init_foreign4 = __esm({
  "output/Data.Unit/foreign.js"() {
    unit = void 0;
  }
});

// output/Data.Unit/index.js
var init_Data3 = __esm({
  "output/Data.Unit/index.js"() {
    init_foreign4();
    init_foreign4();
  }
});

// output/Type.Proxy/index.js
var $$Proxy;
var init_Type = __esm({
  "output/Type.Proxy/index.js"() {
    $$Proxy = /* @__PURE__ */ function() {
      function $$Proxy2() {
      }
      ;
      $$Proxy2.value = new $$Proxy2();
      return $$Proxy2;
    }();
  }
});

// output/Data.Functor/index.js
var map, mapFlipped, $$void, voidLeft, voidRight, functorFn, functorArray, flap;
var init_Data4 = __esm({
  "output/Data.Functor/index.js"() {
    init_foreign3();
    init_Control();
    init_Data2();
    init_Data3();
    init_Type();
    map = function(dict) {
      return dict.map;
    };
    mapFlipped = function(dictFunctor) {
      return function(fa) {
        return function(f) {
          return map(dictFunctor)(f)(fa);
        };
      };
    };
    $$void = function(dictFunctor) {
      return map(dictFunctor)($$const(unit));
    };
    voidLeft = function(dictFunctor) {
      return function(f) {
        return function(x) {
          return map(dictFunctor)($$const(x))(f);
        };
      };
    };
    voidRight = function(dictFunctor) {
      return function(x) {
        return map(dictFunctor)($$const(x));
      };
    };
    functorFn = {
      map: /* @__PURE__ */ compose(semigroupoidFn)
    };
    functorArray = {
      map: arrayMap
    };
    flap = function(dictFunctor) {
      return function(ff2) {
        return function(x) {
          return map(dictFunctor)(function(f) {
            return f(x);
          })(ff2);
        };
      };
    };
  }
});

// output/Control.Apply/index.js
var applyFn, applyArray, apply, applyFirst, applySecond, lift2;
var init_Control3 = __esm({
  "output/Control.Apply/index.js"() {
    init_foreign2();
    init_Control2();
    init_Data2();
    init_Data4();
    init_Type();
    init_Data4();
    applyFn = {
      apply: function(f) {
        return function(g) {
          return function(x) {
            return f(x)(g(x));
          };
        };
      },
      Functor0: function() {
        return functorFn;
      }
    };
    applyArray = {
      apply: arrayApply,
      Functor0: function() {
        return functorArray;
      }
    };
    apply = function(dict) {
      return dict.apply;
    };
    applyFirst = function(dictApply) {
      return function(a) {
        return function(b) {
          return apply(dictApply)(map(dictApply.Functor0())($$const)(a))(b);
        };
      };
    };
    applySecond = function(dictApply) {
      return function(a) {
        return function(b) {
          return apply(dictApply)(map(dictApply.Functor0())($$const(identity(categoryFn)))(a))(b);
        };
      };
    };
    lift2 = function(dictApply) {
      return function(f) {
        return function(a) {
          return function(b) {
            return apply(dictApply)(map(dictApply.Functor0())(f)(a))(b);
          };
        };
      };
    };
  }
});

// output/Control.Applicative/index.js
var pure, unless, when, liftA1, applicativeFn, applicativeArray;
var init_Control4 = __esm({
  "output/Control.Applicative/index.js"() {
    init_Control3();
    init_Data4();
    init_Data3();
    init_Type();
    init_Control3();
    init_Data4();
    pure = function(dict) {
      return dict.pure;
    };
    unless = function(dictApplicative) {
      return function(v) {
        return function(v1) {
          if (!v) {
            return v1;
          }
          ;
          if (v) {
            return pure(dictApplicative)(unit);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
    when = function(dictApplicative) {
      return function(v) {
        return function(v1) {
          if (v) {
            return v1;
          }
          ;
          if (!v) {
            return pure(dictApplicative)(unit);
          }
          ;
          throw new Error("Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
    liftA1 = function(dictApplicative) {
      return function(f) {
        return function(a) {
          return apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
        };
      };
    };
    applicativeFn = {
      pure: function(x) {
        return function(v) {
          return x;
        };
      },
      Apply0: function() {
        return applyFn;
      }
    };
    applicativeArray = {
      pure: function(x) {
        return [x];
      },
      Apply0: function() {
        return applyArray;
      }
    };
  }
});

// output/Control.Bind/foreign.js
var arrayBind;
var init_foreign5 = __esm({
  "output/Control.Bind/foreign.js"() {
    arrayBind = function(arr) {
      return function(f) {
        var result2 = [];
        for (var i = 0, l = arr.length; i < l; i++) {
          Array.prototype.push.apply(result2, f(arr[i]));
        }
        return result2;
      };
    };
  }
});

// output/Control.Bind/index.js
var discard, bindArray, bind, bindFlipped, composeKleisliFlipped, composeKleisli, discardUnit, join;
var init_Control5 = __esm({
  "output/Control.Bind/index.js"() {
    init_foreign5();
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data2();
    init_Data4();
    init_Type();
    init_Control4();
    init_Control3();
    init_Data4();
    discard = function(dict) {
      return dict.discard;
    };
    bindArray = {
      bind: arrayBind,
      Apply0: function() {
        return applyArray;
      }
    };
    bind = function(dict) {
      return dict.bind;
    };
    bindFlipped = function(dictBind) {
      return flip(bind(dictBind));
    };
    composeKleisliFlipped = function(dictBind) {
      return function(f) {
        return function(g) {
          return function(a) {
            return bindFlipped(dictBind)(f)(g(a));
          };
        };
      };
    };
    composeKleisli = function(dictBind) {
      return function(f) {
        return function(g) {
          return function(a) {
            return bind(dictBind)(f(a))(g);
          };
        };
      };
    };
    discardUnit = {
      discard: function(dictBind) {
        return bind(dictBind);
      }
    };
    join = function(dictBind) {
      return function(m) {
        return bind(dictBind)(m)(identity(categoryFn));
      };
    };
  }
});

// output/Data.Semigroup/foreign.js
var concatString, concatArray;
var init_foreign6 = __esm({
  "output/Data.Semigroup/foreign.js"() {
    concatString = function(s1) {
      return function(s2) {
        return s1 + s2;
      };
    };
    concatArray = function(xs) {
      return function(ys) {
        if (xs.length === 0)
          return ys;
        if (ys.length === 0)
          return xs;
        return xs.concat(ys);
      };
    };
  }
});

// output/Data.Symbol/foreign.js
var init_foreign7 = __esm({
  "output/Data.Symbol/foreign.js"() {
  }
});

// output/Data.Symbol/index.js
var reflectSymbol;
var init_Data5 = __esm({
  "output/Data.Symbol/index.js"() {
    init_foreign7();
    init_Type();
    reflectSymbol = function(dict) {
      return dict.reflectSymbol;
    };
  }
});

// output/Data.Void/index.js
var absurd;
var init_Data6 = __esm({
  "output/Data.Void/index.js"() {
    absurd = function(a) {
      var spin = function($copy_v) {
        var $tco_result;
        function $tco_loop(v) {
          $copy_v = v;
          return;
        }
        ;
        while (true) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return spin(a);
    };
  }
});

// output/Record.Unsafe/foreign.js
var unsafeGet, unsafeSet;
var init_foreign8 = __esm({
  "output/Record.Unsafe/foreign.js"() {
    unsafeGet = function(label) {
      return function(rec) {
        return rec[label];
      };
    };
    unsafeSet = function(label) {
      return function(value) {
        return function(rec) {
          var copy3 = {};
          for (var key in rec) {
            if ({}.hasOwnProperty.call(rec, key)) {
              copy3[key] = rec[key];
            }
          }
          copy3[label] = value;
          return copy3;
        };
      };
    };
  }
});

// output/Record.Unsafe/index.js
var init_Record = __esm({
  "output/Record.Unsafe/index.js"() {
    init_foreign8();
    init_foreign8();
  }
});

// output/Data.Semigroup/index.js
var semigroupString, semigroupRecordNil, semigroupArray, appendRecord, semigroupRecord, append, semigroupFn, semigroupRecordCons;
var init_Data7 = __esm({
  "output/Data.Semigroup/index.js"() {
    init_foreign6();
    init_Data5();
    init_Data3();
    init_Data6();
    init_Record();
    init_Type();
    semigroupString = {
      append: concatString
    };
    semigroupRecordNil = {
      appendRecord: function(v) {
        return function(v1) {
          return function(v2) {
            return {};
          };
        };
      }
    };
    semigroupArray = {
      append: concatArray
    };
    appendRecord = function(dict) {
      return dict.appendRecord;
    };
    semigroupRecord = function() {
      return function(dictSemigroupRecord) {
        return {
          append: appendRecord(dictSemigroupRecord)($$Proxy.value)
        };
      };
    };
    append = function(dict) {
      return dict.append;
    };
    semigroupFn = function(dictSemigroup) {
      return {
        append: function(f) {
          return function(g) {
            return function(x) {
              return append(dictSemigroup)(f(x))(g(x));
            };
          };
        }
      };
    };
    semigroupRecordCons = function(dictIsSymbol) {
      return function() {
        return function(dictSemigroupRecord) {
          return function(dictSemigroup) {
            return {
              appendRecord: function(v) {
                return function(ra) {
                  return function(rb) {
                    var tail2 = appendRecord(dictSemigroupRecord)($$Proxy.value)(ra)(rb);
                    var key = reflectSymbol(dictIsSymbol)($$Proxy.value);
                    var insert6 = unsafeSet(key);
                    var get2 = unsafeGet(key);
                    return insert6(append(dictSemigroup)(get2(ra))(get2(rb)))(tail2);
                  };
                };
              }
            };
          };
        };
      };
    };
  }
});

// output/Control.Alt/index.js
var alt;
var init_Control6 = __esm({
  "output/Control.Alt/index.js"() {
    init_Data4();
    init_Data7();
    init_Data4();
    alt = function(dict) {
      return dict.alt;
    };
  }
});

// output/Data.Bounded/foreign.js
var topInt, bottomInt, topChar, bottomChar, topNumber, bottomNumber;
var init_foreign9 = __esm({
  "output/Data.Bounded/foreign.js"() {
    topInt = 2147483647;
    bottomInt = -2147483648;
    topChar = String.fromCharCode(65535);
    bottomChar = String.fromCharCode(0);
    topNumber = Number.POSITIVE_INFINITY;
    bottomNumber = Number.NEGATIVE_INFINITY;
  }
});

// output/Data.Ord/foreign.js
var unsafeCompareImpl, ordIntImpl, ordNumberImpl, ordStringImpl, ordCharImpl, ordArrayImpl;
var init_foreign10 = __esm({
  "output/Data.Ord/foreign.js"() {
    unsafeCompareImpl = function(lt) {
      return function(eq2) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x === y ? eq2 : gt;
            };
          };
        };
      };
    };
    ordIntImpl = unsafeCompareImpl;
    ordNumberImpl = unsafeCompareImpl;
    ordStringImpl = unsafeCompareImpl;
    ordCharImpl = unsafeCompareImpl;
    ordArrayImpl = function(f) {
      return function(xs) {
        return function(ys) {
          var i = 0;
          var xlen = xs.length;
          var ylen = ys.length;
          while (i < xlen && i < ylen) {
            var x = xs[i];
            var y = ys[i];
            var o = f(x)(y);
            if (o !== 0) {
              return o;
            }
            i++;
          }
          if (xlen === ylen) {
            return 0;
          } else if (xlen > ylen) {
            return -1;
          } else {
            return 1;
          }
        };
      };
    };
  }
});

// output/Data.Eq/foreign.js
var refEq, eqBooleanImpl, eqIntImpl, eqNumberImpl, eqCharImpl, eqStringImpl, eqArrayImpl;
var init_foreign11 = __esm({
  "output/Data.Eq/foreign.js"() {
    refEq = function(r1) {
      return function(r2) {
        return r1 === r2;
      };
    };
    eqBooleanImpl = refEq;
    eqIntImpl = refEq;
    eqNumberImpl = refEq;
    eqCharImpl = refEq;
    eqStringImpl = refEq;
    eqArrayImpl = function(f) {
      return function(xs) {
        return function(ys) {
          if (xs.length !== ys.length)
            return false;
          for (var i = 0; i < xs.length; i++) {
            if (!f(xs[i])(ys[i]))
              return false;
          }
          return true;
        };
      };
    };
  }
});

// output/Data.Eq/index.js
var eqString, eqRowNil, eqRecord, eqRec, eqNumber, eqInt, eqChar, eqBoolean, eq, eqArray, eqRowCons, notEq;
var init_Data8 = __esm({
  "output/Data.Eq/index.js"() {
    init_foreign11();
    init_Data5();
    init_Record();
    init_Type();
    eqString = {
      eq: eqStringImpl
    };
    eqRowNil = {
      eqRecord: function(v) {
        return function(v1) {
          return function(v2) {
            return true;
          };
        };
      }
    };
    eqRecord = function(dict) {
      return dict.eqRecord;
    };
    eqRec = function() {
      return function(dictEqRecord) {
        return {
          eq: eqRecord(dictEqRecord)($$Proxy.value)
        };
      };
    };
    eqNumber = {
      eq: eqNumberImpl
    };
    eqInt = {
      eq: eqIntImpl
    };
    eqChar = {
      eq: eqCharImpl
    };
    eqBoolean = {
      eq: eqBooleanImpl
    };
    eq = function(dict) {
      return dict.eq;
    };
    eqArray = function(dictEq) {
      return {
        eq: eqArrayImpl(eq(dictEq))
      };
    };
    eqRowCons = function(dictEqRecord) {
      return function() {
        return function(dictIsSymbol) {
          return function(dictEq) {
            return {
              eqRecord: function(v) {
                return function(ra) {
                  return function(rb) {
                    var tail2 = eqRecord(dictEqRecord)($$Proxy.value)(ra)(rb);
                    var key = reflectSymbol(dictIsSymbol)($$Proxy.value);
                    var get2 = unsafeGet(key);
                    return eq(dictEq)(get2(ra))(get2(rb)) && tail2;
                  };
                };
              }
            };
          };
        };
      };
    };
    notEq = function(dictEq) {
      return function(x) {
        return function(y) {
          return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
        };
      };
    };
  }
});

// output/Data.Ordering/index.js
var LT, GT, EQ, semigroupOrdering, invert, eqOrdering;
var init_Data9 = __esm({
  "output/Data.Ordering/index.js"() {
    LT = /* @__PURE__ */ function() {
      function LT2() {
      }
      ;
      LT2.value = new LT2();
      return LT2;
    }();
    GT = /* @__PURE__ */ function() {
      function GT2() {
      }
      ;
      GT2.value = new GT2();
      return GT2;
    }();
    EQ = /* @__PURE__ */ function() {
      function EQ2() {
      }
      ;
      EQ2.value = new EQ2();
      return EQ2;
    }();
    semigroupOrdering = {
      append: function(v) {
        return function(v1) {
          if (v instanceof LT) {
            return LT.value;
          }
          ;
          if (v instanceof GT) {
            return GT.value;
          }
          ;
          if (v instanceof EQ) {
            return v1;
          }
          ;
          throw new Error("Failed pattern match at Data.Ordering (line 21, column 1 - line 24, column 18): " + [v.constructor.name, v1.constructor.name]);
        };
      }
    };
    invert = function(v) {
      if (v instanceof GT) {
        return LT.value;
      }
      ;
      if (v instanceof EQ) {
        return EQ.value;
      }
      ;
      if (v instanceof LT) {
        return GT.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [v.constructor.name]);
    };
    eqOrdering = {
      eq: function(v) {
        return function(v1) {
          if (v instanceof LT && v1 instanceof LT) {
            return true;
          }
          ;
          if (v instanceof GT && v1 instanceof GT) {
            return true;
          }
          ;
          if (v instanceof EQ && v1 instanceof EQ) {
            return true;
          }
          ;
          return false;
        };
      }
    };
  }
});

// output/Data.Ring/foreign.js
var intSub;
var init_foreign12 = __esm({
  "output/Data.Ring/foreign.js"() {
    intSub = function(x) {
      return function(y) {
        return x - y | 0;
      };
    };
  }
});

// output/Data.Semiring/foreign.js
var intAdd, intMul;
var init_foreign13 = __esm({
  "output/Data.Semiring/foreign.js"() {
    intAdd = function(x) {
      return function(y) {
        return x + y | 0;
      };
    };
    intMul = function(x) {
      return function(y) {
        return x * y | 0;
      };
    };
  }
});

// output/Data.Semiring/index.js
var zero, semiringInt, one, add;
var init_Data10 = __esm({
  "output/Data.Semiring/index.js"() {
    init_foreign13();
    init_Data5();
    init_Data3();
    init_Record();
    init_Type();
    zero = function(dict) {
      return dict.zero;
    };
    semiringInt = {
      add: intAdd,
      zero: 0,
      mul: intMul,
      one: 1
    };
    one = function(dict) {
      return dict.one;
    };
    add = function(dict) {
      return dict.add;
    };
  }
});

// output/Data.Ring/index.js
var ringInt;
var init_Data11 = __esm({
  "output/Data.Ring/index.js"() {
    init_foreign12();
    init_Data10();
    init_Data5();
    init_Data3();
    init_Record();
    init_Type();
    init_Data10();
    ringInt = {
      sub: intSub,
      Semiring0: function() {
        return semiringInt;
      }
    };
  }
});

// output/Data.Ord/index.js
var ordString, ordRecordNil, ordNumber, ordInt, ordChar, compareRecord, ordRecord, compare, comparing, greaterThanOrEq, lessThan, lessThanOrEq, max, min, ordArray, ordRecordCons, clamp;
var init_Data12 = __esm({
  "output/Data.Ord/index.js"() {
    init_foreign10();
    init_Data8();
    init_Data9();
    init_Data11();
    init_Data10();
    init_Data5();
    init_Record();
    init_Type();
    init_Data9();
    ordString = /* @__PURE__ */ function() {
      return {
        compare: ordStringImpl(LT.value)(EQ.value)(GT.value),
        Eq0: function() {
          return eqString;
        }
      };
    }();
    ordRecordNil = {
      compareRecord: function(v) {
        return function(v1) {
          return function(v2) {
            return EQ.value;
          };
        };
      },
      EqRecord0: function() {
        return eqRowNil;
      }
    };
    ordNumber = /* @__PURE__ */ function() {
      return {
        compare: ordNumberImpl(LT.value)(EQ.value)(GT.value),
        Eq0: function() {
          return eqNumber;
        }
      };
    }();
    ordInt = /* @__PURE__ */ function() {
      return {
        compare: ordIntImpl(LT.value)(EQ.value)(GT.value),
        Eq0: function() {
          return eqInt;
        }
      };
    }();
    ordChar = /* @__PURE__ */ function() {
      return {
        compare: ordCharImpl(LT.value)(EQ.value)(GT.value),
        Eq0: function() {
          return eqChar;
        }
      };
    }();
    compareRecord = function(dict) {
      return dict.compareRecord;
    };
    ordRecord = function() {
      return function(dictOrdRecord) {
        return {
          compare: compareRecord(dictOrdRecord)($$Proxy.value),
          Eq0: function() {
            return eqRec()(dictOrdRecord.EqRecord0());
          }
        };
      };
    };
    compare = function(dict) {
      return dict.compare;
    };
    comparing = function(dictOrd) {
      return function(f) {
        return function(x) {
          return function(y) {
            return compare(dictOrd)(f(x))(f(y));
          };
        };
      };
    };
    greaterThanOrEq = function(dictOrd) {
      return function(a1) {
        return function(a2) {
          var v = compare(dictOrd)(a1)(a2);
          if (v instanceof LT) {
            return false;
          }
          ;
          return true;
        };
      };
    };
    lessThan = function(dictOrd) {
      return function(a1) {
        return function(a2) {
          var v = compare(dictOrd)(a1)(a2);
          if (v instanceof LT) {
            return true;
          }
          ;
          return false;
        };
      };
    };
    lessThanOrEq = function(dictOrd) {
      return function(a1) {
        return function(a2) {
          var v = compare(dictOrd)(a1)(a2);
          if (v instanceof GT) {
            return false;
          }
          ;
          return true;
        };
      };
    };
    max = function(dictOrd) {
      return function(x) {
        return function(y) {
          var v = compare(dictOrd)(x)(y);
          if (v instanceof LT) {
            return y;
          }
          ;
          if (v instanceof EQ) {
            return x;
          }
          ;
          if (v instanceof GT) {
            return x;
          }
          ;
          throw new Error("Failed pattern match at Data.Ord (line 181, column 3 - line 184, column 12): " + [v.constructor.name]);
        };
      };
    };
    min = function(dictOrd) {
      return function(x) {
        return function(y) {
          var v = compare(dictOrd)(x)(y);
          if (v instanceof LT) {
            return x;
          }
          ;
          if (v instanceof EQ) {
            return x;
          }
          ;
          if (v instanceof GT) {
            return y;
          }
          ;
          throw new Error("Failed pattern match at Data.Ord (line 172, column 3 - line 175, column 12): " + [v.constructor.name]);
        };
      };
    };
    ordArray = function(dictOrd) {
      return {
        compare: function() {
          var toDelta = function(x) {
            return function(y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof EQ) {
                return 0;
              }
              ;
              if (v instanceof LT) {
                return 1;
              }
              ;
              if (v instanceof GT) {
                return -1 | 0;
              }
              ;
              throw new Error("Failed pattern match at Data.Ord (line 79, column 7 - line 82, column 17): " + [v.constructor.name]);
            };
          };
          return function(xs) {
            return function(ys) {
              return compare(ordInt)(0)(ordArrayImpl(toDelta)(xs)(ys));
            };
          };
        }(),
        Eq0: function() {
          return eqArray(dictOrd.Eq0());
        }
      };
    };
    ordRecordCons = function(dictOrdRecord) {
      return function() {
        return function(dictIsSymbol) {
          return function(dictOrd) {
            return {
              compareRecord: function(v) {
                return function(ra) {
                  return function(rb) {
                    var key = reflectSymbol(dictIsSymbol)($$Proxy.value);
                    var left2 = compare(dictOrd)(unsafeGet(key)(ra))(unsafeGet(key)(rb));
                    var $53 = notEq(eqOrdering)(left2)(EQ.value);
                    if ($53) {
                      return left2;
                    }
                    ;
                    return compareRecord(dictOrdRecord)($$Proxy.value)(ra)(rb);
                  };
                };
              },
              EqRecord0: function() {
                return eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
              }
            };
          };
        };
      };
    };
    clamp = function(dictOrd) {
      return function(low) {
        return function(hi) {
          return function(x) {
            return min(dictOrd)(hi)(max(dictOrd)(low)(x));
          };
        };
      };
    };
  }
});

// output/Data.Bounded/index.js
var top, boundedInt, boundedChar, bottom;
var init_Data13 = __esm({
  "output/Data.Bounded/index.js"() {
    init_foreign9();
    init_Data12();
    init_Data9();
    init_Data5();
    init_Data3();
    init_Record();
    init_Type();
    init_Data12();
    top = function(dict) {
      return dict.top;
    };
    boundedInt = {
      top: topInt,
      bottom: bottomInt,
      Ord0: function() {
        return ordInt;
      }
    };
    boundedChar = {
      top: topChar,
      bottom: bottomChar,
      Ord0: function() {
        return ordChar;
      }
    };
    bottom = function(dict) {
      return dict.bottom;
    };
  }
});

// output/Data.Functor.Invariant/index.js
var init_Data_Functor = __esm({
  "output/Data.Functor.Invariant/index.js"() {
    init_Data4();
  }
});

// output/Data.Show/foreign.js
var showIntImpl, showNumberImpl, showStringImpl, showArrayImpl, cons, intercalate;
var init_foreign14 = __esm({
  "output/Data.Show/foreign.js"() {
    showIntImpl = function(n) {
      return n.toString();
    };
    showNumberImpl = function(n) {
      var str = n.toString();
      return isNaN(str + ".0") ? str : str + ".0";
    };
    showStringImpl = function(s) {
      var l = s.length;
      return '"' + s.replace(/[\0-\x1F\x7F"\\]/g, function(c2, i) {
        switch (c2) {
          case '"':
          case "\\":
            return "\\" + c2;
          case "\x07":
            return "\\a";
          case "\b":
            return "\\b";
          case "\f":
            return "\\f";
          case "\n":
            return "\\n";
          case "\r":
            return "\\r";
          case "	":
            return "\\t";
          case "\v":
            return "\\v";
        }
        var k = i + 1;
        var empty9 = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c2.charCodeAt(0).toString(10) + empty9;
      }) + '"';
    };
    showArrayImpl = function(f) {
      return function(xs) {
        var ss = [];
        for (var i = 0, l = xs.length; i < l; i++) {
          ss[i] = f(xs[i]);
        }
        return "[" + ss.join(",") + "]";
      };
    };
    cons = function(head4) {
      return function(tail2) {
        return [head4].concat(tail2);
      };
    };
    intercalate = function(separator) {
      return function(xs) {
        return xs.join(separator);
      };
    };
  }
});

// output/Data.Show/index.js
var showString, showRecordFieldsNil, showRecordFields, showRecord, showNumber, showInt, showBoolean, show, showArray, showRecordFieldsCons;
var init_Data14 = __esm({
  "output/Data.Show/index.js"() {
    init_foreign14();
    init_Data5();
    init_Record();
    init_Type();
    showString = {
      show: showStringImpl
    };
    showRecordFieldsNil = {
      showRecordFields: function(v) {
        return function(v1) {
          return [];
        };
      }
    };
    showRecordFields = function(dict) {
      return dict.showRecordFields;
    };
    showRecord = function() {
      return function() {
        return function(dictShowRecordFields) {
          return {
            show: function(record) {
              var v = showRecordFields(dictShowRecordFields)($$Proxy.value)(record);
              if (v.length === 0) {
                return "{}";
              }
              ;
              return intercalate(" ")(["{", intercalate(", ")(v), "}"]);
            }
          };
        };
      };
    };
    showNumber = {
      show: showNumberImpl
    };
    showInt = {
      show: showIntImpl
    };
    showBoolean = {
      show: function(v) {
        if (v) {
          return "true";
        }
        ;
        if (!v) {
          return "false";
        }
        ;
        throw new Error("Failed pattern match at Data.Show (line 23, column 1 - line 25, column 23): " + [v.constructor.name]);
      }
    };
    show = function(dict) {
      return dict.show;
    };
    showArray = function(dictShow) {
      return {
        show: showArrayImpl(show(dictShow))
      };
    };
    showRecordFieldsCons = function(dictIsSymbol) {
      return function(dictShowRecordFields) {
        return function(dictShow) {
          return {
            showRecordFields: function(v) {
              return function(record) {
                var tail2 = showRecordFields(dictShowRecordFields)($$Proxy.value)(record);
                var key = reflectSymbol(dictIsSymbol)($$Proxy.value);
                var focus = unsafeGet(key)(record);
                return cons(intercalate(": ")([key, show(dictShow)(focus)]))(tail2);
              };
            }
          };
        };
      };
    };
  }
});

// output/Data.Generic.Rep/index.js
var init_Data_Generic = __esm({
  "output/Data.Generic.Rep/index.js"() {
    init_Data14();
    init_Data5();
    init_Type();
  }
});

// output/Data.Maybe/index.js
var Nothing, Just, showMaybe, maybe$prime, maybe, isNothing, isJust, functorMaybe, fromMaybe, fromJust, eqMaybe, ordMaybe, applyMaybe, bindMaybe, applicativeMaybe, altMaybe;
var init_Data15 = __esm({
  "output/Data.Maybe/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data13();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data_Functor();
    init_Data_Generic();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data3();
    Nothing = /* @__PURE__ */ function() {
      function Nothing2() {
      }
      ;
      Nothing2.value = new Nothing2();
      return Nothing2;
    }();
    Just = /* @__PURE__ */ function() {
      function Just2(value0) {
        this.value0 = value0;
      }
      ;
      Just2.create = function(value0) {
        return new Just2(value0);
      };
      return Just2;
    }();
    showMaybe = function(dictShow) {
      return {
        show: function(v) {
          if (v instanceof Just) {
            return "(Just " + (show(dictShow)(v.value0) + ")");
          }
          ;
          if (v instanceof Nothing) {
            return "Nothing";
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): " + [v.constructor.name]);
        }
      };
    };
    maybe$prime = function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v(unit);
          }
          ;
          if (v2 instanceof Just) {
            return v1(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    };
    maybe = function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Nothing) {
            return v;
          }
          ;
          if (v2 instanceof Just) {
            return v1(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    };
    isNothing = /* @__PURE__ */ maybe(true)(/* @__PURE__ */ $$const(false));
    isJust = /* @__PURE__ */ maybe(false)(/* @__PURE__ */ $$const(true));
    functorMaybe = {
      map: function(v) {
        return function(v1) {
          if (v1 instanceof Just) {
            return new Just(v(v1.value0));
          }
          ;
          return Nothing.value;
        };
      }
    };
    fromMaybe = function(a) {
      return maybe(a)(identity(categoryFn));
    };
    fromJust = function() {
      return function(v) {
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        throw new Error("Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): " + [v.constructor.name]);
      };
    };
    eqMaybe = function(dictEq) {
      return {
        eq: function(x) {
          return function(y) {
            if (x instanceof Nothing && y instanceof Nothing) {
              return true;
            }
            ;
            if (x instanceof Just && y instanceof Just) {
              return eq(dictEq)(x.value0)(y.value0);
            }
            ;
            return false;
          };
        }
      };
    };
    ordMaybe = function(dictOrd) {
      return {
        compare: function(x) {
          return function(y) {
            if (x instanceof Nothing && y instanceof Nothing) {
              return EQ.value;
            }
            ;
            if (x instanceof Nothing) {
              return LT.value;
            }
            ;
            if (y instanceof Nothing) {
              return GT.value;
            }
            ;
            if (x instanceof Just && y instanceof Just) {
              return compare(dictOrd)(x.value0)(y.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
          };
        },
        Eq0: function() {
          return eqMaybe(dictOrd.Eq0());
        }
      };
    };
    applyMaybe = {
      apply: function(v) {
        return function(v1) {
          if (v instanceof Just) {
            return map(functorMaybe)(v.value0)(v1);
          }
          ;
          if (v instanceof Nothing) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorMaybe;
      }
    };
    bindMaybe = {
      bind: function(v) {
        return function(v1) {
          if (v instanceof Just) {
            return v1(v.value0);
          }
          ;
          if (v instanceof Nothing) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Apply0: function() {
        return applyMaybe;
      }
    };
    applicativeMaybe = /* @__PURE__ */ function() {
      return {
        pure: Just.create,
        Apply0: function() {
          return applyMaybe;
        }
      };
    }();
    altMaybe = {
      alt: function(v) {
        return function(v1) {
          if (v instanceof Nothing) {
            return v1;
          }
          ;
          return v;
        };
      },
      Functor0: function() {
        return functorMaybe;
      }
    };
  }
});

// output/Data.Either/index.js
var Left, Right, showEither, note, functorEither, either, hush, applyEither, bindEither, applicativeEither, altEither;
var init_Data16 = __esm({
  "output/Data.Either/index.js"() {
    init_Control6();
    init_Control3();
    init_Data13();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data_Functor();
    init_Data_Generic();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data3();
    Left = /* @__PURE__ */ function() {
      function Left2(value0) {
        this.value0 = value0;
      }
      ;
      Left2.create = function(value0) {
        return new Left2(value0);
      };
      return Left2;
    }();
    Right = /* @__PURE__ */ function() {
      function Right2(value0) {
        this.value0 = value0;
      }
      ;
      Right2.create = function(value0) {
        return new Right2(value0);
      };
      return Right2;
    }();
    showEither = function(dictShow) {
      return function(dictShow1) {
        return {
          show: function(v) {
            if (v instanceof Left) {
              return "(Left " + (show(dictShow)(v.value0) + ")");
            }
            ;
            if (v instanceof Right) {
              return "(Right " + (show(dictShow1)(v.value0) + ")");
            }
            ;
            throw new Error("Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): " + [v.constructor.name]);
          }
        };
      };
    };
    note = function(a) {
      return maybe(new Left(a))(Right.create);
    };
    functorEither = {
      map: function(f) {
        return function(m) {
          if (m instanceof Left) {
            return new Left(m.value0);
          }
          ;
          if (m instanceof Right) {
            return new Right(f(m.value0));
          }
          ;
          throw new Error("Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): " + [m.constructor.name]);
        };
      }
    };
    either = function(v) {
      return function(v1) {
        return function(v2) {
          if (v2 instanceof Left) {
            return v(v2.value0);
          }
          ;
          if (v2 instanceof Right) {
            return v1(v2.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
        };
      };
    };
    hush = /* @__PURE__ */ function() {
      return either($$const(Nothing.value))(Just.create);
    }();
    applyEither = {
      apply: function(v) {
        return function(v1) {
          if (v instanceof Left) {
            return new Left(v.value0);
          }
          ;
          if (v instanceof Right) {
            return map(functorEither)(v.value0)(v1);
          }
          ;
          throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorEither;
      }
    };
    bindEither = {
      bind: /* @__PURE__ */ either(function(e) {
        return function(v) {
          return new Left(e);
        };
      })(function(a) {
        return function(f) {
          return f(a);
        };
      }),
      Apply0: function() {
        return applyEither;
      }
    };
    applicativeEither = /* @__PURE__ */ function() {
      return {
        pure: Right.create,
        Apply0: function() {
          return applyEither;
        }
      };
    }();
    altEither = {
      alt: function(v) {
        return function(v1) {
          if (v instanceof Left) {
            return v1;
          }
          ;
          return v;
        };
      },
      Functor0: function() {
        return functorEither;
      }
    };
  }
});

// output/Effect/foreign.js
var pureE, bindE;
var init_foreign15 = __esm({
  "output/Effect/foreign.js"() {
    pureE = function(a) {
      return function() {
        return a;
      };
    };
    bindE = function(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    };
  }
});

// output/Control.Monad/index.js
var ap;
var init_Control7 = __esm({
  "output/Control.Monad/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data4();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data4();
    ap = function(dictMonad) {
      return function(f) {
        return function(a) {
          return bind(dictMonad.Bind1())(f)(function(f$prime) {
            return bind(dictMonad.Bind1())(a)(function(a$prime) {
              return pure(dictMonad.Applicative0())(f$prime(a$prime));
            });
          });
        };
      };
    };
  }
});

// output/Data.EuclideanRing/foreign.js
var intDegree, intDiv, intMod;
var init_foreign16 = __esm({
  "output/Data.EuclideanRing/foreign.js"() {
    intDegree = function(x) {
      return Math.min(Math.abs(x), 2147483647);
    };
    intDiv = function(x) {
      return function(y) {
        if (y === 0)
          return 0;
        return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
      };
    };
    intMod = function(x) {
      return function(y) {
        if (y === 0)
          return 0;
        var yy = Math.abs(y);
        return (x % yy + yy) % yy;
      };
    };
  }
});

// output/Data.CommutativeRing/index.js
var commutativeRingInt;
var init_Data17 = __esm({
  "output/Data.CommutativeRing/index.js"() {
    init_Data11();
    init_Data10();
    init_Data10();
    commutativeRingInt = {
      Ring0: function() {
        return ringInt;
      }
    };
  }
});

// output/Data.EuclideanRing/index.js
var mod, euclideanRingInt, div;
var init_Data18 = __esm({
  "output/Data.EuclideanRing/index.js"() {
    init_foreign16();
    init_Data17();
    init_Data8();
    init_Data11();
    init_Data10();
    init_Data11();
    init_Data10();
    mod = function(dict) {
      return dict.mod;
    };
    euclideanRingInt = {
      degree: intDegree,
      div: intDiv,
      mod: intMod,
      CommutativeRing0: function() {
        return commutativeRingInt;
      }
    };
    div = function(dict) {
      return dict.div;
    };
  }
});

// output/Data.Monoid/index.js
var monoidString, monoidRecordNil, monoidArray, memptyRecord, monoidRecord, mempty, monoidFn, monoidRecordCons, power, guard;
var init_Data19 = __esm({
  "output/Data.Monoid/index.js"() {
    init_Data();
    init_Data18();
    init_Data9();
    init_Data7();
    init_Data5();
    init_Data3();
    init_Record();
    init_Type();
    monoidString = {
      mempty: "",
      Semigroup0: function() {
        return semigroupString;
      }
    };
    monoidRecordNil = {
      memptyRecord: function(v) {
        return {};
      },
      SemigroupRecord0: function() {
        return semigroupRecordNil;
      }
    };
    monoidArray = {
      mempty: [],
      Semigroup0: function() {
        return semigroupArray;
      }
    };
    memptyRecord = function(dict) {
      return dict.memptyRecord;
    };
    monoidRecord = function() {
      return function(dictMonoidRecord) {
        return {
          mempty: memptyRecord(dictMonoidRecord)($$Proxy.value),
          Semigroup0: function() {
            return semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
          }
        };
      };
    };
    mempty = function(dict) {
      return dict.mempty;
    };
    monoidFn = function(dictMonoid) {
      return {
        mempty: function(v) {
          return mempty(dictMonoid);
        },
        Semigroup0: function() {
          return semigroupFn(dictMonoid.Semigroup0());
        }
      };
    };
    monoidRecordCons = function(dictIsSymbol) {
      return function(dictMonoid) {
        return function() {
          return function(dictMonoidRecord) {
            return {
              memptyRecord: function(v) {
                var tail2 = memptyRecord(dictMonoidRecord)($$Proxy.value);
                var key = reflectSymbol(dictIsSymbol)($$Proxy.value);
                var insert6 = unsafeSet(key);
                return insert6(mempty(dictMonoid))(tail2);
              },
              SemigroupRecord0: function() {
                return semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
              }
            };
          };
        };
      };
    };
    power = function(dictMonoid) {
      return function(x) {
        var go = function(p) {
          if (p <= 0) {
            return mempty(dictMonoid);
          }
          ;
          if (p === 1) {
            return x;
          }
          ;
          if (mod(euclideanRingInt)(p)(2) === 0) {
            var x$prime = go(div(euclideanRingInt)(p)(2));
            return append(dictMonoid.Semigroup0())(x$prime)(x$prime);
          }
          ;
          if (otherwise) {
            var x$prime = go(div(euclideanRingInt)(p)(2));
            return append(dictMonoid.Semigroup0())(x$prime)(append(dictMonoid.Semigroup0())(x$prime)(x));
          }
          ;
          throw new Error("Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): " + [p.constructor.name]);
        };
        return go;
      };
    };
    guard = function(dictMonoid) {
      return function(v) {
        return function(v1) {
          if (v) {
            return v1;
          }
          ;
          if (!v) {
            return mempty(dictMonoid);
          }
          ;
          throw new Error("Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): " + [v.constructor.name, v1.constructor.name]);
        };
      };
    };
  }
});

// output/Effect/index.js
var $runtime_lazy, monadEffect, bindEffect, applicativeEffect, $lazy_functorEffect, $lazy_applyEffect, functorEffect, applyEffect, semigroupEffect;
var init_Effect = __esm({
  "output/Effect/index.js"() {
    init_foreign15();
    init_Control4();
    init_Control3();
    init_Control7();
    init_Data19();
    init_Data7();
    init_foreign15();
    $runtime_lazy = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    monadEffect = {
      Applicative0: function() {
        return applicativeEffect;
      },
      Bind1: function() {
        return bindEffect;
      }
    };
    bindEffect = {
      bind: bindE,
      Apply0: function() {
        return $lazy_applyEffect(0);
      }
    };
    applicativeEffect = {
      pure: pureE,
      Apply0: function() {
        return $lazy_applyEffect(0);
      }
    };
    $lazy_functorEffect = /* @__PURE__ */ $runtime_lazy("functorEffect", "Effect", function() {
      return {
        map: liftA1(applicativeEffect)
      };
    });
    $lazy_applyEffect = /* @__PURE__ */ $runtime_lazy("applyEffect", "Effect", function() {
      return {
        apply: ap(monadEffect),
        Functor0: function() {
          return $lazy_functorEffect(0);
        }
      };
    });
    functorEffect = /* @__PURE__ */ $lazy_functorEffect(20);
    applyEffect = /* @__PURE__ */ $lazy_applyEffect(23);
    semigroupEffect = function(dictSemigroup) {
      return {
        append: lift2(applyEffect)(append(dictSemigroup))
      };
    };
  }
});

// output/Effect.Exception/foreign.js
function showErrorImpl(err) {
  return err.stack || err.toString();
}
function error(msg) {
  return new Error(msg);
}
function message(e) {
  return e.message;
}
function throwException(e) {
  return function() {
    throw e;
  };
}
function catchException(c2) {
  return function(t) {
    return function() {
      try {
        return t();
      } catch (e) {
        if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
          return c2(e)();
        } else {
          return c2(new Error(e.toString()))();
        }
      }
    };
  };
}
var init_foreign17 = __esm({
  "output/Effect.Exception/foreign.js"() {
  }
});

// output/Effect.Exception/index.js
var $$try, $$throw, showError;
var init_Effect2 = __esm({
  "output/Effect.Exception/index.js"() {
    init_foreign17();
    init_Control4();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Effect();
    init_foreign17();
    $$try = function(action) {
      return catchException(function() {
        var $0 = pure(applicativeEffect);
        return function($1) {
          return $0(Left.create($1));
        };
      }())(map(functorEffect)(Right.create)(action));
    };
    $$throw = function($2) {
      return throwException(error($2));
    };
    showError = {
      show: showErrorImpl
    };
  }
});

// output/Control.Monad.Error.Class/index.js
var throwError, monadThrowEffect, monadErrorEffect, catchError, $$try2;
var init_Control_Monad_Error = __esm({
  "output/Control.Monad.Error.Class/index.js"() {
    init_Control4();
    init_Control5();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data3();
    init_Effect();
    init_Effect2();
    throwError = function(dict) {
      return dict.throwError;
    };
    monadThrowEffect = {
      throwError: throwException,
      Monad0: function() {
        return monadEffect;
      }
    };
    monadErrorEffect = {
      catchError: /* @__PURE__ */ flip(catchException),
      MonadThrow0: function() {
        return monadThrowEffect;
      }
    };
    catchError = function(dict) {
      return dict.catchError;
    };
    $$try2 = function(dictMonadError) {
      return function(a) {
        return catchError(dictMonadError)(map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Right.create)(a))(function() {
          var $21 = pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
          return function($22) {
            return $21(Left.create($22));
          };
        }());
      };
    };
  }
});

// output/Control.Monad.Cont.Class/index.js
var init_Control_Monad_Cont = __esm({
  "output/Control.Monad.Cont.Class/index.js"() {
  }
});

// output/Control.Monad.Reader.Class/index.js
var init_Control_Monad_Reader = __esm({
  "output/Control.Monad.Reader.Class/index.js"() {
    init_Control2();
    init_Control7();
    init_Control();
    init_Data4();
  }
});

// output/Data.Identity/index.js
var Identity, functorIdentity, applyIdentity, bindIdentity, applicativeIdentity, monadIdentity;
var init_Data20 = __esm({
  "output/Data.Identity/index.js"() {
    init_Data8();
    init_Data_Functor();
    init_Data12();
    init_Data14();
    Identity = function(x) {
      return x;
    };
    functorIdentity = {
      map: function(f) {
        return function(m) {
          return f(m);
        };
      }
    };
    applyIdentity = {
      apply: function(v) {
        return function(v1) {
          return v(v1);
        };
      },
      Functor0: function() {
        return functorIdentity;
      }
    };
    bindIdentity = {
      bind: function(v) {
        return function(f) {
          return f(v);
        };
      },
      Apply0: function() {
        return applyIdentity;
      }
    };
    applicativeIdentity = {
      pure: Identity,
      Apply0: function() {
        return applyIdentity;
      }
    };
    monadIdentity = {
      Applicative0: function() {
        return applicativeIdentity;
      },
      Bind1: function() {
        return bindIdentity;
      }
    };
  }
});

// output/Effect.Ref/foreign.js
var _new, read, modifyImpl, write;
var init_foreign18 = __esm({
  "output/Effect.Ref/foreign.js"() {
    _new = function(val) {
      return function() {
        return { value: val };
      };
    };
    read = function(ref) {
      return function() {
        return ref.value;
      };
    };
    modifyImpl = function(f) {
      return function(ref) {
        return function() {
          var t = f(ref.value);
          ref.value = t.state;
          return t.value;
        };
      };
    };
    write = function(val) {
      return function(ref) {
        return function() {
          ref.value = val;
        };
      };
    };
  }
});

// output/Effect.Ref/index.js
var $$new, modify$prime, modify, modify_;
var init_Effect3 = __esm({
  "output/Effect.Ref/index.js"() {
    init_foreign18();
    init_Data4();
    init_Effect();
    init_foreign18();
    $$new = _new;
    modify$prime = modifyImpl;
    modify = function(f) {
      return modify$prime(function(s) {
        var s$prime = f(s);
        return {
          state: s$prime,
          value: s$prime
        };
      });
    };
    modify_ = function(f) {
      return function(s) {
        return $$void(functorEffect)(modify(f)(s));
      };
    };
  }
});

// output/Control.Monad.Rec.Class/index.js
var Loop, Done, tailRecM, tailRecM2;
var init_Control_Monad_Rec = __esm({
  "output/Control.Monad.Rec.Class/index.js"() {
    init_Control5();
    init_Control7();
    init_Data16();
    init_Data4();
    init_Data20();
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data3();
    init_Effect();
    init_Effect3();
    Loop = /* @__PURE__ */ function() {
      function Loop2(value0) {
        this.value0 = value0;
      }
      ;
      Loop2.create = function(value0) {
        return new Loop2(value0);
      };
      return Loop2;
    }();
    Done = /* @__PURE__ */ function() {
      function Done3(value0) {
        this.value0 = value0;
      }
      ;
      Done3.create = function(value0) {
        return new Done3(value0);
      };
      return Done3;
    }();
    tailRecM = function(dict) {
      return dict.tailRecM;
    };
    tailRecM2 = function(dictMonadRec) {
      return function(f) {
        return function(a) {
          return function(b) {
            return tailRecM(dictMonadRec)(function(o) {
              return f(o.a)(o.b);
            })({
              a,
              b
            });
          };
        };
      };
    };
  }
});

// output/Control.Lazy/index.js
var defer;
var init_Control8 = __esm({
  "output/Control.Lazy/index.js"() {
    init_Data3();
    defer = function(dict) {
      return dict.defer;
    };
  }
});

// output/Data.HeytingAlgebra/foreign.js
var boolConj, boolDisj, boolNot;
var init_foreign19 = __esm({
  "output/Data.HeytingAlgebra/foreign.js"() {
    boolConj = function(b1) {
      return function(b2) {
        return b1 && b2;
      };
    };
    boolDisj = function(b1) {
      return function(b2) {
        return b1 || b2;
      };
    };
    boolNot = function(b) {
      return !b;
    };
  }
});

// output/Data.HeytingAlgebra/index.js
var tt, not, implies, ff, disj, heytingAlgebraBoolean, conj, heytingAlgebraFunction;
var init_Data21 = __esm({
  "output/Data.HeytingAlgebra/index.js"() {
    init_foreign19();
    init_Data5();
    init_Data3();
    init_Record();
    init_Type();
    tt = function(dict) {
      return dict.tt;
    };
    not = function(dict) {
      return dict.not;
    };
    implies = function(dict) {
      return dict.implies;
    };
    ff = function(dict) {
      return dict.ff;
    };
    disj = function(dict) {
      return dict.disj;
    };
    heytingAlgebraBoolean = {
      ff: false,
      tt: true,
      implies: function(a) {
        return function(b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
        };
      },
      conj: boolConj,
      disj: boolDisj,
      not: boolNot
    };
    conj = function(dict) {
      return dict.conj;
    };
    heytingAlgebraFunction = function(dictHeytingAlgebra) {
      return {
        ff: function(v) {
          return ff(dictHeytingAlgebra);
        },
        tt: function(v) {
          return tt(dictHeytingAlgebra);
        },
        implies: function(f) {
          return function(g) {
            return function(a) {
              return implies(dictHeytingAlgebra)(f(a))(g(a));
            };
          };
        },
        conj: function(f) {
          return function(g) {
            return function(a) {
              return conj(dictHeytingAlgebra)(f(a))(g(a));
            };
          };
        },
        disj: function(f) {
          return function(g) {
            return function(a) {
              return disj(dictHeytingAlgebra)(f(a))(g(a));
            };
          };
        },
        not: function(f) {
          return function(a) {
            return not(dictHeytingAlgebra)(f(a));
          };
        }
      };
    };
  }
});

// output/Data.Tuple/index.js
var Tuple, uncurry, snd, showTuple, functorTuple, fst, eqTuple, ordTuple;
var init_Data22 = __esm({
  "output/Data.Tuple/index.js"() {
    init_Control8();
    init_Data13();
    init_Data8();
    init_Data_Functor();
    init_Data_Generic();
    init_Data21();
    init_Data19();
    init_Data12();
    init_Data9();
    init_Data11();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data3();
    Tuple = /* @__PURE__ */ function() {
      function Tuple2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Tuple2.create = function(value0) {
        return function(value1) {
          return new Tuple2(value0, value1);
        };
      };
      return Tuple2;
    }();
    uncurry = function(f) {
      return function(v) {
        return f(v.value0)(v.value1);
      };
    };
    snd = function(v) {
      return v.value1;
    };
    showTuple = function(dictShow) {
      return function(dictShow1) {
        return {
          show: function(v) {
            return "(Tuple " + (show(dictShow)(v.value0) + (" " + (show(dictShow1)(v.value1) + ")")));
          }
        };
      };
    };
    functorTuple = {
      map: function(f) {
        return function(m) {
          return new Tuple(m.value0, f(m.value1));
        };
      }
    };
    fst = function(v) {
      return v.value0;
    };
    eqTuple = function(dictEq) {
      return function(dictEq1) {
        return {
          eq: function(x) {
            return function(y) {
              return eq(dictEq)(x.value0)(y.value0) && eq(dictEq1)(x.value1)(y.value1);
            };
          }
        };
      };
    };
    ordTuple = function(dictOrd) {
      return function(dictOrd1) {
        return {
          compare: function(x) {
            return function(y) {
              var v = compare(dictOrd)(x.value0)(y.value0);
              if (v instanceof LT) {
                return LT.value;
              }
              ;
              if (v instanceof GT) {
                return GT.value;
              }
              ;
              return compare(dictOrd1)(x.value1)(y.value1);
            };
          },
          Eq0: function() {
            return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
          }
        };
      };
    };
  }
});

// output/Control.Monad.State.Class/index.js
var init_Control_Monad_State = __esm({
  "output/Control.Monad.State.Class/index.js"() {
    init_Data22();
    init_Data3();
  }
});

// output/Control.Monad.Trans.Class/index.js
var init_Control_Monad_Trans = __esm({
  "output/Control.Monad.Trans.Class/index.js"() {
  }
});

// output/Control.Monad.Writer.Class/index.js
var init_Control_Monad_Writer = __esm({
  "output/Control.Monad.Writer.Class/index.js"() {
    init_Control4();
    init_Control5();
    init_Data22();
  }
});

// output/Effect.Class/index.js
var monadEffectEffect, liftEffect;
var init_Effect4 = __esm({
  "output/Effect.Class/index.js"() {
    init_Control2();
    init_Effect();
    monadEffectEffect = {
      liftEffect: /* @__PURE__ */ identity(categoryFn),
      Monad0: function() {
        return monadEffect;
      }
    };
    liftEffect = function(dict) {
      return dict.liftEffect;
    };
  }
});

// output/Control.Monad.Except.Trans/index.js
var ExceptT, runExceptT, mapExceptT, functorExceptT, monadExceptT, bindExceptT, applyExceptT, applicativeExceptT, monadThrowExceptT, altExceptT;
var init_Control_Monad_Except = __esm({
  "output/Control.Monad.Except.Trans/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control7();
    init_Control_Monad_Cont();
    init_Control_Monad_Error();
    init_Control_Monad_Reader();
    init_Control_Monad_Rec();
    init_Control_Monad_State();
    init_Control_Monad_Trans();
    init_Control_Monad_Writer();
    init_Data16();
    init_Data4();
    init_Data19();
    init_Data7();
    init_Data22();
    init_Effect4();
    init_Control_Monad_Error();
    init_Control_Monad_Trans();
    ExceptT = function(x) {
      return x;
    };
    runExceptT = function(v) {
      return v;
    };
    mapExceptT = function(f) {
      return function(v) {
        return f(v);
      };
    };
    functorExceptT = function(dictFunctor) {
      return {
        map: function(f) {
          return mapExceptT(map(dictFunctor)(map(functorEither)(f)));
        }
      };
    };
    monadExceptT = function(dictMonad) {
      return {
        Applicative0: function() {
          return applicativeExceptT(dictMonad);
        },
        Bind1: function() {
          return bindExceptT(dictMonad);
        }
      };
    };
    bindExceptT = function(dictMonad) {
      return {
        bind: function(v) {
          return function(k) {
            return bind(dictMonad.Bind1())(v)(either(function() {
              var $89 = pure(dictMonad.Applicative0());
              return function($90) {
                return $89(Left.create($90));
              };
            }())(function(a) {
              var v1 = k(a);
              return v1;
            }));
          };
        },
        Apply0: function() {
          return applyExceptT(dictMonad);
        }
      };
    };
    applyExceptT = function(dictMonad) {
      return {
        apply: ap(monadExceptT(dictMonad)),
        Functor0: function() {
          return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
        }
      };
    };
    applicativeExceptT = function(dictMonad) {
      return {
        pure: function() {
          var $91 = pure(dictMonad.Applicative0());
          return function($92) {
            return ExceptT($91(Right.create($92)));
          };
        }(),
        Apply0: function() {
          return applyExceptT(dictMonad);
        }
      };
    };
    monadThrowExceptT = function(dictMonad) {
      return {
        throwError: function() {
          var $101 = pure(dictMonad.Applicative0());
          return function($102) {
            return ExceptT($101(Left.create($102)));
          };
        }(),
        Monad0: function() {
          return monadExceptT(dictMonad);
        }
      };
    };
    altExceptT = function(dictSemigroup) {
      return function(dictMonad) {
        return {
          alt: function(v) {
            return function(v1) {
              return bind(dictMonad.Bind1())(v)(function(rm) {
                if (rm instanceof Right) {
                  return pure(dictMonad.Applicative0())(new Right(rm.value0));
                }
                ;
                if (rm instanceof Left) {
                  return bind(dictMonad.Bind1())(v1)(function(rn) {
                    if (rn instanceof Right) {
                      return pure(dictMonad.Applicative0())(new Right(rn.value0));
                    }
                    ;
                    if (rn instanceof Left) {
                      return pure(dictMonad.Applicative0())(new Left(append(dictSemigroup)(rm.value0)(rn.value0)));
                    }
                    ;
                    throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [rn.constructor.name]);
                  });
                }
                ;
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [rm.constructor.name]);
              });
            };
          },
          Functor0: function() {
            return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
          }
        };
      };
    };
  }
});

// output/Unsafe.Coerce/foreign.js
var unsafeCoerce2;
var init_foreign20 = __esm({
  "output/Unsafe.Coerce/foreign.js"() {
    unsafeCoerce2 = function(x) {
      return x;
    };
  }
});

// output/Unsafe.Coerce/index.js
var init_Unsafe = __esm({
  "output/Unsafe.Coerce/index.js"() {
    init_foreign20();
    init_foreign20();
  }
});

// output/Safe.Coerce/index.js
var coerce;
var init_Safe = __esm({
  "output/Safe.Coerce/index.js"() {
    init_Unsafe();
    coerce = function() {
      return unsafeCoerce2;
    };
  }
});

// output/Data.Newtype/index.js
var unwrap, un, over, alaF;
var init_Data23 = __esm({
  "output/Data.Newtype/index.js"() {
    init_Safe();
    unwrap = coerce;
    un = function() {
      return function(v) {
        return unwrap();
      };
    };
    over = function() {
      return function() {
        return function(v) {
          return coerce();
        };
      };
    };
    alaF = function() {
      return function() {
        return function() {
          return function() {
            return function(v) {
              return coerce();
            };
          };
        };
      };
    };
  }
});

// output/Control.Monad.Except/index.js
var runExcept;
var init_Control_Monad = __esm({
  "output/Control.Monad.Except/index.js"() {
    init_Control_Monad_Error();
    init_Control_Monad_Except();
    init_Data20();
    init_Data23();
    init_Control_Monad_Error();
    init_Control_Monad_Except();
    runExcept = /* @__PURE__ */ function() {
      var $0 = unwrap();
      return function($1) {
        return $0(runExceptT($1));
      };
    }();
  }
});

// output/Control.Promise/foreign.js
function promise(f) {
  return function() {
    return new Promise(function(success, error4) {
      var succF = function(s) {
        return function() {
          return success(s);
        };
      };
      var failF = function(s) {
        return function() {
          return error4(s);
        };
      };
      try {
        f(succF)(failF)();
      } catch (e) {
        error4(e);
      }
    });
  };
}
function thenImpl(promise2) {
  return function(errCB) {
    return function(succCB) {
      return function() {
        promise2.then(succCB, errCB);
      };
    };
  };
}
var init_foreign21 = __esm({
  "output/Control.Promise/foreign.js"() {
  }
});

// output/Data.Foldable/foreign.js
var foldrArray, foldlArray;
var init_foreign22 = __esm({
  "output/Data.Foldable/foreign.js"() {
    foldrArray = function(f) {
      return function(init3) {
        return function(xs) {
          var acc = init3;
          var len = xs.length;
          for (var i = len - 1; i >= 0; i--) {
            acc = f(xs[i])(acc);
          }
          return acc;
        };
      };
    };
    foldlArray = function(f) {
      return function(init3) {
        return function(xs) {
          var acc = init3;
          var len = xs.length;
          for (var i = 0; i < len; i++) {
            acc = f(acc)(xs[i]);
          }
          return acc;
        };
      };
    };
  }
});

// output/Control.Plus/index.js
var empty;
var init_Control9 = __esm({
  "output/Control.Plus/index.js"() {
    init_Control6();
    init_Data4();
    init_Control6();
    init_Data4();
    empty = function(dict) {
      return dict.empty;
    };
  }
});

// output/Control.Extend/foreign.js
var init_foreign23 = __esm({
  "output/Control.Extend/foreign.js"() {
  }
});

// output/Control.Extend/index.js
var init_Control10 = __esm({
  "output/Control.Extend/index.js"() {
    init_foreign23();
    init_Control2();
    init_Data4();
    init_Data7();
    init_Data4();
  }
});

// output/Control.Comonad/index.js
var init_Control11 = __esm({
  "output/Control.Comonad/index.js"() {
    init_Control10();
    init_Data4();
    init_Control10();
    init_Data4();
  }
});

// output/Data.Bifunctor/index.js
var bimap, lmap, bifunctorTuple, bifunctorEither;
var init_Data24 = __esm({
  "output/Data.Bifunctor/index.js"() {
    init_Control2();
    init_Data16();
    init_Data22();
    bimap = function(dict) {
      return dict.bimap;
    };
    lmap = function(dictBifunctor) {
      return function(f) {
        return bimap(dictBifunctor)(f)(identity(categoryFn));
      };
    };
    bifunctorTuple = {
      bimap: function(f) {
        return function(g) {
          return function(v) {
            return new Tuple(f(v.value0), g(v.value1));
          };
        };
      }
    };
    bifunctorEither = {
      bimap: function(v) {
        return function(v1) {
          return function(v2) {
            if (v2 instanceof Left) {
              return new Left(v(v2.value0));
            }
            ;
            if (v2 instanceof Right) {
              return new Right(v1(v2.value0));
            }
            ;
            throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
          };
        };
      }
    };
  }
});

// output/Data.Functor.Coproduct/index.js
var init_Data_Functor2 = __esm({
  "output/Data.Functor.Coproduct/index.js"() {
    init_Control11();
    init_Control10();
    init_Data24();
    init_Data16();
    init_Data8();
    init_Data4();
    init_Data12();
    init_Data9();
    init_Data14();
  }
});

// output/Data.Maybe.First/index.js
var init_Data_Maybe = __esm({
  "output/Data.Maybe.First/index.js"() {
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data14();
  }
});

// output/Data.Monoid.Conj/index.js
var Conj, semigroupConj, monoidConj;
var init_Data_Monoid = __esm({
  "output/Data.Monoid.Conj/index.js"() {
    init_Data8();
    init_Data21();
    init_Data12();
    init_Data14();
    Conj = function(x) {
      return x;
    };
    semigroupConj = function(dictHeytingAlgebra) {
      return {
        append: function(v) {
          return function(v1) {
            return conj(dictHeytingAlgebra)(v)(v1);
          };
        }
      };
    };
    monoidConj = function(dictHeytingAlgebra) {
      return {
        mempty: tt(dictHeytingAlgebra),
        Semigroup0: function() {
          return semigroupConj(dictHeytingAlgebra);
        }
      };
    };
  }
});

// output/Data.Monoid.Disj/index.js
var Disj, semigroupDisj, monoidDisj;
var init_Data_Monoid2 = __esm({
  "output/Data.Monoid.Disj/index.js"() {
    init_Data8();
    init_Data21();
    init_Data12();
    init_Data14();
    Disj = function(x) {
      return x;
    };
    semigroupDisj = function(dictHeytingAlgebra) {
      return {
        append: function(v) {
          return function(v1) {
            return disj(dictHeytingAlgebra)(v)(v1);
          };
        }
      };
    };
    monoidDisj = function(dictHeytingAlgebra) {
      return {
        mempty: ff(dictHeytingAlgebra),
        Semigroup0: function() {
          return semigroupDisj(dictHeytingAlgebra);
        }
      };
    };
  }
});

// output/Data.Monoid.Dual/index.js
var init_Data_Monoid3 = __esm({
  "output/Data.Monoid.Dual/index.js"() {
    init_Data8();
    init_Data19();
    init_Data12();
    init_Data7();
    init_Data14();
  }
});

// output/Data.Monoid.Endo/index.js
var init_Data_Monoid4 = __esm({
  "output/Data.Monoid.Endo/index.js"() {
    init_Control2();
    init_Control();
    init_Data14();
  }
});

// output/Data.Foldable/index.js
var foldr, traverse_, for_, foldl, intercalate2, length, foldableTuple, foldableMaybe, foldMapDefaultR, foldableArray, foldMap, fold, find, any, elem, notElem, or, all;
var init_Data25 = __esm({
  "output/Data.Foldable/index.js"() {
    init_foreign22();
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control9();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data_Functor2();
    init_Data21();
    init_Data15();
    init_Data_Maybe();
    init_Data19();
    init_Data_Monoid();
    init_Data_Monoid2();
    init_Data_Monoid3();
    init_Data_Monoid4();
    init_Data23();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data10();
    init_Data3();
    foldr = function(dict) {
      return dict.foldr;
    };
    traverse_ = function(dictApplicative) {
      return function(dictFoldable) {
        return function(f) {
          return foldr(dictFoldable)(function() {
            var $316 = applySecond(dictApplicative.Apply0());
            return function($317) {
              return $316(f($317));
            };
          }())(pure(dictApplicative)(unit));
        };
      };
    };
    for_ = function(dictApplicative) {
      return function(dictFoldable) {
        return flip(traverse_(dictApplicative)(dictFoldable));
      };
    };
    foldl = function(dict) {
      return dict.foldl;
    };
    intercalate2 = function(dictFoldable) {
      return function(dictMonoid) {
        return function(sep2) {
          return function(xs) {
            var go = function(v) {
              return function(x) {
                if (v.init) {
                  return {
                    init: false,
                    acc: x
                  };
                }
                ;
                return {
                  init: false,
                  acc: append(dictMonoid.Semigroup0())(v.acc)(append(dictMonoid.Semigroup0())(sep2)(x))
                };
              };
            };
            return foldl(dictFoldable)(go)({
              init: true,
              acc: mempty(dictMonoid)
            })(xs).acc;
          };
        };
      };
    };
    length = function(dictFoldable) {
      return function(dictSemiring) {
        return foldl(dictFoldable)(function(c2) {
          return function(v) {
            return add(dictSemiring)(one(dictSemiring))(c2);
          };
        })(zero(dictSemiring));
      };
    };
    foldableTuple = {
      foldr: function(f) {
        return function(z) {
          return function(v) {
            return f(v.value1)(z);
          };
        };
      },
      foldl: function(f) {
        return function(z) {
          return function(v) {
            return f(z)(v.value1);
          };
        };
      },
      foldMap: function(dictMonoid) {
        return function(f) {
          return function(v) {
            return f(v.value1);
          };
        };
      }
    };
    foldableMaybe = {
      foldr: function(v) {
        return function(z) {
          return function(v1) {
            if (v1 instanceof Nothing) {
              return z;
            }
            ;
            if (v1 instanceof Just) {
              return v(v1.value0)(z);
            }
            ;
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
          };
        };
      },
      foldl: function(v) {
        return function(z) {
          return function(v1) {
            if (v1 instanceof Nothing) {
              return z;
            }
            ;
            if (v1 instanceof Just) {
              return v(z)(v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
          };
        };
      },
      foldMap: function(dictMonoid) {
        return function(v) {
          return function(v1) {
            if (v1 instanceof Nothing) {
              return mempty(dictMonoid);
            }
            ;
            if (v1 instanceof Just) {
              return v(v1.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [v.constructor.name, v1.constructor.name]);
          };
        };
      }
    };
    foldMapDefaultR = function(dictFoldable) {
      return function(dictMonoid) {
        return function(f) {
          return foldr(dictFoldable)(function(x) {
            return function(acc) {
              return append(dictMonoid.Semigroup0())(f(x))(acc);
            };
          })(mempty(dictMonoid));
        };
      };
    };
    foldableArray = {
      foldr: foldrArray,
      foldl: foldlArray,
      foldMap: function(dictMonoid) {
        return foldMapDefaultR(foldableArray)(dictMonoid);
      }
    };
    foldMap = function(dict) {
      return dict.foldMap;
    };
    fold = function(dictFoldable) {
      return function(dictMonoid) {
        return foldMap(dictFoldable)(dictMonoid)(identity(categoryFn));
      };
    };
    find = function(dictFoldable) {
      return function(p) {
        var go = function(v) {
          return function(v1) {
            if (v instanceof Nothing && p(v1)) {
              return new Just(v1);
            }
            ;
            return v;
          };
        };
        return foldl(dictFoldable)(go)(Nothing.value);
      };
    };
    any = function(dictFoldable) {
      return function(dictHeytingAlgebra) {
        return alaF()()()()(Disj)(foldMap(dictFoldable)(monoidDisj(dictHeytingAlgebra)));
      };
    };
    elem = function(dictFoldable) {
      return function(dictEq) {
        var $326 = any(dictFoldable)(heytingAlgebraBoolean);
        var $327 = eq(dictEq);
        return function($328) {
          return $326($327($328));
        };
      };
    };
    notElem = function(dictFoldable) {
      return function(dictEq) {
        return function(x) {
          var $329 = not(heytingAlgebraBoolean);
          var $330 = elem(dictFoldable)(dictEq)(x);
          return function($331) {
            return $329($330($331));
          };
        };
      };
    };
    or = function(dictFoldable) {
      return function(dictHeytingAlgebra) {
        return any(dictFoldable)(dictHeytingAlgebra)(identity(categoryFn));
      };
    };
    all = function(dictFoldable) {
      return function(dictHeytingAlgebra) {
        return alaF()()()()(Conj)(foldMap(dictFoldable)(monoidConj(dictHeytingAlgebra)));
      };
    };
  }
});

// output/Data.FunctorWithIndex/foreign.js
var mapWithIndexArray;
var init_foreign24 = __esm({
  "output/Data.FunctorWithIndex/foreign.js"() {
    mapWithIndexArray = function(f) {
      return function(xs) {
        var l = xs.length;
        var result2 = Array(l);
        for (var i = 0; i < l; i++) {
          result2[i] = f(i)(xs[i]);
        }
        return result2;
      };
    };
  }
});

// output/Data.Const/index.js
var Const, functorConst, applyConst, applicativeConst;
var init_Data26 = __esm({
  "output/Data.Const/index.js"() {
    init_Data8();
    init_Data_Functor();
    init_Data19();
    init_Data12();
    init_Data7();
    init_Data14();
    Const = function(x) {
      return x;
    };
    functorConst = {
      map: function(f) {
        return function(m) {
          return m;
        };
      }
    };
    applyConst = function(dictSemigroup) {
      return {
        apply: function(v) {
          return function(v1) {
            return append(dictSemigroup)(v)(v1);
          };
        },
        Functor0: function() {
          return functorConst;
        }
      };
    };
    applicativeConst = function(dictMonoid) {
      return {
        pure: function(v) {
          return mempty(dictMonoid);
        },
        Apply0: function() {
          return applyConst(dictMonoid.Semigroup0());
        }
      };
    };
  }
});

// output/Data.Functor.App/index.js
var init_Data_Functor3 = __esm({
  "output/Data.Functor.App/index.js"() {
    init_Control4();
    init_Control3();
    init_Data8();
    init_Data19();
    init_Data12();
    init_Data7();
    init_Data14();
    init_Unsafe();
  }
});

// output/Data.Functor.Compose/index.js
var Compose, functorCompose, applyCompose, applicativeCompose;
var init_Data_Functor4 = __esm({
  "output/Data.Functor.Compose/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control9();
    init_Data8();
    init_Data4();
    init_Data_Functor3();
    init_Data12();
    init_Data14();
    Compose = function(x) {
      return x;
    };
    functorCompose = function(dictFunctor) {
      return function(dictFunctor1) {
        return {
          map: function(f) {
            return function(v) {
              return map(dictFunctor)(map(dictFunctor1)(f))(v);
            };
          }
        };
      };
    };
    applyCompose = function(dictApply) {
      return function(dictApply1) {
        return {
          apply: function(v) {
            return function(v1) {
              return apply(dictApply)(map(dictApply.Functor0())(apply(dictApply1))(v))(v1);
            };
          },
          Functor0: function() {
            return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
          }
        };
      };
    };
    applicativeCompose = function(dictApplicative) {
      return function(dictApplicative1) {
        return {
          pure: function() {
            var $51 = pure(dictApplicative);
            var $52 = pure(dictApplicative1);
            return function($53) {
              return Compose($51($52($53)));
            };
          }(),
          Apply0: function() {
            return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
          }
        };
      };
    };
  }
});

// output/Data.Functor.Product/index.js
var init_Data_Functor5 = __esm({
  "output/Data.Functor.Product/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data24();
    init_Data8();
    init_Data4();
    init_Data23();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data22();
  }
});

// output/Data.Maybe.Last/index.js
var init_Data_Maybe2 = __esm({
  "output/Data.Maybe.Last/index.js"() {
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data14();
  }
});

// output/Data.Monoid.Additive/index.js
var init_Data_Monoid5 = __esm({
  "output/Data.Monoid.Additive/index.js"() {
    init_Data8();
    init_Data12();
    init_Data10();
    init_Data14();
  }
});

// output/Data.Monoid.Multiplicative/index.js
var init_Data_Monoid6 = __esm({
  "output/Data.Monoid.Multiplicative/index.js"() {
    init_Data8();
    init_Data12();
    init_Data10();
    init_Data14();
  }
});

// output/Data.FunctorWithIndex/index.js
var mapWithIndex, functorWithIndexArray;
var init_Data27 = __esm({
  "output/Data.FunctorWithIndex/index.js"() {
    init_foreign24();
    init_Data24();
    init_Data26();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data_Functor3();
    init_Data_Functor4();
    init_Data_Functor2();
    init_Data_Functor5();
    init_Data20();
    init_Data15();
    init_Data_Maybe();
    init_Data_Maybe2();
    init_Data_Monoid5();
    init_Data_Monoid();
    init_Data_Monoid2();
    init_Data_Monoid3();
    init_Data_Monoid6();
    init_Data22();
    init_Data3();
    mapWithIndex = function(dict) {
      return dict.mapWithIndex;
    };
    functorWithIndexArray = {
      mapWithIndex: mapWithIndexArray,
      Functor0: function() {
        return functorArray;
      }
    };
  }
});

// output/Data.FoldableWithIndex/index.js
var foldrWithIndex, foldlWithIndex, foldMapWithIndexDefaultR, foldableWithIndexArray, foldMapWithIndex;
var init_Data28 = __esm({
  "output/Data.FoldableWithIndex/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data_Functor2();
    init_Data27();
    init_Data15();
    init_Data19();
    init_Data_Monoid();
    init_Data_Monoid2();
    init_Data_Monoid3();
    init_Data_Monoid4();
    init_Data23();
    init_Data7();
    init_Data22();
    init_Data3();
    foldrWithIndex = function(dict) {
      return dict.foldrWithIndex;
    };
    foldlWithIndex = function(dict) {
      return dict.foldlWithIndex;
    };
    foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
      return function(dictMonoid) {
        return function(f) {
          return foldrWithIndex(dictFoldableWithIndex)(function(i) {
            return function(x) {
              return function(acc) {
                return append(dictMonoid.Semigroup0())(f(i)(x))(acc);
              };
            };
          })(mempty(dictMonoid));
        };
      };
    };
    foldableWithIndexArray = {
      foldrWithIndex: function(f) {
        return function(z) {
          var $167 = foldr(foldableArray)(function(v) {
            return function(y) {
              return f(v.value0)(v.value1)(y);
            };
          })(z);
          var $168 = mapWithIndex(functorWithIndexArray)(Tuple.create);
          return function($169) {
            return $167($168($169));
          };
        };
      },
      foldlWithIndex: function(f) {
        return function(z) {
          var $170 = foldl(foldableArray)(function(y) {
            return function(v) {
              return f(v.value0)(y)(v.value1);
            };
          })(z);
          var $171 = mapWithIndex(functorWithIndexArray)(Tuple.create);
          return function($172) {
            return $170($171($172));
          };
        };
      },
      foldMapWithIndex: function(dictMonoid) {
        return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
      },
      Foldable0: function() {
        return foldableArray;
      }
    };
    foldMapWithIndex = function(dict) {
      return dict.foldMapWithIndex;
    };
  }
});

// output/Data.Ord.Max/index.js
var init_Data_Ord = __esm({
  "output/Data.Ord.Max/index.js"() {
    init_Data13();
    init_Data12();
    init_Data14();
  }
});

// output/Data.Ord.Min/index.js
var init_Data_Ord2 = __esm({
  "output/Data.Ord.Min/index.js"() {
    init_Data13();
    init_Data12();
    init_Data14();
  }
});

// output/Data.Semigroup.Foldable/index.js
var foldl1, foldMap1DefaultL;
var init_Data_Semigroup = __esm({
  "output/Data.Semigroup.Foldable/index.js"() {
    init_Control3();
    init_Control2();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data_Monoid3();
    init_Data23();
    init_Data_Ord();
    init_Data_Ord2();
    init_Data9();
    init_Data7();
    init_Data3();
    foldl1 = function(dict) {
      return dict.foldl1;
    };
    foldMap1DefaultL = function(dictFoldable1) {
      return function(dictFunctor) {
        return function(dictSemigroup) {
          return function(f) {
            var $114 = foldl1(dictFoldable1)(append(dictSemigroup));
            var $115 = map(dictFunctor)(f);
            return function($116) {
              return $114($115($116));
            };
          };
        };
      };
    };
  }
});

// output/Data.Traversable/foreign.js
var traverseArrayImpl;
var init_foreign25 = __esm({
  "output/Data.Traversable/foreign.js"() {
    traverseArrayImpl = function() {
      function array1(a) {
        return [a];
      }
      function array2(a) {
        return function(b) {
          return [a, b];
        };
      }
      function array3(a) {
        return function(b) {
          return function(c2) {
            return [a, b, c2];
          };
        };
      }
      function concat22(xs) {
        return function(ys) {
          return xs.concat(ys);
        };
      }
      return function(apply3) {
        return function(map2) {
          return function(pure2) {
            return function(f) {
              return function(array) {
                function go(bot, top2) {
                  switch (top2 - bot) {
                    case 0:
                      return pure2([]);
                    case 1:
                      return map2(array1)(f(array[bot]));
                    case 2:
                      return apply3(map2(array2)(f(array[bot])))(f(array[bot + 1]));
                    case 3:
                      return apply3(apply3(map2(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                    default:
                      var pivot = bot + Math.floor((top2 - bot) / 4) * 2;
                      return apply3(map2(concat22)(go(bot, pivot)))(go(pivot, top2));
                  }
                }
                return go(0, array.length);
              };
            };
          };
        };
      };
    }();
  }
});

// output/Data.Traversable.Accum.Internal/index.js
var init_Data_Traversable_Accum = __esm({
  "output/Data.Traversable.Accum.Internal/index.js"() {
  }
});

// output/Data.Traversable/index.js
var traverse, traversableTuple, traversableMaybe, sequenceDefault, traversableArray, sequence, $$for;
var init_Data29 = __esm({
  "output/Data.Traversable/index.js"() {
    init_foreign25();
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data26();
    init_Data16();
    init_Data25();
    init_Data4();
    init_Data_Functor3();
    init_Data_Functor4();
    init_Data_Functor2();
    init_Data_Functor5();
    init_Data20();
    init_Data15();
    init_Data_Maybe();
    init_Data_Maybe2();
    init_Data_Monoid5();
    init_Data_Monoid();
    init_Data_Monoid2();
    init_Data_Monoid3();
    init_Data_Monoid6();
    init_Data_Traversable_Accum();
    init_Data22();
    init_Data25();
    traverse = function(dict) {
      return dict.traverse;
    };
    traversableTuple = {
      traverse: function(dictApplicative) {
        return function(f) {
          return function(v) {
            return map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(f(v.value1));
          };
        };
      },
      sequence: function(dictApplicative) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(Tuple.create(v.value0))(v.value1);
        };
      },
      Functor0: function() {
        return functorTuple;
      },
      Foldable1: function() {
        return foldableTuple;
      }
    };
    traversableMaybe = {
      traverse: function(dictApplicative) {
        return function(v) {
          return function(v1) {
            if (v1 instanceof Nothing) {
              return pure(dictApplicative)(Nothing.value);
            }
            ;
            if (v1 instanceof Just) {
              return map(dictApplicative.Apply0().Functor0())(Just.create)(v(v1.value0));
            }
            ;
            throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name, v1.constructor.name]);
          };
        };
      },
      sequence: function(dictApplicative) {
        return function(v) {
          if (v instanceof Nothing) {
            return pure(dictApplicative)(Nothing.value);
          }
          ;
          if (v instanceof Just) {
            return map(dictApplicative.Apply0().Functor0())(Just.create)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at Data.Traversable (line 115, column 1 - line 119, column 33): " + [v.constructor.name]);
        };
      },
      Functor0: function() {
        return functorMaybe;
      },
      Foldable1: function() {
        return foldableMaybe;
      }
    };
    sequenceDefault = function(dictTraversable) {
      return function(dictApplicative) {
        return traverse(dictTraversable)(dictApplicative)(identity(categoryFn));
      };
    };
    traversableArray = {
      traverse: function(dictApplicative) {
        return traverseArrayImpl(apply(dictApplicative.Apply0()))(map(dictApplicative.Apply0().Functor0()))(pure(dictApplicative));
      },
      sequence: function(dictApplicative) {
        return sequenceDefault(traversableArray)(dictApplicative);
      },
      Functor0: function() {
        return functorArray;
      },
      Foldable1: function() {
        return foldableArray;
      }
    };
    sequence = function(dict) {
      return dict.sequence;
    };
    $$for = function(dictApplicative) {
      return function(dictTraversable) {
        return function(x) {
          return function(f) {
            return traverse(dictTraversable)(dictApplicative)(f)(x);
          };
        };
      };
    };
  }
});

// output/Data.TraversableWithIndex/index.js
var traverseWithIndexDefault, traverseWithIndex, traversableWithIndexArray;
var init_Data30 = __esm({
  "output/Data.TraversableWithIndex/index.js"() {
    init_Control4();
    init_Control3();
    init_Data16();
    init_Data28();
    init_Data2();
    init_Data4();
    init_Data_Functor3();
    init_Data_Functor4();
    init_Data_Functor2();
    init_Data_Functor5();
    init_Data27();
    init_Data20();
    init_Data29();
    init_Data_Traversable_Accum();
    init_Data22();
    init_Data3();
    traverseWithIndexDefault = function(dictTraversableWithIndex) {
      return function(dictApplicative) {
        return function(f) {
          var $64 = sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
          var $65 = mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
          return function($66) {
            return $64($65($66));
          };
        };
      };
    };
    traverseWithIndex = function(dict) {
      return dict.traverseWithIndex;
    };
    traversableWithIndexArray = {
      traverseWithIndex: function(dictApplicative) {
        return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
      },
      FunctorWithIndex0: function() {
        return functorWithIndexArray;
      },
      FoldableWithIndex1: function() {
        return foldableWithIndexArray;
      },
      Traversable2: function() {
        return traversableArray;
      }
    };
  }
});

// output/Data.Unfoldable/foreign.js
var unfoldrArrayImpl;
var init_foreign26 = __esm({
  "output/Data.Unfoldable/foreign.js"() {
    unfoldrArrayImpl = function(isNothing2) {
      return function(fromJust2) {
        return function(fst2) {
          return function(snd2) {
            return function(f) {
              return function(b) {
                var result2 = [];
                var value = b;
                while (true) {
                  var maybe2 = f(value);
                  if (isNothing2(maybe2))
                    return result2;
                  var tuple = fromJust2(maybe2);
                  result2.push(fst2(tuple));
                  value = snd2(tuple);
                }
              };
            };
          };
        };
      };
    };
  }
});

// output/Data.Unfoldable1/foreign.js
var unfoldr1ArrayImpl;
var init_foreign27 = __esm({
  "output/Data.Unfoldable1/foreign.js"() {
    unfoldr1ArrayImpl = function(isNothing2) {
      return function(fromJust2) {
        return function(fst2) {
          return function(snd2) {
            return function(f) {
              return function(b) {
                var result2 = [];
                var value = b;
                while (true) {
                  var tuple = f(value);
                  result2.push(fst2(tuple));
                  var maybe2 = snd2(tuple);
                  if (isNothing2(maybe2))
                    return result2;
                  value = fromJust2(maybe2);
                }
              };
            };
          };
        };
      };
    };
  }
});

// output/Data.Semigroup.Traversable/index.js
var init_Data_Semigroup2 = __esm({
  "output/Data.Semigroup.Traversable/index.js"() {
    init_Control2();
    init_Data4();
    init_Data20();
    init_Data_Monoid3();
    init_Data_Monoid6();
    init_Data_Semigroup();
    init_Data29();
    init_Data22();
  }
});

// output/Data.Unfoldable1/index.js
var unfoldable1Array;
var init_Data31 = __esm({
  "output/Data.Unfoldable1/index.js"() {
    init_foreign27();
    init_Data();
    init_Data15();
    init_Data_Semigroup2();
    init_Data22();
    unfoldable1Array = {
      unfoldr1: /* @__PURE__ */ unfoldr1ArrayImpl(isNothing)(/* @__PURE__ */ fromJust())(fst)(snd)
    };
  }
});

// output/Data.Unfoldable/index.js
var unfoldr, unfoldableArray;
var init_Data32 = __esm({
  "output/Data.Unfoldable/index.js"() {
    init_foreign26();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data29();
    init_Data22();
    init_Data31();
    init_Data3();
    init_Data31();
    unfoldr = function(dict) {
      return dict.unfoldr;
    };
    unfoldableArray = {
      unfoldr: /* @__PURE__ */ unfoldrArrayImpl(isNothing)(/* @__PURE__ */ fromJust())(fst)(snd),
      Unfoldable10: function() {
        return unfoldable1Array;
      }
    };
  }
});

// output/Data.NonEmpty/index.js
var NonEmpty, singleton2, showNonEmpty, functorNonEmpty, foldableNonEmpty, foldable1NonEmpty;
var init_Data33 = __esm({
  "output/Data.NonEmpty/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control9();
    init_Data8();
    init_Data25();
    init_Data28();
    init_Data4();
    init_Data27();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data_Semigroup();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data22();
    init_Data32();
    NonEmpty = /* @__PURE__ */ function() {
      function NonEmpty2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      NonEmpty2.create = function(value0) {
        return function(value1) {
          return new NonEmpty2(value0, value1);
        };
      };
      return NonEmpty2;
    }();
    singleton2 = function(dictPlus) {
      return function(a) {
        return new NonEmpty(a, empty(dictPlus));
      };
    };
    showNonEmpty = function(dictShow) {
      return function(dictShow1) {
        return {
          show: function(v) {
            return "(NonEmpty " + (show(dictShow)(v.value0) + (" " + (show(dictShow1)(v.value1) + ")")));
          }
        };
      };
    };
    functorNonEmpty = function(dictFunctor) {
      return {
        map: function(f) {
          return function(m) {
            return new NonEmpty(f(m.value0), map(dictFunctor)(f)(m.value1));
          };
        }
      };
    };
    foldableNonEmpty = function(dictFoldable) {
      return {
        foldMap: function(dictMonoid) {
          return function(f) {
            return function(v) {
              return append(dictMonoid.Semigroup0())(f(v.value0))(foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
            };
          };
        },
        foldl: function(f) {
          return function(b) {
            return function(v) {
              return foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
            };
          };
        },
        foldr: function(f) {
          return function(b) {
            return function(v) {
              return f(v.value0)(foldr(dictFoldable)(f)(b)(v.value1));
            };
          };
        }
      };
    };
    foldable1NonEmpty = function(dictFoldable) {
      return {
        foldMap1: function(dictSemigroup) {
          return function(f) {
            return function(v) {
              return foldl(dictFoldable)(function(s) {
                return function(a1) {
                  return append(dictSemigroup)(s)(f(a1));
                };
              })(f(v.value0))(v.value1);
            };
          };
        },
        foldr1: function(f) {
          return function(v) {
            return maybe(v.value0)(f(v.value0))(foldr(dictFoldable)(function(a1) {
              var $164 = maybe(a1)(f(a1));
              return function($165) {
                return Just.create($164($165));
              };
            })(Nothing.value)(v.value1));
          };
        },
        foldl1: function(f) {
          return function(v) {
            return foldl(dictFoldable)(f)(v.value0)(v.value1);
          };
        },
        Foldable0: function() {
          return foldableNonEmpty(dictFoldable);
        }
      };
    };
  }
});

// output/Data.List.Types/index.js
var Nil, Cons, NonEmptyList, toList, listMap, functorList, functorNonEmptyList, foldableList, semigroupList, semigroupNonEmptyList, showList, showNonEmptyList, applyList, applyNonEmptyList, altList, plusList, applicativeNonEmptyList;
var init_Data_List = __esm({
  "output/Data.List.Types/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Data8();
    init_Data25();
    init_Data28();
    init_Data2();
    init_Data4();
    init_Data27();
    init_Data15();
    init_Data19();
    init_Data33();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data_Semigroup2();
    init_Data10();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data22();
    Nil = /* @__PURE__ */ function() {
      function Nil3() {
      }
      ;
      Nil3.value = new Nil3();
      return Nil3;
    }();
    Cons = /* @__PURE__ */ function() {
      function Cons3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Cons3.create = function(value0) {
        return function(value1) {
          return new Cons3(value0, value1);
        };
      };
      return Cons3;
    }();
    NonEmptyList = function(x) {
      return x;
    };
    toList = function(v) {
      return new Cons(v.value0, v.value1);
    };
    listMap = function(f) {
      var chunkedRevMap = function($copy_chunksAcc) {
        return function($copy_v) {
          var $tco_var_chunksAcc = $copy_chunksAcc;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(chunksAcc, v) {
            if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
              $tco_var_chunksAcc = new Cons(v, chunksAcc);
              $copy_v = v.value1.value1.value1;
              return;
            }
            ;
            var unrolledMap = function(v1) {
              if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
              }
              ;
              if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                return new Cons(f(v1.value0), Nil.value);
              }
              ;
              return Nil.value;
            };
            var reverseUnrolledMap = function($copy_v1) {
              return function($copy_acc) {
                var $tco_var_v1 = $copy_v1;
                var $tco_done1 = false;
                var $tco_result2;
                function $tco_loop2(v1, acc) {
                  if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                    $tco_var_v1 = v1.value1;
                    $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                    return;
                  }
                  ;
                  $tco_done1 = true;
                  return acc;
                }
                ;
                while (!$tco_done1) {
                  $tco_result2 = $tco_loop2($tco_var_v1, $copy_acc);
                }
                ;
                return $tco_result2;
              };
            };
            $tco_done = true;
            return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return chunkedRevMap(Nil.value);
    };
    functorList = {
      map: listMap
    };
    functorNonEmptyList = /* @__PURE__ */ functorNonEmpty(functorList);
    foldableList = {
      foldr: function(f) {
        return function(b) {
          var rev = function() {
            var go = function($copy_acc) {
              return function($copy_v) {
                var $tco_var_acc = $copy_acc;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v) {
                  if (v instanceof Nil) {
                    $tco_done = true;
                    return acc;
                  }
                  ;
                  if (v instanceof Cons) {
                    $tco_var_acc = new Cons(v.value0, acc);
                    $copy_v = v.value1;
                    return;
                  }
                  ;
                  throw new Error("Failed pattern match at Data.List.Types (line 107, column 7 - line 107, column 23): " + [acc.constructor.name, v.constructor.name]);
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
                }
                ;
                return $tco_result;
              };
            };
            return go(Nil.value);
          }();
          var $205 = foldl(foldableList)(flip(f))(b);
          return function($206) {
            return $205(rev($206));
          };
        };
      },
      foldl: function(f) {
        var go = function($copy_b) {
          return function($copy_v) {
            var $tco_var_b = $copy_b;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(b, v) {
              if (v instanceof Nil) {
                $tco_done1 = true;
                return b;
              }
              ;
              if (v instanceof Cons) {
                $tco_var_b = f(b)(v.value0);
                $copy_v = v.value1;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Types (line 111, column 12 - line 113, column 30): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_b, $copy_v);
            }
            ;
            return $tco_result;
          };
        };
        return go;
      },
      foldMap: function(dictMonoid) {
        return function(f) {
          return foldl(foldableList)(function(acc) {
            var $207 = append(dictMonoid.Semigroup0())(acc);
            return function($208) {
              return $207(f($208));
            };
          })(mempty(dictMonoid));
        };
      }
    };
    semigroupList = {
      append: function(xs) {
        return function(ys) {
          return foldr(foldableList)(Cons.create)(ys)(xs);
        };
      }
    };
    semigroupNonEmptyList = {
      append: function(v) {
        return function(as$prime) {
          return new NonEmpty(v.value0, append(semigroupList)(v.value1)(toList(as$prime)));
        };
      }
    };
    showList = function(dictShow) {
      return {
        show: function(v) {
          if (v instanceof Nil) {
            return "Nil";
          }
          ;
          return "(" + (intercalate2(foldableList)(monoidString)(" : ")(map(functorList)(show(dictShow))(v)) + " : Nil)");
        }
      };
    };
    showNonEmptyList = function(dictShow) {
      return {
        show: function(v) {
          return "(NonEmptyList " + (show(showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
        }
      };
    };
    applyList = {
      apply: function(v) {
        return function(v1) {
          if (v instanceof Nil) {
            return Nil.value;
          }
          ;
          if (v instanceof Cons) {
            return append(semigroupList)(map(functorList)(v.value0)(v1))(apply(applyList)(v.value1)(v1));
          }
          ;
          throw new Error("Failed pattern match at Data.List.Types (line 157, column 1 - line 159, column 48): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Functor0: function() {
        return functorList;
      }
    };
    applyNonEmptyList = {
      apply: function(v) {
        return function(v1) {
          return new NonEmpty(v.value0(v1.value0), append(semigroupList)(apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
        };
      },
      Functor0: function() {
        return functorNonEmptyList;
      }
    };
    altList = {
      alt: /* @__PURE__ */ append(semigroupList),
      Functor0: function() {
        return functorList;
      }
    };
    plusList = /* @__PURE__ */ function() {
      return {
        empty: Nil.value,
        Alt0: function() {
          return altList;
        }
      };
    }();
    applicativeNonEmptyList = {
      pure: /* @__PURE__ */ function() {
        var $236 = singleton2(plusList);
        return function($237) {
          return NonEmptyList($236($237));
        };
      }(),
      Apply0: function() {
        return applyNonEmptyList;
      }
    };
  }
});

// output/Effect.Aff/foreign.js
function _catchError(aff) {
  return function(k) {
    return Aff.Catch(aff, k);
  };
}
function _map(f) {
  return function(aff) {
    if (aff.tag === Aff.Pure.tag) {
      return Aff.Pure(f(aff._1));
    } else {
      return Aff.Bind(aff, function(value) {
        return Aff.Pure(f(value));
      });
    }
  };
}
function _bind(aff) {
  return function(k) {
    return Aff.Bind(aff, k);
  };
}
function _fork(immediate) {
  return function(aff) {
    return Aff.Fork(immediate, aff);
  };
}
function _parAffMap(f) {
  return function(aff) {
    return Aff.ParMap(f, aff);
  };
}
function _parAffApply(aff1) {
  return function(aff2) {
    return Aff.ParApply(aff1, aff2);
  };
}
function _parAffAlt(aff1) {
  return function(aff2) {
    return Aff.ParAlt(aff1, aff2);
  };
}
function _makeFiber(util, aff) {
  return function() {
    return Aff.Fiber(util, null, aff);
  };
}
var Aff, _pure, _throwError, _liftEffect, makeAff, _delay, _sequential;
var init_foreign28 = __esm({
  "output/Effect.Aff/foreign.js"() {
    Aff = function() {
      var EMPTY = {};
      var PURE = "Pure";
      var THROW = "Throw";
      var CATCH = "Catch";
      var SYNC = "Sync";
      var ASYNC = "Async";
      var BIND = "Bind";
      var BRACKET = "Bracket";
      var FORK = "Fork";
      var SEQ = "Sequential";
      var MAP = "Map";
      var APPLY = "Apply";
      var ALT = "Alt";
      var CONS = "Cons";
      var RESUME = "Resume";
      var RELEASE = "Release";
      var FINALIZER = "Finalizer";
      var FINALIZED = "Finalized";
      var FORKED = "Forked";
      var FIBER = "Fiber";
      var THUNK = "Thunk";
      function Aff2(tag, _1, _2, _3) {
        this.tag = tag;
        this._1 = _1;
        this._2 = _2;
        this._3 = _3;
      }
      function AffCtr(tag) {
        var fn = function(_1, _2, _3) {
          return new Aff2(tag, _1, _2, _3);
        };
        fn.tag = tag;
        return fn;
      }
      function nonCanceler2(error4) {
        return new Aff2(PURE, void 0);
      }
      function runEff(eff) {
        try {
          eff();
        } catch (error4) {
          setTimeout(function() {
            throw error4;
          }, 0);
        }
      }
      function runSync(left2, right2, eff) {
        try {
          return right2(eff());
        } catch (error4) {
          return left2(error4);
        }
      }
      function runAsync(left2, eff, k) {
        try {
          return eff(k)();
        } catch (error4) {
          k(left2(error4))();
          return nonCanceler2;
        }
      }
      var Scheduler = function() {
        var limit = 1024;
        var size6 = 0;
        var ix2 = 0;
        var queue = new Array(limit);
        var draining = false;
        function drain() {
          var thunk;
          draining = true;
          while (size6 !== 0) {
            size6--;
            thunk = queue[ix2];
            queue[ix2] = void 0;
            ix2 = (ix2 + 1) % limit;
            thunk();
          }
          draining = false;
        }
        return {
          isDraining: function() {
            return draining;
          },
          enqueue: function(cb) {
            var i, tmp;
            if (size6 === limit) {
              tmp = draining;
              drain();
              draining = tmp;
            }
            queue[(ix2 + size6) % limit] = cb;
            size6++;
            if (!draining) {
              drain();
            }
          }
        };
      }();
      function Supervisor(util) {
        var fibers = {};
        var fiberId = 0;
        var count = 0;
        return {
          register: function(fiber) {
            var fid = fiberId++;
            fiber.onComplete({
              rethrow: true,
              handler: function(result2) {
                return function() {
                  count--;
                  delete fibers[fid];
                };
              }
            })();
            fibers[fid] = fiber;
            count++;
          },
          isEmpty: function() {
            return count === 0;
          },
          killAll: function(killError, cb) {
            return function() {
              if (count === 0) {
                return cb();
              }
              var killCount = 0;
              var kills = {};
              function kill2(fid) {
                kills[fid] = fibers[fid].kill(killError, function(result2) {
                  return function() {
                    delete kills[fid];
                    killCount--;
                    if (util.isLeft(result2) && util.fromLeft(result2)) {
                      setTimeout(function() {
                        throw util.fromLeft(result2);
                      }, 0);
                    }
                    if (killCount === 0) {
                      cb();
                    }
                  };
                })();
              }
              for (var k in fibers) {
                if (fibers.hasOwnProperty(k)) {
                  killCount++;
                  kill2(k);
                }
              }
              fibers = {};
              fiberId = 0;
              count = 0;
              return function(error4) {
                return new Aff2(SYNC, function() {
                  for (var k2 in kills) {
                    if (kills.hasOwnProperty(k2)) {
                      kills[k2]();
                    }
                  }
                });
              };
            };
          }
        };
      }
      var SUSPENDED = 0;
      var CONTINUE = 1;
      var STEP_BIND = 2;
      var STEP_RESULT = 3;
      var PENDING = 4;
      var RETURN = 5;
      var COMPLETED = 6;
      function Fiber(util, supervisor, aff) {
        var runTick = 0;
        var status3 = SUSPENDED;
        var step3 = aff;
        var fail3 = null;
        var interrupt = null;
        var bhead = null;
        var btail = null;
        var attempts = null;
        var bracketCount = 0;
        var joinId = 0;
        var joins = null;
        var rethrow = true;
        function run3(localRunTick) {
          var tmp, result2, attempt2;
          while (true) {
            tmp = null;
            result2 = null;
            attempt2 = null;
            switch (status3) {
              case STEP_BIND:
                status3 = CONTINUE;
                try {
                  step3 = bhead(step3);
                  if (btail === null) {
                    bhead = null;
                  } else {
                    bhead = btail._1;
                    btail = btail._2;
                  }
                } catch (e) {
                  status3 = RETURN;
                  fail3 = util.left(e);
                  step3 = null;
                }
                break;
              case STEP_RESULT:
                if (util.isLeft(step3)) {
                  status3 = RETURN;
                  fail3 = step3;
                  step3 = null;
                } else if (bhead === null) {
                  status3 = RETURN;
                } else {
                  status3 = STEP_BIND;
                  step3 = util.fromRight(step3);
                }
                break;
              case CONTINUE:
                switch (step3.tag) {
                  case BIND:
                    if (bhead) {
                      btail = new Aff2(CONS, bhead, btail);
                    }
                    bhead = step3._2;
                    status3 = CONTINUE;
                    step3 = step3._1;
                    break;
                  case PURE:
                    if (bhead === null) {
                      status3 = RETURN;
                      step3 = util.right(step3._1);
                    } else {
                      status3 = STEP_BIND;
                      step3 = step3._1;
                    }
                    break;
                  case SYNC:
                    status3 = STEP_RESULT;
                    step3 = runSync(util.left, util.right, step3._1);
                    break;
                  case ASYNC:
                    status3 = PENDING;
                    step3 = runAsync(util.left, step3._1, function(result3) {
                      return function() {
                        if (runTick !== localRunTick) {
                          return;
                        }
                        runTick++;
                        Scheduler.enqueue(function() {
                          if (runTick !== localRunTick + 1) {
                            return;
                          }
                          status3 = STEP_RESULT;
                          step3 = result3;
                          run3(runTick);
                        });
                      };
                    });
                    return;
                  case THROW:
                    status3 = RETURN;
                    fail3 = util.left(step3._1);
                    step3 = null;
                    break;
                  case CATCH:
                    if (bhead === null) {
                      attempts = new Aff2(CONS, step3, attempts, interrupt);
                    } else {
                      attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                    }
                    bhead = null;
                    btail = null;
                    status3 = CONTINUE;
                    step3 = step3._1;
                    break;
                  case BRACKET:
                    bracketCount++;
                    if (bhead === null) {
                      attempts = new Aff2(CONS, step3, attempts, interrupt);
                    } else {
                      attempts = new Aff2(CONS, step3, new Aff2(CONS, new Aff2(RESUME, bhead, btail), attempts, interrupt), interrupt);
                    }
                    bhead = null;
                    btail = null;
                    status3 = CONTINUE;
                    step3 = step3._1;
                    break;
                  case FORK:
                    status3 = STEP_RESULT;
                    tmp = Fiber(util, supervisor, step3._2);
                    if (supervisor) {
                      supervisor.register(tmp);
                    }
                    if (step3._1) {
                      tmp.run();
                    }
                    step3 = util.right(tmp);
                    break;
                  case SEQ:
                    status3 = CONTINUE;
                    step3 = sequential2(util, supervisor, step3._1);
                    break;
                }
                break;
              case RETURN:
                bhead = null;
                btail = null;
                if (attempts === null) {
                  status3 = COMPLETED;
                  step3 = interrupt || fail3 || step3;
                } else {
                  tmp = attempts._3;
                  attempt2 = attempts._1;
                  attempts = attempts._2;
                  switch (attempt2.tag) {
                    case CATCH:
                      if (interrupt && interrupt !== tmp && bracketCount === 0) {
                        status3 = RETURN;
                      } else if (fail3) {
                        status3 = CONTINUE;
                        step3 = attempt2._2(util.fromLeft(fail3));
                        fail3 = null;
                      }
                      break;
                    case RESUME:
                      if (interrupt && interrupt !== tmp && bracketCount === 0 || fail3) {
                        status3 = RETURN;
                      } else {
                        bhead = attempt2._1;
                        btail = attempt2._2;
                        status3 = STEP_BIND;
                        step3 = util.fromRight(step3);
                      }
                      break;
                    case BRACKET:
                      bracketCount--;
                      if (fail3 === null) {
                        result2 = util.fromRight(step3);
                        attempts = new Aff2(CONS, new Aff2(RELEASE, attempt2._2, result2), attempts, tmp);
                        if (interrupt === tmp || bracketCount > 0) {
                          status3 = CONTINUE;
                          step3 = attempt2._3(result2);
                        }
                      }
                      break;
                    case RELEASE:
                      attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail3), attempts, interrupt);
                      status3 = CONTINUE;
                      if (interrupt && interrupt !== tmp && bracketCount === 0) {
                        step3 = attempt2._1.killed(util.fromLeft(interrupt))(attempt2._2);
                      } else if (fail3) {
                        step3 = attempt2._1.failed(util.fromLeft(fail3))(attempt2._2);
                      } else {
                        step3 = attempt2._1.completed(util.fromRight(step3))(attempt2._2);
                      }
                      fail3 = null;
                      bracketCount++;
                      break;
                    case FINALIZER:
                      bracketCount++;
                      attempts = new Aff2(CONS, new Aff2(FINALIZED, step3, fail3), attempts, interrupt);
                      status3 = CONTINUE;
                      step3 = attempt2._1;
                      break;
                    case FINALIZED:
                      bracketCount--;
                      status3 = RETURN;
                      step3 = attempt2._1;
                      fail3 = attempt2._2;
                      break;
                  }
                }
                break;
              case COMPLETED:
                for (var k in joins) {
                  if (joins.hasOwnProperty(k)) {
                    rethrow = rethrow && joins[k].rethrow;
                    runEff(joins[k].handler(step3));
                  }
                }
                joins = null;
                if (interrupt && fail3) {
                  setTimeout(function() {
                    throw util.fromLeft(fail3);
                  }, 0);
                } else if (util.isLeft(step3) && rethrow) {
                  setTimeout(function() {
                    if (rethrow) {
                      throw util.fromLeft(step3);
                    }
                  }, 0);
                }
                return;
              case SUSPENDED:
                status3 = CONTINUE;
                break;
              case PENDING:
                return;
            }
          }
        }
        function onComplete(join3) {
          return function() {
            if (status3 === COMPLETED) {
              rethrow = rethrow && join3.rethrow;
              join3.handler(step3)();
              return function() {
              };
            }
            var jid = joinId++;
            joins = joins || {};
            joins[jid] = join3;
            return function() {
              if (joins !== null) {
                delete joins[jid];
              }
            };
          };
        }
        function kill2(error4, cb) {
          return function() {
            if (status3 === COMPLETED) {
              cb(util.right(void 0))();
              return function() {
              };
            }
            var canceler = onComplete({
              rethrow: false,
              handler: function() {
                return cb(util.right(void 0));
              }
            })();
            switch (status3) {
              case SUSPENDED:
                interrupt = util.left(error4);
                status3 = COMPLETED;
                step3 = interrupt;
                run3(runTick);
                break;
              case PENDING:
                if (interrupt === null) {
                  interrupt = util.left(error4);
                }
                if (bracketCount === 0) {
                  if (status3 === PENDING) {
                    attempts = new Aff2(CONS, new Aff2(FINALIZER, step3(error4)), attempts, interrupt);
                  }
                  status3 = RETURN;
                  step3 = null;
                  fail3 = null;
                  run3(++runTick);
                }
                break;
              default:
                if (interrupt === null) {
                  interrupt = util.left(error4);
                }
                if (bracketCount === 0) {
                  status3 = RETURN;
                  step3 = null;
                  fail3 = null;
                }
            }
            return canceler;
          };
        }
        function join2(cb) {
          return function() {
            var canceler = onComplete({
              rethrow: false,
              handler: cb
            })();
            if (status3 === SUSPENDED) {
              run3(runTick);
            }
            return canceler;
          };
        }
        return {
          kill: kill2,
          join: join2,
          onComplete,
          isSuspended: function() {
            return status3 === SUSPENDED;
          },
          run: function() {
            if (status3 === SUSPENDED) {
              if (!Scheduler.isDraining()) {
                Scheduler.enqueue(function() {
                  run3(runTick);
                });
              } else {
                run3(runTick);
              }
            }
          }
        };
      }
      function runPar(util, supervisor, par, cb) {
        var fiberId = 0;
        var fibers = {};
        var killId = 0;
        var kills = {};
        var early = new Error("[ParAff] Early exit");
        var interrupt = null;
        var root = EMPTY;
        function kill2(error4, par2, cb2) {
          var step3 = par2;
          var head4 = null;
          var tail2 = null;
          var count = 0;
          var kills2 = {};
          var tmp, kid;
          loop:
            while (true) {
              tmp = null;
              switch (step3.tag) {
                case FORKED:
                  if (step3._3 === EMPTY) {
                    tmp = fibers[step3._1];
                    kills2[count++] = tmp.kill(error4, function(result2) {
                      return function() {
                        count--;
                        if (count === 0) {
                          cb2(result2)();
                        }
                      };
                    });
                  }
                  if (head4 === null) {
                    break loop;
                  }
                  step3 = head4._2;
                  if (tail2 === null) {
                    head4 = null;
                  } else {
                    head4 = tail2._1;
                    tail2 = tail2._2;
                  }
                  break;
                case MAP:
                  step3 = step3._2;
                  break;
                case APPLY:
                case ALT:
                  if (head4) {
                    tail2 = new Aff2(CONS, head4, tail2);
                  }
                  head4 = step3;
                  step3 = step3._1;
                  break;
              }
            }
          if (count === 0) {
            cb2(util.right(void 0))();
          } else {
            kid = 0;
            tmp = count;
            for (; kid < tmp; kid++) {
              kills2[kid] = kills2[kid]();
            }
          }
          return kills2;
        }
        function join2(result2, head4, tail2) {
          var fail3, step3, lhs, rhs, tmp, kid;
          if (util.isLeft(result2)) {
            fail3 = result2;
            step3 = null;
          } else {
            step3 = result2;
            fail3 = null;
          }
          loop:
            while (true) {
              lhs = null;
              rhs = null;
              tmp = null;
              kid = null;
              if (interrupt !== null) {
                return;
              }
              if (head4 === null) {
                cb(fail3 || step3)();
                return;
              }
              if (head4._3 !== EMPTY) {
                return;
              }
              switch (head4.tag) {
                case MAP:
                  if (fail3 === null) {
                    head4._3 = util.right(head4._1(util.fromRight(step3)));
                    step3 = head4._3;
                  } else {
                    head4._3 = fail3;
                  }
                  break;
                case APPLY:
                  lhs = head4._1._3;
                  rhs = head4._2._3;
                  if (fail3) {
                    head4._3 = fail3;
                    tmp = true;
                    kid = killId++;
                    kills[kid] = kill2(early, fail3 === lhs ? head4._2 : head4._1, function() {
                      return function() {
                        delete kills[kid];
                        if (tmp) {
                          tmp = false;
                        } else if (tail2 === null) {
                          join2(fail3, null, null);
                        } else {
                          join2(fail3, tail2._1, tail2._2);
                        }
                      };
                    });
                    if (tmp) {
                      tmp = false;
                      return;
                    }
                  } else if (lhs === EMPTY || rhs === EMPTY) {
                    return;
                  } else {
                    step3 = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                    head4._3 = step3;
                  }
                  break;
                case ALT:
                  lhs = head4._1._3;
                  rhs = head4._2._3;
                  if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                    return;
                  }
                  if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                    fail3 = step3 === lhs ? rhs : lhs;
                    step3 = null;
                    head4._3 = fail3;
                  } else {
                    head4._3 = step3;
                    tmp = true;
                    kid = killId++;
                    kills[kid] = kill2(early, step3 === lhs ? head4._2 : head4._1, function() {
                      return function() {
                        delete kills[kid];
                        if (tmp) {
                          tmp = false;
                        } else if (tail2 === null) {
                          join2(step3, null, null);
                        } else {
                          join2(step3, tail2._1, tail2._2);
                        }
                      };
                    });
                    if (tmp) {
                      tmp = false;
                      return;
                    }
                  }
                  break;
              }
              if (tail2 === null) {
                head4 = null;
              } else {
                head4 = tail2._1;
                tail2 = tail2._2;
              }
            }
        }
        function resolve2(fiber) {
          return function(result2) {
            return function() {
              delete fibers[fiber._1];
              fiber._3 = result2;
              join2(result2, fiber._2._1, fiber._2._2);
            };
          };
        }
        function run3() {
          var status3 = CONTINUE;
          var step3 = par;
          var head4 = null;
          var tail2 = null;
          var tmp, fid;
          loop:
            while (true) {
              tmp = null;
              fid = null;
              switch (status3) {
                case CONTINUE:
                  switch (step3.tag) {
                    case MAP:
                      if (head4) {
                        tail2 = new Aff2(CONS, head4, tail2);
                      }
                      head4 = new Aff2(MAP, step3._1, EMPTY, EMPTY);
                      step3 = step3._2;
                      break;
                    case APPLY:
                      if (head4) {
                        tail2 = new Aff2(CONS, head4, tail2);
                      }
                      head4 = new Aff2(APPLY, EMPTY, step3._2, EMPTY);
                      step3 = step3._1;
                      break;
                    case ALT:
                      if (head4) {
                        tail2 = new Aff2(CONS, head4, tail2);
                      }
                      head4 = new Aff2(ALT, EMPTY, step3._2, EMPTY);
                      step3 = step3._1;
                      break;
                    default:
                      fid = fiberId++;
                      status3 = RETURN;
                      tmp = step3;
                      step3 = new Aff2(FORKED, fid, new Aff2(CONS, head4, tail2), EMPTY);
                      tmp = Fiber(util, supervisor, tmp);
                      tmp.onComplete({
                        rethrow: false,
                        handler: resolve2(step3)
                      })();
                      fibers[fid] = tmp;
                      if (supervisor) {
                        supervisor.register(tmp);
                      }
                  }
                  break;
                case RETURN:
                  if (head4 === null) {
                    break loop;
                  }
                  if (head4._1 === EMPTY) {
                    head4._1 = step3;
                    status3 = CONTINUE;
                    step3 = head4._2;
                    head4._2 = EMPTY;
                  } else {
                    head4._2 = step3;
                    step3 = head4;
                    if (tail2 === null) {
                      head4 = null;
                    } else {
                      head4 = tail2._1;
                      tail2 = tail2._2;
                    }
                  }
              }
            }
          root = step3;
          for (fid = 0; fid < fiberId; fid++) {
            fibers[fid].run();
          }
        }
        function cancel(error4, cb2) {
          interrupt = util.left(error4);
          var innerKills;
          for (var kid in kills) {
            if (kills.hasOwnProperty(kid)) {
              innerKills = kills[kid];
              for (kid in innerKills) {
                if (innerKills.hasOwnProperty(kid)) {
                  innerKills[kid]();
                }
              }
            }
          }
          kills = null;
          var newKills = kill2(error4, root, cb2);
          return function(killError) {
            return new Aff2(ASYNC, function(killCb) {
              return function() {
                for (var kid2 in newKills) {
                  if (newKills.hasOwnProperty(kid2)) {
                    newKills[kid2]();
                  }
                }
                return nonCanceler2;
              };
            });
          };
        }
        run3();
        return function(killError) {
          return new Aff2(ASYNC, function(killCb) {
            return function() {
              return cancel(killError, killCb);
            };
          });
        };
      }
      function sequential2(util, supervisor, par) {
        return new Aff2(ASYNC, function(cb) {
          return function() {
            return runPar(util, supervisor, par, cb);
          };
        });
      }
      Aff2.EMPTY = EMPTY;
      Aff2.Pure = AffCtr(PURE);
      Aff2.Throw = AffCtr(THROW);
      Aff2.Catch = AffCtr(CATCH);
      Aff2.Sync = AffCtr(SYNC);
      Aff2.Async = AffCtr(ASYNC);
      Aff2.Bind = AffCtr(BIND);
      Aff2.Bracket = AffCtr(BRACKET);
      Aff2.Fork = AffCtr(FORK);
      Aff2.Seq = AffCtr(SEQ);
      Aff2.ParMap = AffCtr(MAP);
      Aff2.ParApply = AffCtr(APPLY);
      Aff2.ParAlt = AffCtr(ALT);
      Aff2.Fiber = Fiber;
      Aff2.Supervisor = Supervisor;
      Aff2.Scheduler = Scheduler;
      Aff2.nonCanceler = nonCanceler2;
      return Aff2;
    }();
    _pure = Aff.Pure;
    _throwError = Aff.Throw;
    _liftEffect = Aff.Sync;
    makeAff = Aff.Async;
    _delay = function() {
      function setDelay(n, k) {
        if (n === 0 && typeof setImmediate !== "undefined") {
          return setImmediate(k);
        } else {
          return setTimeout(k, n);
        }
      }
      function clearDelay(n, t) {
        if (n === 0 && typeof clearImmediate !== "undefined") {
          return clearImmediate(t);
        } else {
          return clearTimeout(t);
        }
      }
      return function(right2, ms) {
        return Aff.Async(function(cb) {
          return function() {
            var timer = setDelay(ms, cb(right2()));
            return function() {
              return Aff.Sync(function() {
                return right2(clearDelay(ms, timer));
              });
            };
          };
        });
      };
    }();
    _sequential = Aff.Seq;
  }
});

// output/Control.Monad.Cont.Trans/index.js
var init_Control_Monad_Cont2 = __esm({
  "output/Control.Monad.Cont.Trans/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control_Monad_Cont();
    init_Control_Monad_Reader();
    init_Control_Monad_State();
    init_Control_Monad_Trans();
    init_Data2();
    init_Data19();
    init_Data7();
    init_Effect4();
    init_Control_Monad_Cont();
    init_Control_Monad_Trans();
  }
});

// output/Control.Monad.Maybe.Trans/index.js
var init_Control_Monad_Maybe = __esm({
  "output/Control.Monad.Maybe.Trans/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control7();
    init_Control_Monad_Cont();
    init_Control_Monad_Error();
    init_Control_Monad_Reader();
    init_Control_Monad_Rec();
    init_Control_Monad_State();
    init_Control_Monad_Trans();
    init_Control_Monad_Writer();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data22();
    init_Effect4();
    init_Control_Monad_Trans();
  }
});

// output/Type.Equality/index.js
var init_Type2 = __esm({
  "output/Type.Equality/index.js"() {
  }
});

// output/Data.Distributive/index.js
var init_Data34 = __esm({
  "output/Data.Distributive/index.js"() {
    init_Control2();
    init_Data4();
    init_Data20();
    init_Data23();
    init_Data22();
    init_Data3();
    init_Type2();
  }
});

// output/Control.Monad.Reader.Trans/index.js
var init_Control_Monad_Reader2 = __esm({
  "output/Control.Monad.Reader.Trans/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control_Monad_Cont();
    init_Control_Monad_Error();
    init_Control_Monad_Reader();
    init_Control_Monad_Rec();
    init_Control_Monad_State();
    init_Control_Monad_Trans();
    init_Control_Monad_Writer();
    init_Control9();
    init_Data34();
    init_Data2();
    init_Data4();
    init_Data19();
    init_Data7();
    init_Effect4();
    init_Control_Monad_Reader();
    init_Control_Monad_Trans();
  }
});

// output/Control.Monad.Writer.Trans/index.js
var init_Control_Monad_Writer2 = __esm({
  "output/Control.Monad.Writer.Trans/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control_Monad_Cont();
    init_Control_Monad_Error();
    init_Control_Monad_Reader();
    init_Control_Monad_Rec();
    init_Control_Monad_State();
    init_Control_Monad_Trans();
    init_Control_Monad_Writer();
    init_Control9();
    init_Data4();
    init_Data19();
    init_Data7();
    init_Data22();
    init_Data3();
    init_Effect4();
    init_Control_Monad_Trans();
    init_Control_Monad_Writer();
  }
});

// output/Data.Functor.Contravariant/index.js
var init_Data_Functor6 = __esm({
  "output/Data.Functor.Contravariant/index.js"() {
    init_Data4();
    init_Data6();
  }
});

// output/Data.Profunctor/index.js
var profunctorFn;
var init_Data35 = __esm({
  "output/Data.Profunctor/index.js"() {
    init_Control2();
    init_Data23();
    profunctorFn = {
      dimap: function(a2b) {
        return function(c2d) {
          return function(b2c) {
            return function($8) {
              return c2d(b2c(a2b($8)));
            };
          };
        };
      }
    };
  }
});

// output/Data.Functor.Costar/index.js
var init_Data_Functor7 = __esm({
  "output/Data.Functor.Costar/index.js"() {
    init_Control11();
    init_Control10();
    init_Data34();
    init_Data4();
    init_Data_Functor6();
    init_Data_Functor();
    init_Data35();
    init_Data22();
  }
});

// output/Data.Profunctor.Star/index.js
var init_Data_Profunctor = __esm({
  "output/Data.Profunctor.Star/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control9();
    init_Data34();
    init_Data16();
    init_Data4();
    init_Data_Functor();
    init_Data22();
  }
});

// output/Control.Parallel.Class/index.js
var sequential, parallel;
var init_Control_Parallel = __esm({
  "output/Control.Parallel.Class/index.js"() {
    init_Control4();
    init_Control5();
    init_Control_Monad_Cont2();
    init_Control_Monad_Except();
    init_Control_Monad_Maybe();
    init_Control_Monad_Reader2();
    init_Control_Monad_Writer2();
    init_Data16();
    init_Data4();
    init_Data_Functor4();
    init_Data_Functor7();
    init_Data15();
    init_Data_Profunctor();
    init_Data3();
    init_Effect4();
    init_Effect3();
    sequential = function(dict) {
      return dict.sequential;
    };
    parallel = function(dict) {
      return dict.parallel;
    };
  }
});

// output/Control.Parallel/index.js
var parTraverse_, parSequence_;
var init_Control12 = __esm({
  "output/Control.Parallel/index.js"() {
    init_Control3();
    init_Control2();
    init_Control_Parallel();
    init_Data25();
    init_Data29();
    init_Control_Parallel();
    parTraverse_ = function(dictParallel) {
      return function(dictFoldable) {
        return function(f) {
          var $17 = sequential(dictParallel);
          var $18 = traverse_(dictParallel.Applicative1())(dictFoldable)(function() {
            var $20 = parallel(dictParallel);
            return function($21) {
              return $20(f($21));
            };
          }());
          return function($19) {
            return $17($18($19));
          };
        };
      };
    };
    parSequence_ = function(dictParallel) {
      return function(dictFoldable) {
        return parTraverse_(dictParallel)(dictFoldable)(identity(categoryFn));
      };
    };
  }
});

// output/Data.Time.Duration/index.js
var Milliseconds, toDuration, showMilliseconds, durationMilliseconds;
var init_Data_Time = __esm({
  "output/Data.Time.Duration/index.js"() {
    init_Control2();
    init_Data8();
    init_Data23();
    init_Data12();
    init_Data11();
    init_Data14();
    Milliseconds = function(x) {
      return x;
    };
    toDuration = function(dict) {
      return dict.toDuration;
    };
    showMilliseconds = {
      show: function(v) {
        return "(Milliseconds " + (show(showNumber)(v) + ")");
      }
    };
    durationMilliseconds = {
      fromDuration: /* @__PURE__ */ identity(categoryFn),
      toDuration: /* @__PURE__ */ identity(categoryFn)
    };
  }
});

// output/Effect.Unsafe/foreign.js
var unsafePerformEffect;
var init_foreign29 = __esm({
  "output/Effect.Unsafe/foreign.js"() {
    unsafePerformEffect = function(f) {
      return f();
    };
  }
});

// output/Effect.Unsafe/index.js
var init_Effect5 = __esm({
  "output/Effect.Unsafe/index.js"() {
    init_foreign29();
    init_foreign29();
  }
});

// output/Partial.Unsafe/foreign.js
var _unsafePartial;
var init_foreign30 = __esm({
  "output/Partial.Unsafe/foreign.js"() {
    _unsafePartial = function(f) {
      return f();
    };
  }
});

// output/Partial/foreign.js
var _crashWith;
var init_foreign31 = __esm({
  "output/Partial/foreign.js"() {
    _crashWith = function(msg) {
      throw new Error(msg);
    };
  }
});

// output/Partial/index.js
var crashWith;
var init_Partial = __esm({
  "output/Partial/index.js"() {
    init_foreign31();
    crashWith = function() {
      return _crashWith;
    };
  }
});

// output/Partial.Unsafe/index.js
var unsafePartial, unsafeCrashWith;
var init_Partial2 = __esm({
  "output/Partial.Unsafe/index.js"() {
    init_foreign30();
    init_Partial();
    unsafePartial = _unsafePartial;
    unsafeCrashWith = function(msg) {
      return unsafePartial(function() {
        return crashWith()(msg);
      });
    };
  }
});

// output/Effect.Aff/index.js
var $runtime_lazy2, Canceler, functorParAff, functorAff, forkAff, ffiUtil, makeFiber, launchAff, launchAff_, delay, applyParAff, monadAff, bindAff, applicativeAff, $lazy_applyAff, applyAff, monadEffectAff, effectCanceler, joinFiber, monadThrowAff, monadErrorAff, attempt, runAff, runAff_, parallelAff, $lazy_applicativeParAff, semigroupCanceler, nonCanceler, monoidCanceler, apathize, altParAff, altAff;
var init_Effect6 = __esm({
  "output/Effect.Aff/index.js"() {
    init_foreign28();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control7();
    init_Control_Monad_Error();
    init_Control_Monad_Rec();
    init_Control12();
    init_Control_Parallel();
    init_Control9();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data19();
    init_Data7();
    init_Data_Time();
    init_Data3();
    init_Effect();
    init_Effect4();
    init_Effect2();
    init_Effect5();
    init_Partial2();
    init_Unsafe();
    init_foreign28();
    init_Control_Monad_Error();
    init_Control_Parallel();
    init_Data_Time();
    init_Effect2();
    $runtime_lazy2 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    Canceler = function(x) {
      return x;
    };
    functorParAff = {
      map: _parAffMap
    };
    functorAff = {
      map: _map
    };
    forkAff = /* @__PURE__ */ _fork(true);
    ffiUtil = /* @__PURE__ */ function() {
      var unsafeFromRight = function(v) {
        if (v instanceof Right) {
          return v.value0;
        }
        ;
        if (v instanceof Left) {
          return unsafeCrashWith("unsafeFromRight: Left");
        }
        ;
        throw new Error("Failed pattern match at Effect.Aff (line 407, column 21 - line 409, column 54): " + [v.constructor.name]);
      };
      var unsafeFromLeft = function(v) {
        if (v instanceof Left) {
          return v.value0;
        }
        ;
        if (v instanceof Right) {
          return unsafeCrashWith("unsafeFromLeft: Right");
        }
        ;
        throw new Error("Failed pattern match at Effect.Aff (line 402, column 20 - line 404, column 55): " + [v.constructor.name]);
      };
      var isLeft = function(v) {
        if (v instanceof Left) {
          return true;
        }
        ;
        if (v instanceof Right) {
          return false;
        }
        ;
        throw new Error("Failed pattern match at Effect.Aff (line 397, column 12 - line 399, column 21): " + [v.constructor.name]);
      };
      return {
        isLeft,
        fromLeft: unsafeFromLeft,
        fromRight: unsafeFromRight,
        left: Left.create,
        right: Right.create
      };
    }();
    makeFiber = function(aff) {
      return _makeFiber(ffiUtil, aff);
    };
    launchAff = function(aff) {
      return function __do2() {
        var fiber = makeFiber(aff)();
        fiber.run();
        return fiber;
      };
    };
    launchAff_ = /* @__PURE__ */ function() {
      var $39 = $$void(functorEffect);
      return function($40) {
        return $39(launchAff($40));
      };
    }();
    delay = function(v) {
      return _delay(Right.create, v);
    };
    applyParAff = {
      apply: _parAffApply,
      Functor0: function() {
        return functorParAff;
      }
    };
    monadAff = {
      Applicative0: function() {
        return applicativeAff;
      },
      Bind1: function() {
        return bindAff;
      }
    };
    bindAff = {
      bind: _bind,
      Apply0: function() {
        return $lazy_applyAff(0);
      }
    };
    applicativeAff = {
      pure: _pure,
      Apply0: function() {
        return $lazy_applyAff(0);
      }
    };
    $lazy_applyAff = /* @__PURE__ */ $runtime_lazy2("applyAff", "Effect.Aff", function() {
      return {
        apply: ap(monadAff),
        Functor0: function() {
          return functorAff;
        }
      };
    });
    applyAff = /* @__PURE__ */ $lazy_applyAff(71);
    monadEffectAff = {
      liftEffect: _liftEffect,
      Monad0: function() {
        return monadAff;
      }
    };
    effectCanceler = /* @__PURE__ */ function() {
      var $41 = liftEffect(monadEffectAff);
      return function($42) {
        return Canceler($$const($41($42)));
      };
    }();
    joinFiber = function(v) {
      return makeAff(function(k) {
        return map(functorEffect)(effectCanceler)(v.join(k));
      });
    };
    monadThrowAff = {
      throwError: _throwError,
      Monad0: function() {
        return monadAff;
      }
    };
    monadErrorAff = {
      catchError: _catchError,
      MonadThrow0: function() {
        return monadThrowAff;
      }
    };
    attempt = /* @__PURE__ */ $$try2(monadErrorAff);
    runAff = function(k) {
      return function(aff) {
        return launchAff(bindFlipped(bindAff)(function() {
          var $45 = liftEffect(monadEffectAff);
          return function($46) {
            return $45(k($46));
          };
        }())($$try2(monadErrorAff)(aff)));
      };
    };
    runAff_ = function(k) {
      return function(aff) {
        return $$void(functorEffect)(runAff(k)(aff));
      };
    };
    parallelAff = {
      parallel: unsafeCoerce2,
      sequential: _sequential,
      Monad0: function() {
        return monadAff;
      },
      Applicative1: function() {
        return $lazy_applicativeParAff(0);
      }
    };
    $lazy_applicativeParAff = /* @__PURE__ */ $runtime_lazy2("applicativeParAff", "Effect.Aff", function() {
      return {
        pure: function() {
          var $49 = parallel(parallelAff);
          var $50 = pure(applicativeAff);
          return function($51) {
            return $49($50($51));
          };
        }(),
        Apply0: function() {
          return applyParAff;
        }
      };
    });
    semigroupCanceler = {
      append: function(v) {
        return function(v1) {
          return function(err) {
            return parSequence_(parallelAff)(foldableArray)([v(err), v1(err)]);
          };
        };
      }
    };
    nonCanceler = /* @__PURE__ */ $$const(/* @__PURE__ */ pure(applicativeAff)(unit));
    monoidCanceler = {
      mempty: nonCanceler,
      Semigroup0: function() {
        return semigroupCanceler;
      }
    };
    apathize = /* @__PURE__ */ function() {
      var $53 = map(functorAff)($$const(unit));
      return function($54) {
        return $53(attempt($54));
      };
    }();
    altParAff = {
      alt: _parAffAlt,
      Functor0: function() {
        return functorParAff;
      }
    };
    altAff = {
      alt: function(a1) {
        return function(a2) {
          return catchError(monadErrorAff)(a1)($$const(a2));
        };
      },
      Functor0: function() {
        return functorAff;
      }
    };
  }
});

// output/Foreign/foreign.js
function typeOf(value) {
  return typeof value;
}
function tagOf(value) {
  return Object.prototype.toString.call(value).slice(8, -1);
}
function isNull(value) {
  return value === null;
}
function isUndefined(value) {
  return value === void 0;
}
var isArray;
var init_foreign32 = __esm({
  "output/Foreign/foreign.js"() {
    isArray = Array.isArray || function(value) {
      return Object.prototype.toString.call(value) === "[object Array]";
    };
  }
});

// output/Data.Int/foreign.js
var fromNumberImpl, toNumber, fromStringAsImpl;
var init_foreign33 = __esm({
  "output/Data.Int/foreign.js"() {
    fromNumberImpl = function(just) {
      return function(nothing) {
        return function(n) {
          return (n | 0) === n ? just(n) : nothing;
        };
      };
    };
    toNumber = function(n) {
      return n;
    };
    fromStringAsImpl = function(just) {
      return function(nothing) {
        return function(radix) {
          var digits;
          if (radix < 11) {
            digits = "[0-" + (radix - 1).toString() + "]";
          } else if (radix === 11) {
            digits = "[0-9a]";
          } else {
            digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
          }
          var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
          return function(s) {
            if (pattern.test(s)) {
              var i = parseInt(s, radix);
              return (i | 0) === i ? just(i) : nothing;
            } else {
              return nothing;
            }
          };
        };
      };
    };
  }
});

// output/Data.Number/foreign.js
function fromStringImpl(str, isFinite2, just, nothing) {
  var num = parseFloat(str);
  if (isFinite2(num)) {
    return just(num);
  } else {
    return nothing;
  }
}
var isFiniteImpl, floor;
var init_foreign34 = __esm({
  "output/Data.Number/foreign.js"() {
    isFiniteImpl = isFinite;
    floor = Math.floor;
  }
});

// output/Data.Number/index.js
var fromString;
var init_Data36 = __esm({
  "output/Data.Number/index.js"() {
    init_foreign34();
    init_Data15();
    init_foreign34();
    fromString = function(str) {
      return fromStringImpl(str, isFiniteImpl, Just.create, Nothing.value);
    };
  }
});

// output/Data.Int/index.js
var hexadecimal, fromStringAs, fromString2, fromNumber, unsafeClamp, floor2;
var init_Data37 = __esm({
  "output/Data.Int/index.js"() {
    init_foreign33();
    init_Control2();
    init_Data();
    init_Data13();
    init_Data8();
    init_Data15();
    init_Data36();
    init_Data9();
    init_Data10();
    init_foreign33();
    hexadecimal = 16;
    fromStringAs = /* @__PURE__ */ function() {
      return fromStringAsImpl(Just.create)(Nothing.value);
    }();
    fromString2 = /* @__PURE__ */ fromStringAs(10);
    fromNumber = /* @__PURE__ */ function() {
      return fromNumberImpl(Just.create)(Nothing.value);
    }();
    unsafeClamp = function(x) {
      if (!isFiniteImpl(x)) {
        return 0;
      }
      ;
      if (x >= toNumber(top(boundedInt))) {
        return top(boundedInt);
      }
      ;
      if (x <= toNumber(bottom(boundedInt))) {
        return bottom(boundedInt);
      }
      ;
      if (otherwise) {
        return fromMaybe(0)(fromNumber(x));
      }
      ;
      throw new Error("Failed pattern match at Data.Int (line 72, column 1 - line 72, column 29): " + [x.constructor.name]);
    };
    floor2 = function($25) {
      return unsafeClamp(floor($25));
    };
  }
});

// output/Data.List.Internal/index.js
var init_Data_List2 = __esm({
  "output/Data.List.Internal/index.js"() {
    init_Data_List();
    init_Data9();
  }
});

// output/Data.List/index.js
var uncons, toUnfoldable, reverse;
var init_Data38 = __esm({
  "output/Data.List/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control8();
    init_Control_Monad_Rec();
    init_Data24();
    init_Data();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data_List2();
    init_Data_List();
    init_Data15();
    init_Data33();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Data22();
    init_Data32();
    init_Data3();
    init_Data25();
    init_Data_List();
    init_Data29();
    uncons = function(v) {
      if (v instanceof Nil) {
        return Nothing.value;
      }
      ;
      if (v instanceof Cons) {
        return new Just({
          head: v.value0,
          tail: v.value1
        });
      }
      ;
      throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
    };
    toUnfoldable = function(dictUnfoldable) {
      return unfoldr(dictUnfoldable)(function(xs) {
        return map(functorMaybe)(function(rec) {
          return new Tuple(rec.head, rec.tail);
        })(uncons(xs));
      });
    };
    reverse = /* @__PURE__ */ function() {
      var go = function($copy_acc) {
        return function($copy_v) {
          var $tco_var_acc = $copy_acc;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(acc, v) {
            if (v instanceof Nil) {
              $tco_done = true;
              return acc;
            }
            ;
            if (v instanceof Cons) {
              $tco_var_acc = new Cons(v.value0, acc);
              $copy_v = v.value1;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [acc.constructor.name, v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_acc, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
      return go(Nil.value);
    }();
  }
});

// output/Data.List.NonEmpty/index.js
var singleton3;
var init_Data_List3 = __esm({
  "output/Data.List.NonEmpty/index.js"() {
    init_Control5();
    init_Control2();
    init_Data();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data38();
    init_Data_List();
    init_Data15();
    init_Data33();
    init_Data12();
    init_Data7();
    init_Data_Semigroup();
    init_Data_Semigroup2();
    init_Data29();
    init_Data22();
    init_Data32();
    init_Partial2();
    init_Data25();
    init_Data_List();
    init_Data_Semigroup();
    init_Data_Semigroup2();
    init_Data29();
    singleton3 = /* @__PURE__ */ function() {
      var $169 = singleton2(plusList);
      return function($170) {
        return NonEmptyList($169($170));
      };
    }();
  }
});

// output/Data.String.CodeUnits/foreign.js
var singleton4, _charAt, length3, _indexOf, _indexOfStartingAt, _lastIndexOf, take2, drop2, splitAt;
var init_foreign35 = __esm({
  "output/Data.String.CodeUnits/foreign.js"() {
    singleton4 = function(c2) {
      return c2;
    };
    _charAt = function(just) {
      return function(nothing) {
        return function(i) {
          return function(s) {
            return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
          };
        };
      };
    };
    length3 = function(s) {
      return s.length;
    };
    _indexOf = function(just) {
      return function(nothing) {
        return function(x) {
          return function(s) {
            var i = s.indexOf(x);
            return i === -1 ? nothing : just(i);
          };
        };
      };
    };
    _indexOfStartingAt = function(just) {
      return function(nothing) {
        return function(x) {
          return function(startAt) {
            return function(s) {
              if (startAt < 0 || startAt > s.length)
                return nothing;
              var i = s.indexOf(x, startAt);
              return i === -1 ? nothing : just(i);
            };
          };
        };
      };
    };
    _lastIndexOf = function(just) {
      return function(nothing) {
        return function(x) {
          return function(s) {
            var i = s.lastIndexOf(x);
            return i === -1 ? nothing : just(i);
          };
        };
      };
    };
    take2 = function(n) {
      return function(s) {
        return s.substr(0, n);
      };
    };
    drop2 = function(n) {
      return function(s) {
        return s.substring(n);
      };
    };
    splitAt = function(i) {
      return function(s) {
        return { before: s.substring(0, i), after: s.substring(i) };
      };
    };
  }
});

// output/Data.String.Unsafe/foreign.js
var charAt;
var init_foreign36 = __esm({
  "output/Data.String.Unsafe/foreign.js"() {
    charAt = function(i) {
      return function(s) {
        if (i >= 0 && i < s.length)
          return s.charAt(i);
        throw new Error("Data.String.Unsafe.charAt: Invalid index.");
      };
    };
  }
});

// output/Data.String.Unsafe/index.js
var init_Data_String = __esm({
  "output/Data.String.Unsafe/index.js"() {
    init_foreign36();
    init_foreign36();
  }
});

// output/Data.String.CodeUnits/index.js
var stripSuffix, stripPrefix, lastIndexOf, indexOf$prime, indexOf, dropRight, contains, charAt2;
var init_Data_String2 = __esm({
  "output/Data.String.CodeUnits/index.js"() {
    init_foreign35();
    init_Data15();
    init_Data_String();
    init_foreign35();
    stripSuffix = function(v) {
      return function(str) {
        var v1 = splitAt(length3(str) - length3(v) | 0)(str);
        var $9 = v1.after === v;
        if ($9) {
          return new Just(v1.before);
        }
        ;
        return Nothing.value;
      };
    };
    stripPrefix = function(v) {
      return function(str) {
        var v1 = splitAt(length3(v))(str);
        var $15 = v1.before === v;
        if ($15) {
          return new Just(v1.after);
        }
        ;
        return Nothing.value;
      };
    };
    lastIndexOf = /* @__PURE__ */ function() {
      return _lastIndexOf(Just.create)(Nothing.value);
    }();
    indexOf$prime = /* @__PURE__ */ function() {
      return _indexOfStartingAt(Just.create)(Nothing.value);
    }();
    indexOf = /* @__PURE__ */ function() {
      return _indexOf(Just.create)(Nothing.value);
    }();
    dropRight = function(i) {
      return function(s) {
        return take2(length3(s) - i | 0)(s);
      };
    };
    contains = function(pat) {
      var $18 = indexOf(pat);
      return function($19) {
        return isJust($18($19));
      };
    };
    charAt2 = /* @__PURE__ */ function() {
      return _charAt(Just.create)(Nothing.value);
    }();
  }
});

// output/Foreign/index.js
var ForeignError, TypeMismatch, ErrorAtIndex, ErrorAtProperty, unsafeToForeign, unsafeFromForeign, showForeignError, fail, readArray, unsafeReadTagged, readBoolean, readNumber, readInt, readString;
var init_Foreign = __esm({
  "output/Foreign/index.js"() {
    init_foreign32();
    init_Control4();
    init_Control_Monad_Error();
    init_Control_Monad_Except();
    init_Data();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data_List3();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data_String2();
    init_Unsafe();
    init_foreign32();
    ForeignError = /* @__PURE__ */ function() {
      function ForeignError2(value0) {
        this.value0 = value0;
      }
      ;
      ForeignError2.create = function(value0) {
        return new ForeignError2(value0);
      };
      return ForeignError2;
    }();
    TypeMismatch = /* @__PURE__ */ function() {
      function TypeMismatch3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TypeMismatch3.create = function(value0) {
        return function(value1) {
          return new TypeMismatch3(value0, value1);
        };
      };
      return TypeMismatch3;
    }();
    ErrorAtIndex = /* @__PURE__ */ function() {
      function ErrorAtIndex2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ErrorAtIndex2.create = function(value0) {
        return function(value1) {
          return new ErrorAtIndex2(value0, value1);
        };
      };
      return ErrorAtIndex2;
    }();
    ErrorAtProperty = /* @__PURE__ */ function() {
      function ErrorAtProperty2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ErrorAtProperty2.create = function(value0) {
        return function(value1) {
          return new ErrorAtProperty2(value0, value1);
        };
      };
      return ErrorAtProperty2;
    }();
    unsafeToForeign = unsafeCoerce2;
    unsafeFromForeign = unsafeCoerce2;
    showForeignError = {
      show: function(v) {
        if (v instanceof ForeignError) {
          return "(ForeignError " + (show(showString)(v.value0) + ")");
        }
        ;
        if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (show(showInt)(v.value0) + (" " + (show(showForeignError)(v.value1) + ")")));
        }
        ;
        if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (show(showString)(v.value0) + (" " + (show(showForeignError)(v.value1) + ")")));
        }
        ;
        if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (show(showString)(v.value0) + (" " + (show(showString)(v.value1) + ")")));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 69, column 1 - line 73, column 89): " + [v.constructor.name]);
      }
    };
    fail = function(dictMonad) {
      var $115 = throwError(monadThrowExceptT(dictMonad));
      return function($116) {
        return $115(singleton3($116));
      };
    };
    readArray = function(dictMonad) {
      return function(value) {
        if (isArray(value)) {
          return pure(applicativeExceptT(dictMonad))(unsafeFromForeign(value));
        }
        ;
        if (otherwise) {
          return fail(dictMonad)(new TypeMismatch("array", tagOf(value)));
        }
        ;
        throw new Error("Failed pattern match at Foreign (line 164, column 1 - line 164, column 99): " + [value.constructor.name]);
      };
    };
    unsafeReadTagged = function(dictMonad) {
      return function(tag) {
        return function(value) {
          if (tagOf(value) === tag) {
            return pure(applicativeExceptT(dictMonad))(unsafeFromForeign(value));
          }
          ;
          if (otherwise) {
            return fail(dictMonad)(new TypeMismatch(tag, tagOf(value)));
          }
          ;
          throw new Error("Failed pattern match at Foreign (line 123, column 1 - line 123, column 104): " + [tag.constructor.name, value.constructor.name]);
        };
      };
    };
    readBoolean = function(dictMonad) {
      return unsafeReadTagged(dictMonad)("Boolean");
    };
    readNumber = function(dictMonad) {
      return unsafeReadTagged(dictMonad)("Number");
    };
    readInt = function(dictMonad) {
      return function(value) {
        var error4 = new Left(singleton3(new TypeMismatch("Int", tagOf(value))));
        var fromNumber2 = function() {
          var $117 = maybe(error4)(pure(applicativeEither));
          return function($118) {
            return $117(fromNumber($118));
          };
        }();
        return mapExceptT(map(dictMonad.Bind1().Apply0().Functor0())(either($$const(error4))(fromNumber2)))(readNumber(dictMonad)(value));
      };
    };
    readString = function(dictMonad) {
      return unsafeReadTagged(dictMonad)("String");
    };
  }
});

// output/Control.Promise/index.js
var toAff$prime, fromAff, coerce2, toAff, toAffE;
var init_Control13 = __esm({
  "output/Control.Promise/index.js"() {
    init_foreign21();
    init_Control6();
    init_Control5();
    init_Control2();
    init_Control_Monad();
    init_Control_Monad_Except();
    init_Data16();
    init_Data4();
    init_Data20();
    init_Data_List();
    init_Data19();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_Foreign();
    toAff$prime = function(customCoerce) {
      return function(p) {
        return makeAff(function(cb) {
          return voidRight(functorEffect)(mempty(monoidCanceler))(thenImpl(p)(function($1) {
            return cb(Left.create(customCoerce($1)))();
          })(function($2) {
            return cb(Right.create($2))();
          }));
        });
      };
    };
    fromAff = function(aff) {
      return promise(function(succ2) {
        return function(err) {
          return runAff_(either(err)(succ2))(aff);
        };
      });
    };
    coerce2 = function(fn) {
      return either(function(v) {
        return error("Promise failed, couldn't extract JS Error or String");
      })(identity(categoryFn))(runExcept(alt(altExceptT(semigroupNonEmptyList)(monadIdentity))(unsafeReadTagged(monadIdentity)("Error")(fn))(map(functorExceptT(functorIdentity))(error)(readString(monadIdentity)(fn)))));
    };
    toAff = /* @__PURE__ */ toAff$prime(coerce2);
    toAffE = function(f) {
      return bind(bindAff)(liftEffect(monadEffectAff)(f))(toAff);
    };
  }
});

// output/Data.Array/foreign.js
var range2, replicateFill, replicatePolyfill, replicate, fromFoldableImpl, length4, unconsImpl, indexImpl, findMapImpl, findIndexImpl, findLastIndexImpl, _deleteAt, reverse2, concat, filter2, partition2, sortByImpl, slice2, zipWith2, any2, unsafeIndexImpl;
var init_foreign37 = __esm({
  "output/Data.Array/foreign.js"() {
    range2 = function(start) {
      return function(end2) {
        var step3 = start > end2 ? -1 : 1;
        var result2 = new Array(step3 * (end2 - start) + 1);
        var i = start, n = 0;
        while (i !== end2) {
          result2[n++] = i;
          i += step3;
        }
        result2[n] = i;
        return result2;
      };
    };
    replicateFill = function(count) {
      return function(value) {
        if (count < 1) {
          return [];
        }
        var result2 = new Array(count);
        return result2.fill(value);
      };
    };
    replicatePolyfill = function(count) {
      return function(value) {
        var result2 = [];
        var n = 0;
        for (var i = 0; i < count; i++) {
          result2[n++] = value;
        }
        return result2;
      };
    };
    replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;
    fromFoldableImpl = function() {
      function Cons3(head4, tail2) {
        this.head = head4;
        this.tail = tail2;
      }
      var emptyList = {};
      function curryCons(head4) {
        return function(tail2) {
          return new Cons3(head4, tail2);
        };
      }
      function listToArray(list) {
        var result2 = [];
        var count = 0;
        var xs = list;
        while (xs !== emptyList) {
          result2[count++] = xs.head;
          xs = xs.tail;
        }
        return result2;
      }
      return function(foldr4) {
        return function(xs) {
          return listToArray(foldr4(curryCons)(emptyList)(xs));
        };
      };
    }();
    length4 = function(xs) {
      return xs.length;
    };
    unconsImpl = function(empty9) {
      return function(next2) {
        return function(xs) {
          return xs.length === 0 ? empty9({}) : next2(xs[0])(xs.slice(1));
        };
      };
    };
    indexImpl = function(just) {
      return function(nothing) {
        return function(xs) {
          return function(i) {
            return i < 0 || i >= xs.length ? nothing : just(xs[i]);
          };
        };
      };
    };
    findMapImpl = function(nothing) {
      return function(isJust2) {
        return function(f) {
          return function(xs) {
            for (var i = 0; i < xs.length; i++) {
              var result2 = f(xs[i]);
              if (isJust2(result2))
                return result2;
            }
            return nothing;
          };
        };
      };
    };
    findIndexImpl = function(just) {
      return function(nothing) {
        return function(f) {
          return function(xs) {
            for (var i = 0, l = xs.length; i < l; i++) {
              if (f(xs[i]))
                return just(i);
            }
            return nothing;
          };
        };
      };
    };
    findLastIndexImpl = function(just) {
      return function(nothing) {
        return function(f) {
          return function(xs) {
            for (var i = xs.length - 1; i >= 0; i--) {
              if (f(xs[i]))
                return just(i);
            }
            return nothing;
          };
        };
      };
    };
    _deleteAt = function(just) {
      return function(nothing) {
        return function(i) {
          return function(l) {
            if (i < 0 || i >= l.length)
              return nothing;
            var l1 = l.slice();
            l1.splice(i, 1);
            return just(l1);
          };
        };
      };
    };
    reverse2 = function(l) {
      return l.slice().reverse();
    };
    concat = function(xss) {
      if (xss.length <= 1e4) {
        return Array.prototype.concat.apply([], xss);
      }
      var result2 = [];
      for (var i = 0, l = xss.length; i < l; i++) {
        var xs = xss[i];
        for (var j = 0, m = xs.length; j < m; j++) {
          result2.push(xs[j]);
        }
      }
      return result2;
    };
    filter2 = function(f) {
      return function(xs) {
        return xs.filter(f);
      };
    };
    partition2 = function(f) {
      return function(xs) {
        var yes = [];
        var no = [];
        for (var i = 0; i < xs.length; i++) {
          var x = xs[i];
          if (f(x))
            yes.push(x);
          else
            no.push(x);
        }
        return { yes, no };
      };
    };
    sortByImpl = function() {
      function mergeFromTo(compare2, fromOrdering, xs1, xs2, from2, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c2;
        mid = from2 + (to - from2 >> 1);
        if (mid - from2 > 1)
          mergeFromTo(compare2, fromOrdering, xs2, xs1, from2, mid);
        if (to - mid > 1)
          mergeFromTo(compare2, fromOrdering, xs2, xs1, mid, to);
        i = from2;
        j = mid;
        k = from2;
        while (i < mid && j < to) {
          x = xs2[i];
          y = xs2[j];
          c2 = fromOrdering(compare2(x)(y));
          if (c2 > 0) {
            xs1[k++] = y;
            ++j;
          } else {
            xs1[k++] = x;
            ++i;
          }
        }
        while (i < mid) {
          xs1[k++] = xs2[i++];
        }
        while (j < to) {
          xs1[k++] = xs2[j++];
        }
      }
      return function(compare2) {
        return function(fromOrdering) {
          return function(xs) {
            var out;
            if (xs.length < 2)
              return xs;
            out = xs.slice(0);
            mergeFromTo(compare2, fromOrdering, out, xs.slice(0), 0, xs.length);
            return out;
          };
        };
      };
    }();
    slice2 = function(s) {
      return function(e) {
        return function(l) {
          return l.slice(s, e);
        };
      };
    };
    zipWith2 = function(f) {
      return function(xs) {
        return function(ys) {
          var l = xs.length < ys.length ? xs.length : ys.length;
          var result2 = new Array(l);
          for (var i = 0; i < l; i++) {
            result2[i] = f(xs[i])(ys[i]);
          }
          return result2;
        };
      };
    };
    any2 = function(p) {
      return function(xs) {
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          if (p(xs[i]))
            return true;
        }
        return false;
      };
    };
    unsafeIndexImpl = function(xs) {
      return function(n) {
        return xs[n];
      };
    };
  }
});

// output/Control.Monad.ST.Internal/foreign.js
function whileST(f) {
  return function(a) {
    return function() {
      while (f()) {
        a();
      }
    };
  };
}
function newSTRef(val) {
  return function() {
    return { value: val };
  };
}
var map_, pure_, bind_, foreach, read2, modifyImpl2, write2;
var init_foreign38 = __esm({
  "output/Control.Monad.ST.Internal/foreign.js"() {
    map_ = function(f) {
      return function(a) {
        return function() {
          return f(a());
        };
      };
    };
    pure_ = function(a) {
      return function() {
        return a;
      };
    };
    bind_ = function(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    };
    foreach = function(as) {
      return function(f) {
        return function() {
          for (var i = 0, l = as.length; i < l; i++) {
            f(as[i])();
          }
        };
      };
    };
    read2 = function(ref) {
      return function() {
        return ref.value;
      };
    };
    modifyImpl2 = function(f) {
      return function(ref) {
        return function() {
          var t = f(ref.value);
          ref.value = t.state;
          return t.value;
        };
      };
    };
    write2 = function(a) {
      return function(ref) {
        return function() {
          return ref.value = a;
        };
      };
    };
  }
});

// output/Control.Monad.ST.Internal/index.js
var $runtime_lazy3, modify$prime2, modify2, functorST, monadST, bindST, applicativeST, $lazy_applyST, monadRecST;
var init_Control_Monad_ST = __esm({
  "output/Control.Monad.ST.Internal/index.js"() {
    init_foreign38();
    init_Control4();
    init_Control5();
    init_Control7();
    init_Control_Monad_Rec();
    init_Data4();
    init_Data3();
    init_foreign38();
    $runtime_lazy3 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    modify$prime2 = modifyImpl2;
    modify2 = function(f) {
      return modify$prime2(function(s) {
        var s$prime = f(s);
        return {
          state: s$prime,
          value: s$prime
        };
      });
    };
    functorST = {
      map: map_
    };
    monadST = {
      Applicative0: function() {
        return applicativeST;
      },
      Bind1: function() {
        return bindST;
      }
    };
    bindST = {
      bind: bind_,
      Apply0: function() {
        return $lazy_applyST(0);
      }
    };
    applicativeST = {
      pure: pure_,
      Apply0: function() {
        return $lazy_applyST(0);
      }
    };
    $lazy_applyST = /* @__PURE__ */ $runtime_lazy3("applyST", "Control.Monad.ST.Internal", function() {
      return {
        apply: ap(monadST),
        Functor0: function() {
          return functorST;
        }
      };
    });
    monadRecST = {
      tailRecM: function(f) {
        return function(a) {
          var isLooping = function(v) {
            if (v instanceof Loop) {
              return true;
            }
            ;
            return false;
          };
          var fromDone = function(v) {
            if (v instanceof Done) {
              return v.value0;
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 69, column 32 - line 69, column 46): " + [v.constructor.name]);
          };
          return bind(bindST)(bindFlipped(bindST)(newSTRef)(f(a)))(function(r) {
            return discard(discardUnit)(bindST)(whileST(map(functorST)(isLooping)(read2(r)))(bind(bindST)(read2(r))(function(v) {
              if (v instanceof Loop) {
                return bind(bindST)(f(v.value0))(function(e) {
                  return $$void(functorST)(write2(e)(r));
                });
              }
              ;
              if (v instanceof Done) {
                return pure(applicativeST)(unit);
              }
              ;
              throw new Error("Failed pattern match at Control.Monad.ST.Internal (line 61, column 18 - line 65, column 28): " + [v.constructor.name]);
            })))(function() {
              return map(functorST)(fromDone)(read2(r));
            });
          });
        };
      },
      Monad0: function() {
        return monadST;
      }
    };
  }
});

// output/Data.Array.ST/foreign.js
function newSTArray() {
  return [];
}
function copyImpl(xs) {
  return function() {
    return xs.slice();
  };
}
var pushAll, unsafeFreeze, unsafeThaw, thaw, sortByImpl2;
var init_foreign39 = __esm({
  "output/Data.Array.ST/foreign.js"() {
    pushAll = function(as) {
      return function(xs) {
        return function() {
          return xs.push.apply(xs, as);
        };
      };
    };
    unsafeFreeze = function(xs) {
      return function() {
        return xs;
      };
    };
    unsafeThaw = function(xs) {
      return function() {
        return xs;
      };
    };
    thaw = copyImpl;
    sortByImpl2 = function() {
      function mergeFromTo(compare2, fromOrdering, xs1, xs2, from2, to) {
        var mid;
        var i;
        var j;
        var k;
        var x;
        var y;
        var c2;
        mid = from2 + (to - from2 >> 1);
        if (mid - from2 > 1)
          mergeFromTo(compare2, fromOrdering, xs2, xs1, from2, mid);
        if (to - mid > 1)
          mergeFromTo(compare2, fromOrdering, xs2, xs1, mid, to);
        i = from2;
        j = mid;
        k = from2;
        while (i < mid && j < to) {
          x = xs2[i];
          y = xs2[j];
          c2 = fromOrdering(compare2(x)(y));
          if (c2 > 0) {
            xs1[k++] = y;
            ++j;
          } else {
            xs1[k++] = x;
            ++i;
          }
        }
        while (i < mid) {
          xs1[k++] = xs2[i++];
        }
        while (j < to) {
          xs1[k++] = xs2[j++];
        }
      }
      return function(compare2) {
        return function(fromOrdering) {
          return function(xs) {
            return function() {
              if (xs.length < 2)
                return xs;
              mergeFromTo(compare2, fromOrdering, xs, xs.slice(0), 0, xs.length);
              return xs;
            };
          };
        };
      };
    }();
  }
});

// output/Data.Array.ST/index.js
var withArray, push;
var init_Data_Array = __esm({
  "output/Data.Array.ST/index.js"() {
    init_foreign39();
    init_Control5();
    init_Control_Monad_ST();
    init_Data15();
    init_Data12();
    init_Data9();
    init_foreign39();
    withArray = function(f) {
      return function(xs) {
        return function __do2() {
          var result2 = thaw(xs)();
          f(result2)();
          return unsafeFreeze(result2)();
        };
      };
    };
    push = function(a) {
      return pushAll([a]);
    };
  }
});

// output/Data.Array.ST.Iterator/index.js
var Iterator, peek, next, pushWhile, iterator, iterate;
var init_Data_Array_ST = __esm({
  "output/Data.Array.ST.Iterator/index.js"() {
    init_Control_Monad_ST();
    init_Data_Array();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data15();
    Iterator = /* @__PURE__ */ function() {
      function Iterator2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Iterator2.create = function(value0) {
        return function(value1) {
          return new Iterator2(value0, value1);
        };
      };
      return Iterator2;
    }();
    peek = function(v) {
      return function __do2() {
        var i = read2(v.value1)();
        return v.value0(i);
      };
    };
    next = function(v) {
      return function __do2() {
        var i = read2(v.value1)();
        modify2(function(v1) {
          return v1 + 1 | 0;
        })(v.value1)();
        return v.value0(i);
      };
    };
    pushWhile = function(p) {
      return function(iter) {
        return function(array) {
          return function __do2() {
            var $$break = newSTRef(false)();
            while (map(functorST)(not(heytingAlgebraBoolean))(read2($$break))()) {
              (function __do3() {
                var mx = peek(iter)();
                if (mx instanceof Just && p(mx.value0)) {
                  push(mx.value0)(array)();
                  return $$void(functorST)(next(iter))();
                }
                ;
                return $$void(functorST)(write2(true)($$break))();
              })();
            }
            ;
            return {};
          };
        };
      };
    };
    iterator = function(f) {
      return map(functorST)(Iterator.create(f))(newSTRef(0));
    };
    iterate = function(iter) {
      return function(f) {
        return function __do2() {
          var $$break = newSTRef(false)();
          while (map(functorST)(not(heytingAlgebraBoolean))(read2($$break))()) {
            (function __do3() {
              var mx = next(iter)();
              if (mx instanceof Just) {
                return f(mx.value0)();
              }
              ;
              if (mx instanceof Nothing) {
                return $$void(functorST)(write2(true)($$break))();
              }
              ;
              throw new Error("Failed pattern match at Data.Array.ST.Iterator (line 42, column 5 - line 44, column 47): " + [mx.constructor.name]);
            })();
          }
          ;
          return {};
        };
      };
    };
  }
});

// output/Data.Array/index.js
var zip, unsafeIndex, uncons2, toUnfoldable2, take3, sortBy2, sortWith, sort, snoc2, singleton5, $$null, nubByEq2, mapWithIndex2, intercalate3, init2, index2, last2, unsnoc2, head, nubBy2, nub2, groupBy2, fromFoldable2, foldr2, foldl2, foldMap2, foldM2, fold2, findMap2, findLastIndex2, findIndex2, intersectBy2, intersect2, find2, elemIndex, notElem2, elem2, drop3, deleteAt, deleteBy, $$delete, cons2, concatMap, mapMaybe2, catMaybes2;
var init_Data39 = __esm({
  "output/Data.Array/index.js"() {
    init_foreign37();
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control8();
    init_Control_Monad_Rec();
    init_Control_Monad_ST();
    init_Data_Array();
    init_Data_Array_ST();
    init_Data();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data29();
    init_Data22();
    init_Data32();
    init_foreign37();
    zip = /* @__PURE__ */ function() {
      return zipWith2(Tuple.create);
    }();
    unsafeIndex = function() {
      return unsafeIndexImpl;
    };
    uncons2 = /* @__PURE__ */ function() {
      return unconsImpl($$const(Nothing.value))(function(x) {
        return function(xs) {
          return new Just({
            head: x,
            tail: xs
          });
        };
      });
    }();
    toUnfoldable2 = function(dictUnfoldable) {
      return function(xs) {
        var len = length4(xs);
        var f = function(i) {
          if (i < len) {
            return new Just(new Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
          }
          ;
          if (otherwise) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at Data.Array (line 156, column 3 - line 158, column 26): " + [i.constructor.name]);
        };
        return unfoldr(dictUnfoldable)(f)(0);
      };
    };
    take3 = function(n) {
      return function(xs) {
        var $57 = n < 1;
        if ($57) {
          return [];
        }
        ;
        return slice2(0)(n)(xs);
      };
    };
    sortBy2 = function(comp) {
      return sortByImpl(comp)(function(v) {
        if (v instanceof GT) {
          return 1;
        }
        ;
        if (v instanceof EQ) {
          return 0;
        }
        ;
        if (v instanceof LT) {
          return -1 | 0;
        }
        ;
        throw new Error("Failed pattern match at Data.Array (line 829, column 31 - line 832, column 11): " + [v.constructor.name]);
      });
    };
    sortWith = function(dictOrd) {
      return function(f) {
        return sortBy2(comparing(dictOrd)(f));
      };
    };
    sort = function(dictOrd) {
      return function(xs) {
        return sortBy2(compare(dictOrd))(xs);
      };
    };
    snoc2 = function(xs) {
      return function(x) {
        return withArray(push(x))(xs)();
      };
    };
    singleton5 = function(a) {
      return [a];
    };
    $$null = function(xs) {
      return length4(xs) === 0;
    };
    nubByEq2 = function(eq2) {
      return function(xs) {
        return function __do2() {
          var arr = newSTArray();
          foreach(xs)(function(x) {
            return function __do3() {
              var e = map(functorST)(function() {
                var $89 = not(heytingAlgebraBoolean);
                var $90 = any2(function(v) {
                  return eq2(v)(x);
                });
                return function($91) {
                  return $89($90($91));
                };
              }())(unsafeFreeze(arr))();
              return when(applicativeST)(e)($$void(functorST)(push(x)(arr)))();
            };
          })();
          return unsafeFreeze(arr)();
        }();
      };
    };
    mapWithIndex2 = function(f) {
      return function(xs) {
        return zipWith2(f)(range2(0)(length4(xs) - 1 | 0))(xs);
      };
    };
    intercalate3 = function(dictMonoid) {
      return intercalate2(foldableArray)(dictMonoid);
    };
    init2 = function(xs) {
      if ($$null(xs)) {
        return Nothing.value;
      }
      ;
      if (otherwise) {
        return new Just(slice2(0)(length4(xs) - 1 | 0)(xs));
      }
      ;
      throw new Error("Failed pattern match at Data.Array (line 338, column 1 - line 338, column 45): " + [xs.constructor.name]);
    };
    index2 = /* @__PURE__ */ function() {
      return indexImpl(Just.create)(Nothing.value);
    }();
    last2 = function(xs) {
      return index2(xs)(length4(xs) - 1 | 0);
    };
    unsnoc2 = function(xs) {
      return apply(applyMaybe)(map(functorMaybe)(function(v) {
        return function(v1) {
          return {
            init: v,
            last: v1
          };
        };
      })(init2(xs)))(last2(xs));
    };
    head = function(xs) {
      return index2(xs)(0);
    };
    nubBy2 = function(comp) {
      return function(xs) {
        var indexedAndSorted = sortBy2(function(x) {
          return function(y) {
            return comp(snd(x))(snd(y));
          };
        })(mapWithIndex2(Tuple.create)(xs));
        var v = head(indexedAndSorted);
        if (v instanceof Nothing) {
          return [];
        }
        ;
        if (v instanceof Just) {
          return map(functorArray)(snd)(sortWith(ordInt)(fst)(function __do2() {
            var result2 = unsafeThaw(singleton5(v.value0))();
            foreach(indexedAndSorted)(function(v1) {
              return function __do3() {
                var lst = map(functorST)(function() {
                  var $92 = function() {
                    var $94 = fromJust();
                    return function($95) {
                      return $94(last2($95));
                    };
                  }();
                  return function($93) {
                    return snd($92($93));
                  };
                }())(unsafeFreeze(result2))();
                return when(applicativeST)(notEq(eqOrdering)(comp(lst)(v1.value1))(EQ.value))($$void(functorST)(push(v1)(result2)))();
              };
            })();
            return unsafeFreeze(result2)();
          }()));
        }
        ;
        throw new Error("Failed pattern match at Data.Array (line 1044, column 17 - line 1052, column 29): " + [v.constructor.name]);
      };
    };
    nub2 = function(dictOrd) {
      return nubBy2(compare(dictOrd));
    };
    groupBy2 = function(op) {
      return function(xs) {
        return function __do2() {
          var result2 = newSTArray();
          var iter = iterator(function(v) {
            return index2(xs)(v);
          })();
          iterate(iter)(function(x) {
            return $$void(functorST)(function __do3() {
              var sub2 = newSTArray();
              push(x)(sub2)();
              pushWhile(op(x))(iter)(sub2)();
              var grp = unsafeFreeze(sub2)();
              return push(grp)(result2)();
            });
          })();
          return unsafeFreeze(result2)();
        }();
      };
    };
    fromFoldable2 = function(dictFoldable) {
      return fromFoldableImpl(foldr(dictFoldable));
    };
    foldr2 = /* @__PURE__ */ foldr(foldableArray);
    foldl2 = /* @__PURE__ */ foldl(foldableArray);
    foldMap2 = function(dictMonoid) {
      return foldMap(foldableArray)(dictMonoid);
    };
    foldM2 = function(dictMonad) {
      return function(f) {
        return function(b) {
          return unconsImpl(function(v) {
            return pure(dictMonad.Applicative0())(b);
          })(function(a) {
            return function(as) {
              return bind(dictMonad.Bind1())(f(b)(a))(function(b$prime) {
                return foldM2(dictMonad)(f)(b$prime)(as);
              });
            };
          });
        };
      };
    };
    fold2 = function(dictMonoid) {
      return fold(foldableArray)(dictMonoid);
    };
    findMap2 = /* @__PURE__ */ function() {
      return findMapImpl(Nothing.value)(isJust);
    }();
    findLastIndex2 = /* @__PURE__ */ function() {
      return findLastIndexImpl(Just.create)(Nothing.value);
    }();
    findIndex2 = /* @__PURE__ */ function() {
      return findIndexImpl(Just.create)(Nothing.value);
    }();
    intersectBy2 = function(eq2) {
      return function(xs) {
        return function(ys) {
          return filter2(function(x) {
            return isJust(findIndex2(eq2(x))(ys));
          })(xs);
        };
      };
    };
    intersect2 = function(dictEq) {
      return intersectBy2(eq(dictEq));
    };
    find2 = function(f) {
      return function(xs) {
        return map(functorMaybe)(unsafeIndex()(xs))(findIndex2(f)(xs));
      };
    };
    elemIndex = function(dictEq) {
      return function(x) {
        return findIndex2(function(v) {
          return eq(dictEq)(v)(x);
        });
      };
    };
    notElem2 = function(dictEq) {
      return function(a) {
        return function(arr) {
          return isNothing(elemIndex(dictEq)(a)(arr));
        };
      };
    };
    elem2 = function(dictEq) {
      return function(a) {
        return function(arr) {
          return isJust(elemIndex(dictEq)(a)(arr));
        };
      };
    };
    drop3 = function(n) {
      return function(xs) {
        var $79 = n < 1;
        if ($79) {
          return xs;
        }
        ;
        return slice2(n)(length4(xs))(xs);
      };
    };
    deleteAt = /* @__PURE__ */ function() {
      return _deleteAt(Just.create)(Nothing.value);
    }();
    deleteBy = function(v) {
      return function(v1) {
        return function(v2) {
          if (v2.length === 0) {
            return [];
          }
          ;
          return maybe(v2)(function(i) {
            return fromJust()(deleteAt(i)(v2));
          })(findIndex2(v(v1))(v2));
        };
      };
    };
    $$delete = function(dictEq) {
      return deleteBy(eq(dictEq));
    };
    cons2 = function(x) {
      return function(xs) {
        return append(semigroupArray)([x])(xs);
      };
    };
    concatMap = /* @__PURE__ */ flip(/* @__PURE__ */ bind(bindArray));
    mapMaybe2 = function(f) {
      return concatMap(function() {
        var $99 = maybe([])(singleton5);
        return function($100) {
          return $99(f($100));
        };
      }());
    };
    catMaybes2 = /* @__PURE__ */ mapMaybe2(/* @__PURE__ */ identity(categoryFn));
  }
});

// output/Data.Lazy/foreign.js
var defer2, force;
var init_foreign40 = __esm({
  "output/Data.Lazy/foreign.js"() {
    defer2 = function(thunk) {
      var v = null;
      return function() {
        if (thunk === void 0)
          return v;
        v = thunk();
        thunk = void 0;
        return v;
      };
    };
    force = function(l) {
      return l();
    };
  }
});

// output/Data.Lazy/index.js
var functorLazy;
var init_Data40 = __esm({
  "output/Data.Lazy/index.js"() {
    init_foreign40();
    init_Control3();
    init_Data13();
    init_Data8();
    init_Data18();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data_Functor();
    init_Data21();
    init_Data19();
    init_Data12();
    init_Data11();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data29();
    init_Data3();
    init_foreign40();
    functorLazy = {
      map: function(f) {
        return function(l) {
          return defer2(function(v) {
            return f(force(l));
          });
        };
      }
    };
  }
});

// output/Data.List.Lazy.Types/index.js
var List, Nil2, Cons2, nil, step, lazyList, cons3, foldableList2, unfoldable1List, unfoldableList;
var init_Data_List_Lazy = __esm({
  "output/Data.List.Lazy.Types/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control8();
    init_Control7();
    init_Data8();
    init_Data25();
    init_Data28();
    init_Data2();
    init_Data4();
    init_Data27();
    init_Data40();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data33();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data22();
    init_Data31();
    List = function(x) {
      return x;
    };
    Nil2 = /* @__PURE__ */ function() {
      function Nil3() {
      }
      ;
      Nil3.value = new Nil3();
      return Nil3;
    }();
    Cons2 = /* @__PURE__ */ function() {
      function Cons3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Cons3.create = function(value0) {
        return function(value1) {
          return new Cons3(value0, value1);
        };
      };
      return Cons3;
    }();
    nil = /* @__PURE__ */ defer2(function(v) {
      return Nil2.value;
    });
    step = /* @__PURE__ */ function() {
      var $225 = unwrap();
      return function($226) {
        return force($225($226));
      };
    }();
    lazyList = {
      defer: function(f) {
        return defer2(function($227) {
          return step(f($227));
        });
      }
    };
    cons3 = function(x) {
      return function(xs) {
        return defer2(function(v) {
          return new Cons2(x, xs);
        });
      };
    };
    foldableList2 = {
      foldr: function(op) {
        return function(z) {
          return function(xs) {
            var rev = foldl(foldableList2)(flip(cons3))(nil);
            return foldl(foldableList2)(flip(op))(z)(rev(xs));
          };
        };
      },
      foldl: function(op) {
        var go = function($copy_b) {
          return function($copy_xs) {
            var $tco_var_b = $copy_b;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(b, xs) {
              var v = step(xs);
              if (v instanceof Nil2) {
                $tco_done = true;
                return b;
              }
              ;
              if (v instanceof Cons2) {
                $tco_var_b = op(b)(v.value0);
                $copy_xs = v.value1;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.List.Lazy.Types (line 127, column 7 - line 129, column 40): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_b, $copy_xs);
            }
            ;
            return $tco_result;
          };
        };
        return go;
      },
      foldMap: function(dictMonoid) {
        return function(f) {
          return foldl(foldableList2)(function(b) {
            return function(a) {
              return append(dictMonoid.Semigroup0())(b)(f(a));
            };
          })(mempty(dictMonoid));
        };
      }
    };
    unfoldable1List = {
      unfoldr1: /* @__PURE__ */ function() {
        var go = function(f) {
          return function(b) {
            return defer(lazyList)(function(v) {
              var v1 = f(b);
              if (v1.value1 instanceof Just) {
                return cons3(v1.value0)(go(f)(v1.value1.value0));
              }
              ;
              if (v1.value1 instanceof Nothing) {
                return cons3(v1.value0)(nil);
              }
              ;
              throw new Error("Failed pattern match at Data.List.Lazy.Types (line 151, column 28 - line 153, column 33): " + [v1.constructor.name]);
            });
          };
        };
        return go;
      }()
    };
    unfoldableList = {
      unfoldr: /* @__PURE__ */ function() {
        var go = function(f) {
          return function(b) {
            return defer(lazyList)(function(v) {
              var v1 = f(b);
              if (v1 instanceof Nothing) {
                return nil;
              }
              ;
              if (v1 instanceof Just) {
                return cons3(v1.value0.value0)(go(f)(v1.value0.value1));
              }
              ;
              throw new Error("Failed pattern match at Data.List.Lazy.Types (line 157, column 28 - line 159, column 39): " + [v1.constructor.name]);
            });
          };
        };
        return go;
      }(),
      Unfoldable10: function() {
        return unfoldable1List;
      }
    };
  }
});

// output/Data.List.Lazy/index.js
var filter3;
var init_Data_List4 = __esm({
  "output/Data.List.Lazy/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control8();
    init_Control_Monad_Rec();
    init_Data();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data40();
    init_Data_List2();
    init_Data_List_Lazy();
    init_Data15();
    init_Data23();
    init_Data33();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Data22();
    init_Data32();
    init_Data25();
    init_Data_List_Lazy();
    init_Data29();
    filter3 = function(p) {
      var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Nil2) {
            $tco_done = true;
            return Nil2.value;
          }
          ;
          if (v instanceof Cons2) {
            if (p(v.value0)) {
              $tco_done = true;
              return new Cons2(v.value0, filter3(p)(v.value1));
            }
            ;
            if (otherwise) {
              $copy_v = step(v.value1);
              return;
            }
            ;
          }
          ;
          throw new Error("Failed pattern match at Data.List.Lazy (line 416, column 3 - line 416, column 15): " + [v.constructor.name]);
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      var $268 = map(functorLazy)(go);
      var $269 = unwrap();
      return function($270) {
        return List($268($269($270)));
      };
    };
  }
});

// output/Data.Map.Internal/index.js
var Leaf, Two, Three, TwoLeft, TwoRight, ThreeLeft, ThreeMiddle, ThreeRight, KickUp, size, singleton6, toUnfoldable3, toAscArray, showMap, lookup, member, isEmpty, functorMap, fromZipper, insert, pop, foldableMap, foldableWithIndexMap, keys, values, empty2, fromFoldable3, filterWithKey, filter4, mapMaybeWithKey, $$delete2, difference, alter, fromFoldableWith, unionWith, union2;
var init_Data_Map = __esm({
  "output/Data.Map.Internal/index.js"() {
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data8();
    init_Data25();
    init_Data28();
    init_Data2();
    init_Data4();
    init_Data27();
    init_Data21();
    init_Data38();
    init_Data_List4();
    init_Data_List_Lazy();
    init_Data_List();
    init_Data15();
    init_Data19();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data22();
    init_Data32();
    init_Partial2();
    Leaf = /* @__PURE__ */ function() {
      function Leaf2() {
      }
      ;
      Leaf2.value = new Leaf2();
      return Leaf2;
    }();
    Two = /* @__PURE__ */ function() {
      function Two2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      Two2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new Two2(value0, value1, value2, value3);
            };
          };
        };
      };
      return Two2;
    }();
    Three = /* @__PURE__ */ function() {
      function Three2(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
      }
      ;
      Three2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return function(value4) {
                return function(value5) {
                  return function(value6) {
                    return new Three2(value0, value1, value2, value3, value4, value5, value6);
                  };
                };
              };
            };
          };
        };
      };
      return Three2;
    }();
    TwoLeft = /* @__PURE__ */ function() {
      function TwoLeft2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TwoLeft2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TwoLeft2(value0, value1, value2);
          };
        };
      };
      return TwoLeft2;
    }();
    TwoRight = /* @__PURE__ */ function() {
      function TwoRight2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TwoRight2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TwoRight2(value0, value1, value2);
          };
        };
      };
      return TwoRight2;
    }();
    ThreeLeft = /* @__PURE__ */ function() {
      function ThreeLeft2(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
      }
      ;
      ThreeLeft2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return function(value4) {
                return function(value5) {
                  return new ThreeLeft2(value0, value1, value2, value3, value4, value5);
                };
              };
            };
          };
        };
      };
      return ThreeLeft2;
    }();
    ThreeMiddle = /* @__PURE__ */ function() {
      function ThreeMiddle2(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
      }
      ;
      ThreeMiddle2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return function(value4) {
                return function(value5) {
                  return new ThreeMiddle2(value0, value1, value2, value3, value4, value5);
                };
              };
            };
          };
        };
      };
      return ThreeMiddle2;
    }();
    ThreeRight = /* @__PURE__ */ function() {
      function ThreeRight2(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
      }
      ;
      ThreeRight2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return function(value4) {
                return function(value5) {
                  return new ThreeRight2(value0, value1, value2, value3, value4, value5);
                };
              };
            };
          };
        };
      };
      return ThreeRight2;
    }();
    KickUp = /* @__PURE__ */ function() {
      function KickUp2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      KickUp2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new KickUp2(value0, value1, value2, value3);
            };
          };
        };
      };
      return KickUp2;
    }();
    size = function(v) {
      if (v instanceof Leaf) {
        return 0;
      }
      ;
      if (v instanceof Two) {
        return (1 + size(v.value0) | 0) + size(v.value3) | 0;
      }
      ;
      if (v instanceof Three) {
        return ((2 + size(v.value0) | 0) + size(v.value3) | 0) + size(v.value6) | 0;
      }
      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 705, column 1 - line 705, column 35): " + [v.constructor.name]);
    };
    singleton6 = function(k) {
      return function(v) {
        return new Two(Leaf.value, k, v, Leaf.value);
      };
    };
    toUnfoldable3 = function(dictUnfoldable) {
      return function(m) {
        var go = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v instanceof Nil) {
              $tco_done = true;
              return Nothing.value;
            }
            ;
            if (v instanceof Cons) {
              if (v.value0 instanceof Leaf) {
                $copy_v = v.value1;
                return;
              }
              ;
              if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                $tco_done = true;
                return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), v.value1));
              }
              ;
              if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                $tco_done = true;
                return new Just(new Tuple(new Tuple(v.value0.value1, v.value0.value2), new Cons(v.value0.value3, v.value1)));
              }
              ;
              if (v.value0 instanceof Two) {
                $copy_v = new Cons(v.value0.value0, new Cons(singleton6(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, v.value1)));
                return;
              }
              ;
              if (v.value0 instanceof Three) {
                $copy_v = new Cons(v.value0.value0, new Cons(singleton6(v.value0.value1)(v.value0.value2), new Cons(v.value0.value3, new Cons(singleton6(v.value0.value4)(v.value0.value5), new Cons(v.value0.value6, v.value1)))));
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 624, column 18 - line 633, column 71): " + [v.value0.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 623, column 3 - line 623, column 19): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return unfoldr(dictUnfoldable)(go)(new Cons(m, Nil.value));
      };
    };
    toAscArray = /* @__PURE__ */ toUnfoldable3(unfoldableArray);
    showMap = function(dictShow) {
      return function(dictShow1) {
        return {
          show: function(m) {
            return "(fromFoldable " + (show(showArray(showTuple(dictShow)(dictShow1)))(toAscArray(m)) + ")");
          }
        };
      };
    };
    lookup = function(dictOrd) {
      return function(k) {
        var comp = compare(dictOrd);
        var go = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v instanceof Leaf) {
              $tco_done = true;
              return Nothing.value;
            }
            ;
            if (v instanceof Two) {
              var v2 = comp(k)(v.value1);
              if (v2 instanceof EQ) {
                $tco_done = true;
                return new Just(v.value2);
              }
              ;
              if (v2 instanceof LT) {
                $copy_v = v.value0;
                return;
              }
              ;
              $copy_v = v.value3;
              return;
            }
            ;
            if (v instanceof Three) {
              var v32 = comp(k)(v.value1);
              if (v32 instanceof EQ) {
                $tco_done = true;
                return new Just(v.value2);
              }
              ;
              var v42 = comp(k)(v.value4);
              if (v42 instanceof EQ) {
                $tco_done = true;
                return new Just(v.value5);
              }
              ;
              if (v32 instanceof LT) {
                $copy_v = v.value0;
                return;
              }
              ;
              if (v42 instanceof GT) {
                $copy_v = v.value6;
                return;
              }
              ;
              $copy_v = v.value3;
              return;
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 241, column 5 - line 241, column 22): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go;
      };
    };
    member = function(dictOrd) {
      return function(k) {
        return function(m) {
          return isJust(lookup(dictOrd)(k)(m));
        };
      };
    };
    isEmpty = function(v) {
      if (v instanceof Leaf) {
        return true;
      }
      ;
      return false;
    };
    functorMap = {
      map: function(v) {
        return function(v1) {
          if (v1 instanceof Leaf) {
            return Leaf.value;
          }
          ;
          if (v1 instanceof Two) {
            return new Two(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3));
          }
          ;
          if (v1 instanceof Three) {
            return new Three(map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), map(functorMap)(v)(v1.value6));
          }
          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 116, column 1 - line 119, column 110): " + [v.constructor.name, v1.constructor.name]);
        };
      }
    };
    fromZipper = function($copy_dictOrd) {
      return function($copy_v) {
        return function($copy_tree) {
          var $tco_var_dictOrd = $copy_dictOrd;
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(dictOrd, v, tree) {
            if (v instanceof Nil) {
              $tco_done = true;
              return tree;
            }
            ;
            if (v instanceof Cons) {
              if (v.value0 instanceof TwoLeft) {
                $tco_var_dictOrd = dictOrd;
                $tco_var_v = v.value1;
                $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                return;
              }
              ;
              if (v.value0 instanceof TwoRight) {
                $tco_var_dictOrd = dictOrd;
                $tco_var_v = v.value1;
                $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                return;
              }
              ;
              if (v.value0 instanceof ThreeLeft) {
                $tco_var_dictOrd = dictOrd;
                $tco_var_v = v.value1;
                $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                return;
              }
              ;
              if (v.value0 instanceof ThreeMiddle) {
                $tco_var_dictOrd = dictOrd;
                $tco_var_v = v.value1;
                $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                return;
              }
              ;
              if (v.value0 instanceof ThreeRight) {
                $tco_var_dictOrd = dictOrd;
                $tco_var_v = v.value1;
                $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 462, column 3 - line 467, column 88): " + [v.value0.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 459, column 1 - line 459, column 80): " + [v.constructor.name, tree.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
          }
          ;
          return $tco_result;
        };
      };
    };
    insert = function(dictOrd) {
      return function(k) {
        return function(v) {
          var up = function($copy_v1) {
            return function($copy_v2) {
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v1, v2) {
                if (v1 instanceof Nil) {
                  $tco_done = true;
                  return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                }
                ;
                if (v1 instanceof Cons) {
                  if (v1.value0 instanceof TwoLeft) {
                    $tco_done = true;
                    return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                  }
                  ;
                  if (v1.value0 instanceof TwoRight) {
                    $tco_done = true;
                    return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                  }
                  ;
                  if (v1.value0 instanceof ThreeLeft) {
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                    return;
                  }
                  ;
                  if (v1.value0 instanceof ThreeMiddle) {
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                    return;
                  }
                  ;
                  if (v1.value0 instanceof ThreeRight) {
                    $tco_var_v1 = v1.value1;
                    $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                    return;
                  }
                  ;
                  throw new Error("Failed pattern match at Data.Map.Internal (line 498, column 5 - line 503, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 3 - line 495, column 56): " + [v1.constructor.name, v2.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v1, $copy_v2);
              }
              ;
              return $tco_result;
            };
          };
          var comp = compare(dictOrd);
          var down = function($copy_ctx) {
            return function($copy_v1) {
              var $tco_var_ctx = $copy_ctx;
              var $tco_done1 = false;
              var $tco_result;
              function $tco_loop(ctx, v1) {
                if (v1 instanceof Leaf) {
                  $tco_done1 = true;
                  return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                }
                ;
                if (v1 instanceof Two) {
                  var v2 = comp(k)(v1.value1);
                  if (v2 instanceof EQ) {
                    $tco_done1 = true;
                    return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                  }
                  ;
                  if (v2 instanceof LT) {
                    $tco_var_ctx = new Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                    $copy_v1 = v1.value0;
                    return;
                  }
                  ;
                  $tco_var_ctx = new Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                  $copy_v1 = v1.value3;
                  return;
                }
                ;
                if (v1 instanceof Three) {
                  var v32 = comp(k)(v1.value1);
                  if (v32 instanceof EQ) {
                    $tco_done1 = true;
                    return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                  }
                  ;
                  var v42 = comp(k)(v1.value4);
                  if (v42 instanceof EQ) {
                    $tco_done1 = true;
                    return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                  }
                  ;
                  if (v32 instanceof LT) {
                    $tco_var_ctx = new Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                    $copy_v1 = v1.value0;
                    return;
                  }
                  ;
                  if (v32 instanceof GT && v42 instanceof LT) {
                    $tco_var_ctx = new Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                    $copy_v1 = v1.value3;
                    return;
                  }
                  ;
                  $tco_var_ctx = new Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                  $copy_v1 = v1.value6;
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 478, column 3 - line 478, column 55): " + [ctx.constructor.name, v1.constructor.name]);
              }
              ;
              while (!$tco_done1) {
                $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
              }
              ;
              return $tco_result;
            };
          };
          return down(Nil.value);
        };
      };
    };
    pop = function(dictOrd) {
      return function(k) {
        var up = function($copy_ctxs) {
          return function($copy_tree) {
            var $tco_var_ctxs = $copy_ctxs;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(ctxs, tree) {
              if (ctxs instanceof Nil) {
                $tco_done = true;
                return tree;
              }
              ;
              if (ctxs instanceof Cons) {
                if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                }
                ;
                if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                }
                ;
                if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                  $tco_var_ctxs = ctxs.value1;
                  $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                  return;
                }
                ;
                if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                  $tco_var_ctxs = ctxs.value1;
                  $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                  return;
                }
                ;
                if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                }
                ;
                if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                }
                ;
                if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                }
                ;
                if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                }
                ;
                if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                }
                ;
                if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                }
                ;
                if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                }
                ;
                if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                }
                ;
                if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                }
                ;
                if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                }
                ;
                if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                }
                ;
                if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                }
                ;
                if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                }
                ;
                $tco_done = true;
                return unsafeCrashWith("The impossible happened in partial function `up`.");
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 552, column 5 - line 573, column 86): " + [ctxs.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
            }
            ;
            return $tco_result;
          };
        };
        var removeMaxNode = function($copy_ctx) {
          return function($copy_m) {
            var $tco_var_ctx = $copy_ctx;
            var $tco_done1 = false;
            var $tco_result;
            function $tco_loop(ctx, m) {
              if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                $tco_done1 = true;
                return up(ctx)(Leaf.value);
              }
              ;
              if (m instanceof Two) {
                $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                $tco_done1 = true;
                return up(new Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
              }
              ;
              if (m instanceof Three) {
                $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                $copy_m = m.value6;
                return;
              }
              ;
              $tco_done1 = true;
              return unsafeCrashWith("The impossible happened in partial function `removeMaxNode`.");
            }
            ;
            while (!$tco_done1) {
              $tco_result = $tco_loop($tco_var_ctx, $copy_m);
            }
            ;
            return $tco_result;
          };
        };
        var maxNode = function($copy_m) {
          var $tco_done2 = false;
          var $tco_result;
          function $tco_loop(m) {
            if (m instanceof Two && m.value3 instanceof Leaf) {
              $tco_done2 = true;
              return {
                key: m.value1,
                value: m.value2
              };
            }
            ;
            if (m instanceof Two) {
              $copy_m = m.value3;
              return;
            }
            ;
            if (m instanceof Three && m.value6 instanceof Leaf) {
              $tco_done2 = true;
              return {
                key: m.value4,
                value: m.value5
              };
            }
            ;
            if (m instanceof Three) {
              $copy_m = m.value6;
              return;
            }
            ;
            $tco_done2 = true;
            return unsafeCrashWith("The impossible happened in partial function `maxNode`.");
          }
          ;
          while (!$tco_done2) {
            $tco_result = $tco_loop($copy_m);
          }
          ;
          return $tco_result;
        };
        var comp = compare(dictOrd);
        var down = function($copy_ctx) {
          return function($copy_m) {
            var $tco_var_ctx = $copy_ctx;
            var $tco_done3 = false;
            var $tco_result;
            function $tco_loop(ctx, m) {
              if (m instanceof Leaf) {
                $tco_done3 = true;
                return Nothing.value;
              }
              ;
              if (m instanceof Two) {
                var v = comp(k)(m.value1);
                if (m.value3 instanceof Leaf && v instanceof EQ) {
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value2, up(ctx)(Leaf.value)));
                }
                ;
                if (v instanceof EQ) {
                  var max3 = maxNode(m.value0);
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new TwoLeft(max3.key, max3.value, m.value3), ctx))(m.value0)));
                }
                ;
                if (v instanceof LT) {
                  $tco_var_ctx = new Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                  $copy_m = m.value0;
                  return;
                }
                ;
                $tco_var_ctx = new Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                $copy_m = m.value3;
                return;
              }
              ;
              if (m instanceof Three) {
                var leaves = function() {
                  if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                    return true;
                  }
                  ;
                  return false;
                }();
                var v = comp(k)(m.value4);
                var v32 = comp(k)(m.value1);
                if (leaves && v32 instanceof EQ) {
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                }
                ;
                if (leaves && v instanceof EQ) {
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                }
                ;
                if (v32 instanceof EQ) {
                  var max3 = maxNode(m.value0);
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value2, removeMaxNode(new Cons(new ThreeLeft(max3.key, max3.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                }
                ;
                if (v instanceof EQ) {
                  var max3 = maxNode(m.value3);
                  $tco_done3 = true;
                  return new Just(new Tuple(m.value5, removeMaxNode(new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max3.key, max3.value, m.value6), ctx))(m.value3)));
                }
                ;
                if (v32 instanceof LT) {
                  $tco_var_ctx = new Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                  $copy_m = m.value0;
                  return;
                }
                ;
                if (v32 instanceof GT && v instanceof LT) {
                  $tco_var_ctx = new Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                  $copy_m = m.value3;
                  return;
                }
                ;
                $tco_var_ctx = new Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                $copy_m = m.value6;
                return;
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 16 - line 548, column 80): " + [m.constructor.name]);
            }
            ;
            while (!$tco_done3) {
              $tco_result = $tco_loop($tco_var_ctx, $copy_m);
            }
            ;
            return $tco_result;
          };
        };
        return down(Nil.value);
      };
    };
    foldableMap = {
      foldr: function(f) {
        return function(z) {
          return function(m) {
            if (m instanceof Leaf) {
              return z;
            }
            ;
            if (m instanceof Two) {
              return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(z)(m.value3)))(m.value0);
            }
            ;
            if (m instanceof Three) {
              return foldr(foldableMap)(f)(f(m.value2)(foldr(foldableMap)(f)(f(m.value5)(foldr(foldableMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 133, column 17 - line 136, column 85): " + [m.constructor.name]);
          };
        };
      },
      foldl: function(f) {
        return function(z) {
          return function(m) {
            if (m instanceof Leaf) {
              return z;
            }
            ;
            if (m instanceof Two) {
              return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3);
            }
            ;
            if (m instanceof Three) {
              return foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(f(foldl(foldableMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 137, column 17 - line 140, column 85): " + [m.constructor.name]);
          };
        };
      },
      foldMap: function(dictMonoid) {
        return function(f) {
          return function(m) {
            if (m instanceof Leaf) {
              return mempty(dictMonoid);
            }
            ;
            if (m instanceof Two) {
              return append(dictMonoid.Semigroup0())(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append(dictMonoid.Semigroup0())(f(m.value2))(foldMap(foldableMap)(dictMonoid)(f)(m.value3)));
            }
            ;
            if (m instanceof Three) {
              return append(dictMonoid.Semigroup0())(foldMap(foldableMap)(dictMonoid)(f)(m.value0))(append(dictMonoid.Semigroup0())(f(m.value2))(append(dictMonoid.Semigroup0())(foldMap(foldableMap)(dictMonoid)(f)(m.value3))(append(dictMonoid.Semigroup0())(f(m.value5))(foldMap(foldableMap)(dictMonoid)(f)(m.value6)))));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 141, column 17 - line 144, column 93): " + [m.constructor.name]);
          };
        };
      }
    };
    foldableWithIndexMap = {
      foldrWithIndex: function(f) {
        return function(z) {
          return function(m) {
            if (m instanceof Leaf) {
              return z;
            }
            ;
            if (m instanceof Two) {
              return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value3)))(m.value0);
            }
            ;
            if (m instanceof Three) {
              return foldrWithIndex(foldableWithIndexMap)(f)(f(m.value1)(m.value2)(foldrWithIndex(foldableWithIndexMap)(f)(f(m.value4)(m.value5)(foldrWithIndex(foldableWithIndexMap)(f)(z)(m.value6)))(m.value3)))(m.value0);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 147, column 26 - line 150, column 120): " + [m.constructor.name]);
          };
        };
      },
      foldlWithIndex: function(f) {
        return function(z) {
          return function(m) {
            if (m instanceof Leaf) {
              return z;
            }
            ;
            if (m instanceof Two) {
              return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3);
            }
            ;
            if (m instanceof Three) {
              return foldlWithIndex(foldableWithIndexMap)(f)(f(m.value4)(foldlWithIndex(foldableWithIndexMap)(f)(f(m.value1)(foldlWithIndex(foldableWithIndexMap)(f)(z)(m.value0))(m.value2))(m.value3))(m.value5))(m.value6);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 151, column 26 - line 154, column 120): " + [m.constructor.name]);
          };
        };
      },
      foldMapWithIndex: function(dictMonoid) {
        return function(f) {
          return function(m) {
            if (m instanceof Leaf) {
              return mempty(dictMonoid);
            }
            ;
            if (m instanceof Two) {
              return append(dictMonoid.Semigroup0())(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append(dictMonoid.Semigroup0())(f(m.value1)(m.value2))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3)));
            }
            ;
            if (m instanceof Three) {
              return append(dictMonoid.Semigroup0())(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value0))(append(dictMonoid.Semigroup0())(f(m.value1)(m.value2))(append(dictMonoid.Semigroup0())(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value3))(append(dictMonoid.Semigroup0())(f(m.value4)(m.value5))(foldMapWithIndex(foldableWithIndexMap)(dictMonoid)(f)(m.value6)))));
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 155, column 26 - line 158, column 128): " + [m.constructor.name]);
          };
        };
      },
      Foldable0: function() {
        return foldableMap;
      }
    };
    keys = /* @__PURE__ */ function() {
      return foldrWithIndex(foldableWithIndexMap)(function(k) {
        return function(v) {
          return function(acc) {
            return new Cons(k, acc);
          };
        };
      })(Nil.value);
    }();
    values = /* @__PURE__ */ function() {
      return foldr(foldableMap)(Cons.create)(Nil.value);
    }();
    empty2 = /* @__PURE__ */ function() {
      return Leaf.value;
    }();
    fromFoldable3 = function(dictOrd) {
      return function(dictFoldable) {
        return foldl(dictFoldable)(function(m) {
          return function(v) {
            return insert(dictOrd)(v.value0)(v.value1)(m);
          };
        })(empty2);
      };
    };
    filterWithKey = function(dictOrd) {
      return function(predicate) {
        var $797 = fromFoldable3(dictOrd)(foldableList2);
        var $798 = filter3(uncurry(predicate));
        var $799 = toUnfoldable3(unfoldableList);
        return function($800) {
          return $797($798($799($800)));
        };
      };
    };
    filter4 = function(dictOrd) {
      return function(predicate) {
        return filterWithKey(dictOrd)($$const(predicate));
      };
    };
    mapMaybeWithKey = function(dictOrd) {
      return function(f) {
        return foldrWithIndex(foldableWithIndexMap)(function(k) {
          return function(a) {
            return function(acc) {
              return maybe(acc)(function(b) {
                return insert(dictOrd)(k)(b)(acc);
              })(f(k)(a));
            };
          };
        })(empty2);
      };
    };
    $$delete2 = function(dictOrd) {
      return function(k) {
        return function(m) {
          return maybe(m)(snd)(pop(dictOrd)(k)(m));
        };
      };
    };
    difference = function(dictOrd) {
      return function(m1) {
        return function(m2) {
          return foldl(foldableList)(flip($$delete2(dictOrd)))(m1)(keys(m2));
        };
      };
    };
    alter = function(dictOrd) {
      return function(f) {
        return function(k) {
          return function(m) {
            var v = f(lookup(dictOrd)(k)(m));
            if (v instanceof Nothing) {
              return $$delete2(dictOrd)(k)(m);
            }
            ;
            if (v instanceof Just) {
              return insert(dictOrd)(k)(v.value0)(m);
            }
            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 596, column 15 - line 598, column 25): " + [v.constructor.name]);
          };
        };
      };
    };
    fromFoldableWith = function(dictOrd) {
      return function(dictFoldable) {
        return function(f) {
          var combine = function(v) {
            return function(v1) {
              if (v1 instanceof Just) {
                return new Just(f(v)(v1.value0));
              }
              ;
              if (v1 instanceof Nothing) {
                return new Just(v);
              }
              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 613, column 3 - line 613, column 38): " + [v.constructor.name, v1.constructor.name]);
            };
          };
          return foldl(dictFoldable)(function(m) {
            return function(v) {
              return alter(dictOrd)(combine(v.value1))(v.value0)(m);
            };
          })(empty2);
        };
      };
    };
    unionWith = function(dictOrd) {
      return function(f) {
        return function(m1) {
          return function(m2) {
            var go = function(k) {
              return function(m) {
                return function(v) {
                  return alter(dictOrd)(function() {
                    var $808 = maybe(v)(f(v));
                    return function($809) {
                      return Just.create($808($809));
                    };
                  }())(k)(m);
                };
              };
            };
            return foldlWithIndex(foldableWithIndexMap)(go)(m2)(m1);
          };
        };
      };
    };
    union2 = function(dictOrd) {
      return unionWith(dictOrd)($$const);
    };
  }
});

// output/Data.Nullable/foreign.js
function nullable(a, r, f) {
  return a == null ? r : f(a);
}
function notNull(x) {
  return x;
}
var nullImpl;
var init_foreign41 = __esm({
  "output/Data.Nullable/foreign.js"() {
    nullImpl = null;
  }
});

// output/Data.Nullable/index.js
var toNullable, toMaybe, showNullable, eqNullable;
var init_Data41 = __esm({
  "output/Data.Nullable/index.js"() {
    init_foreign41();
    init_Data8();
    init_Data2();
    init_Data15();
    init_Data12();
    init_Data14();
    init_foreign41();
    toNullable = /* @__PURE__ */ maybe(nullImpl)(notNull);
    toMaybe = function(n) {
      return nullable(n, Nothing.value, Just.create);
    };
    showNullable = function(dictShow) {
      return {
        show: function() {
          var $5 = maybe("null")(show(dictShow));
          return function($6) {
            return $5(toMaybe($6));
          };
        }()
      };
    };
    eqNullable = function(dictEq) {
      return {
        eq: on(eq(eqMaybe(dictEq)))(toMaybe)
      };
    };
  }
});

// output/Data.Profunctor.Strong/index.js
var strongFn, first;
var init_Data_Profunctor2 = __esm({
  "output/Data.Profunctor.Strong/index.js"() {
    init_Control2();
    init_Control();
    init_Data4();
    init_Data35();
    init_Data22();
    strongFn = {
      first: function(a2b) {
        return function(v) {
          return new Tuple(a2b(v.value0), v.value1);
        };
      },
      second: /* @__PURE__ */ map(functorTuple),
      Profunctor0: function() {
        return profunctorFn;
      }
    };
    first = function(dict) {
      return dict.first;
    };
  }
});

// output/Effect.AVar/foreign.js
function empty3() {
  return new AVar(AVar.EMPTY);
}
function _readVar(util, avar, cb) {
  return function() {
    var cell = AVar.putLast(avar.reads, cb);
    AVar.drainVar(util, avar);
    return function() {
      AVar.deleteCell(cell);
    };
  };
}
function _tryPutVar(util, value, avar) {
  return function() {
    if (avar.value === AVar.EMPTY && avar.error === null) {
      avar.value = value;
      AVar.drainVar(util, avar);
      return true;
    } else {
      return false;
    }
  };
}
function _status(util, avar) {
  return function() {
    if (avar.error) {
      return util.killed(avar.error);
    }
    if (avar.value === AVar.EMPTY) {
      return util.empty;
    }
    return util.filled(avar.value);
  };
}
var AVar;
var init_foreign42 = __esm({
  "output/Effect.AVar/foreign.js"() {
    AVar = function() {
      function MutableQueue() {
        this.head = null;
        this.last = null;
        this.size = 0;
      }
      function MutableCell(queue, value) {
        this.queue = queue;
        this.value = value;
        this.next = null;
        this.prev = null;
      }
      function AVar2(value) {
        this.draining = false;
        this.error = null;
        this.value = value;
        this.takes = new MutableQueue();
        this.reads = new MutableQueue();
        this.puts = new MutableQueue();
      }
      var EMPTY = {};
      function runEff(eff) {
        try {
          eff();
        } catch (error4) {
          setTimeout(function() {
            throw error4;
          }, 0);
        }
      }
      function putLast(queue, value) {
        var cell = new MutableCell(queue, value);
        switch (queue.size) {
          case 0:
            queue.head = cell;
            break;
          case 1:
            cell.prev = queue.head;
            queue.head.next = cell;
            queue.last = cell;
            break;
          default:
            cell.prev = queue.last;
            queue.last.next = cell;
            queue.last = cell;
        }
        queue.size++;
        return cell;
      }
      function takeLast(queue) {
        var cell;
        switch (queue.size) {
          case 0:
            return null;
          case 1:
            cell = queue.head;
            queue.head = null;
            break;
          case 2:
            cell = queue.last;
            queue.head.next = null;
            queue.last = null;
            break;
          default:
            cell = queue.last;
            queue.last = cell.prev;
            queue.last.next = null;
        }
        cell.prev = null;
        cell.queue = null;
        queue.size--;
        return cell.value;
      }
      function takeHead(queue) {
        var cell;
        switch (queue.size) {
          case 0:
            return null;
          case 1:
            cell = queue.head;
            queue.head = null;
            break;
          case 2:
            cell = queue.head;
            queue.last.prev = null;
            queue.head = queue.last;
            queue.last = null;
            break;
          default:
            cell = queue.head;
            queue.head = cell.next;
            queue.head.prev = null;
        }
        cell.next = null;
        cell.queue = null;
        queue.size--;
        return cell.value;
      }
      function deleteCell(cell) {
        if (cell.queue === null) {
          return;
        }
        if (cell.queue.last === cell) {
          takeLast(cell.queue);
          return;
        }
        if (cell.queue.head === cell) {
          takeHead(cell.queue);
          return;
        }
        if (cell.prev) {
          cell.prev.next = cell.next;
        }
        if (cell.next) {
          cell.next.prev = cell.prev;
        }
        cell.queue.size--;
        cell.queue = null;
        cell.value = null;
        cell.next = null;
        cell.prev = null;
      }
      function drainVar(util, avar) {
        if (avar.draining) {
          return;
        }
        var ps = avar.puts;
        var ts = avar.takes;
        var rs = avar.reads;
        var p, r, t, value, rsize;
        avar.draining = true;
        while (1) {
          p = null;
          r = null;
          t = null;
          value = avar.value;
          rsize = rs.size;
          if (avar.error !== null) {
            value = util.left(avar.error);
            while (p = takeHead(ps)) {
              runEff(p.cb(value));
            }
            while (r = takeHead(rs)) {
              runEff(r(value));
            }
            while (t = takeHead(ts)) {
              runEff(t(value));
            }
            break;
          }
          if (value === EMPTY && (p = takeHead(ps))) {
            avar.value = value = p.value;
          }
          if (value !== EMPTY) {
            t = takeHead(ts);
            while (rsize-- && (r = takeHead(rs))) {
              runEff(r(util.right(value)));
            }
            if (t !== null) {
              avar.value = EMPTY;
              runEff(t(util.right(value)));
            }
          }
          if (p !== null) {
            runEff(p.cb(util.right(void 0)));
          }
          if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
            break;
          }
        }
        avar.draining = false;
      }
      AVar2.EMPTY = EMPTY;
      AVar2.putLast = putLast;
      AVar2.takeLast = takeLast;
      AVar2.takeHead = takeHead;
      AVar2.deleteCell = deleteCell;
      AVar2.drainVar = drainVar;
      return AVar2;
    }();
  }
});

// output/Effect.AVar/index.js
var Killed, Filled, Empty, isFilled, ffiUtil2, read3, status, tryPut;
var init_Effect7 = __esm({
  "output/Effect.AVar/index.js"() {
    init_foreign42();
    init_Data16();
    init_Data15();
    init_foreign42();
    Killed = /* @__PURE__ */ function() {
      function Killed2(value0) {
        this.value0 = value0;
      }
      ;
      Killed2.create = function(value0) {
        return new Killed2(value0);
      };
      return Killed2;
    }();
    Filled = /* @__PURE__ */ function() {
      function Filled2(value0) {
        this.value0 = value0;
      }
      ;
      Filled2.create = function(value0) {
        return new Filled2(value0);
      };
      return Filled2;
    }();
    Empty = /* @__PURE__ */ function() {
      function Empty2() {
      }
      ;
      Empty2.value = new Empty2();
      return Empty2;
    }();
    isFilled = function(v) {
      if (v instanceof Filled) {
        return true;
      }
      ;
      return false;
    };
    ffiUtil2 = /* @__PURE__ */ function() {
      return {
        left: Left.create,
        right: Right.create,
        nothing: Nothing.value,
        just: Just.create,
        killed: Killed.create,
        filled: Filled.create,
        empty: Empty.value
      };
    }();
    read3 = function(avar) {
      return function(cb) {
        return _readVar(ffiUtil2, avar, cb);
      };
    };
    status = function(avar) {
      return _status(ffiUtil2, avar);
    };
    tryPut = function(value) {
      return function(avar) {
        return _tryPutVar(ffiUtil2, value, avar);
      };
    };
  }
});

// output/Effect.Aff.AVar/index.js
var tryPut2, status2, read4, empty4;
var init_Effect_Aff = __esm({
  "output/Effect.Aff.AVar/index.js"() {
    init_Effect7();
    init_Effect6();
    init_Effect4();
    init_Effect7();
    tryPut2 = function(value) {
      var $4 = liftEffect(monadEffectAff);
      var $5 = tryPut(value);
      return function($6) {
        return $4($5($6));
      };
    };
    status2 = /* @__PURE__ */ function() {
      var $7 = liftEffect(monadEffectAff);
      return function($8) {
        return $7(status($8));
      };
    }();
    read4 = function(avar) {
      return makeAff(function(k) {
        return function __do2() {
          var c2 = read3(avar)(k)();
          return effectCanceler(c2);
        };
      });
    };
    empty4 = /* @__PURE__ */ liftEffect(monadEffectAff)(empty3);
  }
});

// output/Effect.Console/foreign.js
var log2, error2;
var init_foreign43 = __esm({
  "output/Effect.Console/foreign.js"() {
    log2 = function(s) {
      return function() {
        console.log(s);
      };
    };
    error2 = function(s) {
      return function() {
        console.error(s);
      };
    };
  }
});

// output/Effect.Console/index.js
var init_Effect8 = __esm({
  "output/Effect.Console/index.js"() {
    init_foreign43();
    init_Data14();
    init_foreign43();
  }
});

// output/Foreign.JSON/foreign.js
var parseJSONImpl;
var init_foreign44 = __esm({
  "output/Foreign.JSON/foreign.js"() {
    parseJSONImpl = JSON.parse;
  }
});

// output/Effect.Uncurried/foreign.js
var runEffectFn1;
var init_foreign45 = __esm({
  "output/Effect.Uncurried/foreign.js"() {
    runEffectFn1 = function runEffectFn12(fn) {
      return function(a) {
        return function() {
          return fn(a);
        };
      };
    };
  }
});

// output/Effect.Uncurried/index.js
var init_Effect9 = __esm({
  "output/Effect.Uncurried/index.js"() {
    init_foreign45();
    init_Data19();
    init_Data7();
    init_Effect();
    init_foreign45();
  }
});

// output/Foreign.JSON/index.js
var parseJSON;
var init_Foreign2 = __esm({
  "output/Foreign.JSON/index.js"() {
    init_foreign44();
    init_Control4();
    init_Control5();
    init_Control_Monad_Except();
    init_Data24();
    init_Data20();
    init_Data_List();
    init_Effect2();
    init_Effect9();
    init_Effect5();
    init_Foreign();
    parseJSON = /* @__PURE__ */ function() {
      var $0 = lmap(bifunctorEither)(function() {
        var $3 = pure(applicativeNonEmptyList);
        return function($4) {
          return $3(ForeignError.create(message($4)));
        };
      }());
      var $1 = runEffectFn1(parseJSONImpl);
      return function($2) {
        return ExceptT(Identity($0(unsafePerformEffect($$try($1($2))))));
      };
    }();
  }
});

// output/Foreign.Object/foreign.js
function _copyST(m) {
  return function() {
    var r = {};
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r[k] = m[k];
      }
    }
    return r;
  };
}
function runST(f) {
  return f();
}
function _fmapObject(m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(m0[k]);
    }
  }
  return m;
}
function _mapWithKey(m0, f) {
  var m = {};
  for (var k in m0) {
    if (hasOwnProperty.call(m0, k)) {
      m[k] = f(k)(m0[k]);
    }
  }
  return m;
}
function _foldM(bind2) {
  return function(f) {
    return function(mz) {
      return function(m) {
        var acc = mz;
        function g(k2) {
          return function(z) {
            return f(z)(k2)(m[k2]);
          };
        }
        for (var k in m) {
          if (hasOwnProperty.call(m, k)) {
            acc = bind2(acc)(g(k));
          }
        }
        return acc;
      };
    };
  };
}
function _lookup(no, yes, k, m) {
  return k in m ? yes(m[k]) : no;
}
function _lookupST(no, yes, k, m) {
  return function() {
    return k in m ? yes(m[k]) : no;
  };
}
function toArrayWithKey(f) {
  return function(m) {
    var r = [];
    for (var k in m) {
      if (hasOwnProperty.call(m, k)) {
        r.push(f(k)(m[k]));
      }
    }
    return r;
  };
}
var empty5, keys2;
var init_foreign46 = __esm({
  "output/Foreign.Object/foreign.js"() {
    empty5 = {};
    keys2 = Object.keys || toArrayWithKey(function(k) {
      return function() {
        return k;
      };
    });
  }
});

// output/Data.Function.Uncurried/foreign.js
var runFn4;
var init_foreign47 = __esm({
  "output/Data.Function.Uncurried/foreign.js"() {
    runFn4 = function(fn) {
      return function(a) {
        return function(b) {
          return function(c2) {
            return function(d) {
              return fn(a, b, c2, d);
            };
          };
        };
      };
    };
  }
});

// output/Data.Function.Uncurried/index.js
var init_Data_Function = __esm({
  "output/Data.Function.Uncurried/index.js"() {
    init_foreign47();
    init_foreign47();
  }
});

// output/Foreign.Object.ST/foreign.js
function poke2(k) {
  return function(v) {
    return function(m) {
      return function() {
        m[k] = v;
        return m;
      };
    };
  };
}
var newImpl;
var init_foreign48 = __esm({
  "output/Foreign.Object.ST/foreign.js"() {
    newImpl = function() {
      return {};
    };
  }
});

// output/Foreign.Object.ST/index.js
var init_Foreign_Object = __esm({
  "output/Foreign.Object.ST/index.js"() {
    init_foreign48();
    init_Data15();
    init_foreign48();
  }
});

// output/Foreign.Object/index.js
var values2, toUnfoldable4, thawST, singleton7, mutate, member2, mapWithKey, lookup2, insert2, functorObject, functorWithIndexObject, fromFoldableWith2, fromFoldable4, fold3, foldMap3, foldableObject, foldableWithIndexObject, traversableWithIndexObject, traversableObject;
var init_Foreign3 = __esm({
  "output/Foreign.Object/index.js"() {
    init_foreign46();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control_Monad_ST();
    init_Data39();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data_Function();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data12();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data22();
    init_Data32();
    init_Foreign_Object();
    init_Unsafe();
    init_foreign46();
    values2 = /* @__PURE__ */ toArrayWithKey(function(v) {
      return function(v1) {
        return v1;
      };
    });
    toUnfoldable4 = function(dictUnfoldable) {
      var $35 = toUnfoldable2(dictUnfoldable);
      var $36 = toArrayWithKey(Tuple.create);
      return function($37) {
        return $35($36($37));
      };
    };
    thawST = _copyST;
    singleton7 = function(k) {
      return function(v) {
        return runST(bindFlipped(bindST)(poke2(k)(v))(newImpl));
      };
    };
    mutate = function(f) {
      return function(m) {
        return runST(function __do2() {
          var s = thawST(m)();
          f(s)();
          return s;
        });
      };
    };
    member2 = /* @__PURE__ */ runFn4(_lookup)(false)(/* @__PURE__ */ $$const(true));
    mapWithKey = function(f) {
      return function(m) {
        return _mapWithKey(m, f);
      };
    };
    lookup2 = /* @__PURE__ */ function() {
      return runFn4(_lookup)(Nothing.value)(Just.create);
    }();
    insert2 = function(k) {
      return function(v) {
        return mutate(poke2(k)(v));
      };
    };
    functorObject = {
      map: function(f) {
        return function(m) {
          return _fmapObject(m, f);
        };
      }
    };
    functorWithIndexObject = {
      mapWithIndex: mapWithKey,
      Functor0: function() {
        return functorObject;
      }
    };
    fromFoldableWith2 = function(dictFoldable) {
      return function(f) {
        return function(l) {
          return runST(function __do2() {
            var s = newImpl();
            for_(applicativeST)(dictFoldable)(l)(function(v) {
              return function __do3() {
                var v$prime = _lookupST(v.value1, f(v.value1), v.value0, s)();
                return poke2(v.value0)(v$prime)(s)();
              };
            })();
            return s;
          });
        };
      };
    };
    fromFoldable4 = function(dictFoldable) {
      return function(l) {
        return runST(function __do2() {
          var s = newImpl();
          foreach(fromFoldable2(dictFoldable)(l))(function(v) {
            return $$void(functorST)(poke2(v.value0)(v.value1)(s));
          })();
          return s;
        });
      };
    };
    fold3 = /* @__PURE__ */ _foldM(applyFlipped);
    foldMap3 = function(dictMonoid) {
      return function(f) {
        return fold3(function(acc) {
          return function(k) {
            return function(v) {
              return append(dictMonoid.Semigroup0())(acc)(f(k)(v));
            };
          };
        })(mempty(dictMonoid));
      };
    };
    foldableObject = {
      foldl: function(f) {
        return fold3(function(z) {
          return function(v) {
            return f(z);
          };
        });
      },
      foldr: function(f) {
        return function(z) {
          return function(m) {
            return foldr(foldableArray)(f)(z)(values2(m));
          };
        };
      },
      foldMap: function(dictMonoid) {
        return function(f) {
          return foldMap3(dictMonoid)($$const(f));
        };
      }
    };
    foldableWithIndexObject = {
      foldlWithIndex: function(f) {
        return fold3(flip(f));
      },
      foldrWithIndex: function(f) {
        return function(z) {
          return function(m) {
            return foldr(foldableArray)(uncurry(f))(z)(toArrayWithKey(Tuple.create)(m));
          };
        };
      },
      foldMapWithIndex: function(dictMonoid) {
        return foldMap3(dictMonoid);
      },
      Foldable0: function() {
        return foldableObject;
      }
    };
    traversableWithIndexObject = {
      traverseWithIndex: function(dictApplicative) {
        return function(f) {
          return function(ms) {
            return fold3(function(acc) {
              return function(k) {
                return function(v) {
                  return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(flip(insert2(k)))(acc))(f(k)(v));
                };
              };
            })(pure(dictApplicative)(empty5))(ms);
          };
        };
      },
      FunctorWithIndex0: function() {
        return functorWithIndexObject;
      },
      FoldableWithIndex1: function() {
        return foldableWithIndexObject;
      },
      Traversable2: function() {
        return traversableObject;
      }
    };
    traversableObject = {
      traverse: function(dictApplicative) {
        var $42 = traverseWithIndex(traversableWithIndexObject)(dictApplicative);
        return function($43) {
          return $42($$const($43));
        };
      },
      sequence: function(dictApplicative) {
        return traverse(traversableObject)(dictApplicative)(identity(categoryFn));
      },
      Functor0: function() {
        return functorObject;
      },
      Foldable1: function() {
        return foldableObject;
      }
    };
  }
});

// output/IdePurescript.Modules/foreign.js
function tmpDir() {
  return os.tmpdir();
}
var os;
var init_foreign49 = __esm({
  "output/IdePurescript.Modules/foreign.js"() {
    os = __toModule(require("os"));
  }
});

// output/Data.String.Common/foreign.js
var replaceAll, split, toLower, toUpper, trim, joinWith;
var init_foreign50 = __esm({
  "output/Data.String.Common/foreign.js"() {
    replaceAll = function(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(new RegExp(s1.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "g"), s2);
        };
      };
    };
    split = function(sep2) {
      return function(s) {
        return s.split(sep2);
      };
    };
    toLower = function(s) {
      return s.toLowerCase();
    };
    toUpper = function(s) {
      return s.toUpperCase();
    };
    trim = function(s) {
      return s.trim();
    };
    joinWith = function(s) {
      return function(xs) {
        return xs.join(s);
      };
    };
  }
});

// output/Data.String.Common/index.js
var $$null2;
var init_Data_String3 = __esm({
  "output/Data.String.Common/index.js"() {
    init_foreign50();
    init_Data9();
    init_foreign50();
    $$null2 = function(s) {
      return s === "";
    };
  }
});

// output/Data.String.Regex/foreign.js
var regexImpl, test, _match, replace2, _search, split2;
var init_foreign51 = __esm({
  "output/Data.String.Regex/foreign.js"() {
    regexImpl = function(left2) {
      return function(right2) {
        return function(s1) {
          return function(s2) {
            try {
              return right2(new RegExp(s1, s2));
            } catch (e) {
              return left2(e.message);
            }
          };
        };
      };
    };
    test = function(r) {
      return function(s) {
        var lastIndex = r.lastIndex;
        var result2 = r.test(s);
        r.lastIndex = lastIndex;
        return result2;
      };
    };
    _match = function(just) {
      return function(nothing) {
        return function(r) {
          return function(s) {
            var m = s.match(r);
            if (m == null || m.length === 0) {
              return nothing;
            } else {
              for (var i = 0; i < m.length; i++) {
                m[i] = m[i] == null ? nothing : just(m[i]);
              }
              return just(m);
            }
          };
        };
      };
    };
    replace2 = function(r) {
      return function(s1) {
        return function(s2) {
          return s2.replace(r, s1);
        };
      };
    };
    _search = function(just) {
      return function(nothing) {
        return function(r) {
          return function(s) {
            var result2 = s.search(r);
            return result2 === -1 ? nothing : just(result2);
          };
        };
      };
    };
    split2 = function(r) {
      return function(s) {
        return s.split(r);
      };
    };
  }
});

// output/Control.Alternative/index.js
var init_Control14 = __esm({
  "output/Control.Alternative/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control9();
    init_Data4();
    init_Data3();
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control9();
    init_Data4();
  }
});

// output/Data.String.Regex.Flags/index.js
var unicode, noFlags, multiline, ignoreCase, global;
var init_Data_String_Regex = __esm({
  "output/Data.String.Regex.Flags/index.js"() {
    init_Control14();
    init_Data8();
    init_Data4();
    init_Data7();
    init_Data_String3();
    unicode = {
      global: false,
      ignoreCase: false,
      multiline: false,
      dotAll: false,
      sticky: false,
      unicode: true
    };
    noFlags = {
      global: false,
      ignoreCase: false,
      multiline: false,
      dotAll: false,
      sticky: false,
      unicode: false
    };
    multiline = {
      global: false,
      ignoreCase: false,
      multiline: true,
      dotAll: false,
      sticky: false,
      unicode: false
    };
    ignoreCase = {
      global: false,
      ignoreCase: true,
      multiline: false,
      dotAll: false,
      sticky: false,
      unicode: false
    };
    global = {
      global: true,
      ignoreCase: false,
      multiline: false,
      dotAll: false,
      sticky: false,
      unicode: false
    };
  }
});

// output/Data.String.Regex/index.js
var search, renderFlags, regex, match;
var init_Data_String4 = __esm({
  "output/Data.String.Regex/index.js"() {
    init_foreign51();
    init_Data16();
    init_Data15();
    init_Data_String2();
    init_Data_String_Regex();
    init_foreign51();
    search = /* @__PURE__ */ function() {
      return _search(Just.create)(Nothing.value);
    }();
    renderFlags = function(v) {
      return function() {
        if (v.global) {
          return "g";
        }
        ;
        return "";
      }() + (function() {
        if (v.ignoreCase) {
          return "i";
        }
        ;
        return "";
      }() + (function() {
        if (v.multiline) {
          return "m";
        }
        ;
        return "";
      }() + (function() {
        if (v.dotAll) {
          return "s";
        }
        ;
        return "";
      }() + (function() {
        if (v.sticky) {
          return "y";
        }
        ;
        return "";
      }() + function() {
        if (v.unicode) {
          return "u";
        }
        ;
        return "";
      }()))));
    };
    regex = function(s) {
      return function(f) {
        return regexImpl(Left.create)(Right.create)(s)(renderFlags(f));
      };
    };
    match = /* @__PURE__ */ function() {
      return _match(Just.create)(Nothing.value);
    }();
  }
});

// output/Data.String.Utils/foreign.js
function endsWithImpl(searchString, s) {
  return s.endsWith(searchString);
}
function linesImpl(str) {
  return str.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
}
function startsWithImpl(searchString, s) {
  return s.startsWith(searchString);
}
function toCharArrayImpl(str) {
  return Array.from(str);
}
var init_foreign52 = __esm({
  "output/Data.String.Utils/foreign.js"() {
    "use strict";
  }
});

// output/Data.String.CodePoints/foreign.js
var hasArrayFrom, hasStringIterator, hasFromCodePoint, hasCodePointAt, _unsafeCodePointAt0, _countPrefix, _singleton, _take, _toCodePointArray;
var init_foreign53 = __esm({
  "output/Data.String.CodePoints/foreign.js"() {
    hasArrayFrom = typeof Array.from === "function";
    hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
    hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
    hasCodePointAt = typeof String.prototype.codePointAt === "function";
    _unsafeCodePointAt0 = function(fallback) {
      return hasCodePointAt ? function(str) {
        return str.codePointAt(0);
      } : fallback;
    };
    _countPrefix = function(fallback) {
      return function(unsafeCodePointAt02) {
        if (hasStringIterator) {
          return function(pred2) {
            return function(str) {
              var iter = str[Symbol.iterator]();
              for (var cpCount = 0; ; ++cpCount) {
                var o = iter.next();
                if (o.done)
                  return cpCount;
                var cp = unsafeCodePointAt02(o.value);
                if (!pred2(cp))
                  return cpCount;
              }
            };
          };
        }
        return fallback;
      };
    };
    _singleton = function(fallback) {
      return hasFromCodePoint ? String.fromCodePoint : fallback;
    };
    _take = function(fallback) {
      return function(n) {
        if (hasStringIterator) {
          return function(str) {
            var accum = "";
            var iter = str[Symbol.iterator]();
            for (var i = 0; i < n; ++i) {
              var o = iter.next();
              if (o.done)
                return accum;
              accum += o.value;
            }
            return accum;
          };
        }
        return fallback(n);
      };
    };
    _toCodePointArray = function(fallback) {
      return function(unsafeCodePointAt02) {
        if (hasArrayFrom) {
          return function(str) {
            return Array.from(str, unsafeCodePointAt02);
          };
        }
        return fallback;
      };
    };
  }
});

// output/Data.Enum/foreign.js
function toCharCode(c2) {
  return c2.charCodeAt(0);
}
function fromCharCode(c2) {
  return String.fromCharCode(c2);
}
var init_foreign54 = __esm({
  "output/Data.Enum/foreign.js"() {
  }
});

// output/Data.Enum/index.js
var toEnum, fromEnum, toEnumWithDefaults, defaultSucc, defaultPred, charToEnum, enumChar, boundedEnumChar;
var init_Data42 = __esm({
  "output/Data.Enum/index.js"() {
    init_foreign54();
    init_Control14();
    init_Control3();
    init_Control5();
    init_Data();
    init_Data13();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data22();
    init_Data32();
    init_Data31();
    init_Data3();
    toEnum = function(dict) {
      return dict.toEnum;
    };
    fromEnum = function(dict) {
      return dict.fromEnum;
    };
    toEnumWithDefaults = function(dictBoundedEnum) {
      return function(low) {
        return function(high) {
          return function(x) {
            var v = toEnum(dictBoundedEnum)(x);
            if (v instanceof Just) {
              return v.value0;
            }
            ;
            if (v instanceof Nothing) {
              var $54 = x < fromEnum(dictBoundedEnum)(bottom(dictBoundedEnum.Bounded0()));
              if ($54) {
                return low;
              }
              ;
              return high;
            }
            ;
            throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
          };
        };
      };
    };
    defaultSucc = function(toEnum$prime) {
      return function(fromEnum$prime) {
        return function(a) {
          return toEnum$prime(fromEnum$prime(a) + 1 | 0);
        };
      };
    };
    defaultPred = function(toEnum$prime) {
      return function(fromEnum$prime) {
        return function(a) {
          return toEnum$prime(fromEnum$prime(a) - 1 | 0);
        };
      };
    };
    charToEnum = function(v) {
      if (v >= bottom(boundedInt) && v <= top(boundedInt)) {
        return new Just(fromCharCode(v));
      }
      ;
      return Nothing.value;
    };
    enumChar = {
      succ: /* @__PURE__ */ defaultSucc(charToEnum)(toCharCode),
      pred: /* @__PURE__ */ defaultPred(charToEnum)(toCharCode),
      Ord0: function() {
        return ordChar;
      }
    };
    boundedEnumChar = /* @__PURE__ */ function() {
      return {
        cardinality: toCharCode(top(boundedChar)) - toCharCode(bottom(boundedChar)) | 0,
        toEnum: charToEnum,
        fromEnum: toCharCode,
        Bounded0: function() {
          return boundedChar;
        },
        Enum1: function() {
          return enumChar;
        }
      };
    }();
  }
});

// output/Data.String.CodePoints/index.js
var CodePoint, unsurrogate, isTrail, isLead, uncons3, unconsButWithTuple, toCodePointArrayFallback, unsafeCodePointAt0Fallback, unsafeCodePointAt0, toCodePointArray, length5, lastIndexOf2, indexOf2, fromCharCode2, singletonFallback, singleton8, takeFallback, take5, splitAt2, eqCodePoint, drop4, countTail, countFallback, countPrefix2, takeWhile2, codePointFromChar;
var init_Data_String5 = __esm({
  "output/Data.String.CodePoints/index.js"() {
    init_foreign53();
    init_Data39();
    init_Data();
    init_Data13();
    init_Data42();
    init_Data18();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data12();
    init_Data_String2();
    init_Data_String3();
    init_Data_String();
    init_Data22();
    init_Data32();
    init_Data_String2();
    CodePoint = function(x) {
      return x;
    };
    unsurrogate = function(lead) {
      return function(trail) {
        return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
    };
    isTrail = function(cu) {
      return 56320 <= cu && cu <= 57343;
    };
    isLead = function(cu) {
      return 55296 <= cu && cu <= 56319;
    };
    uncons3 = function(s) {
      var v = length3(s);
      if (v === 0) {
        return Nothing.value;
      }
      ;
      if (v === 1) {
        return new Just({
          head: fromEnum(boundedEnumChar)(charAt(0)(s)),
          tail: ""
        });
      }
      ;
      var cu1 = fromEnum(boundedEnumChar)(charAt(1)(s));
      var cu0 = fromEnum(boundedEnumChar)(charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
        return new Just({
          head: unsurrogate(cu0)(cu1),
          tail: drop2(2)(s)
        });
      }
      ;
      return new Just({
        head: cu0,
        tail: drop2(1)(s)
      });
    };
    unconsButWithTuple = function(s) {
      return map(functorMaybe)(function(v) {
        return new Tuple(v.head, v.tail);
      })(uncons3(s));
    };
    toCodePointArrayFallback = function(s) {
      return unfoldr(unfoldableArray)(unconsButWithTuple)(s);
    };
    unsafeCodePointAt0Fallback = function(s) {
      var cu0 = fromEnum(boundedEnumChar)(charAt(0)(s));
      var $25 = isLead(cu0) && length3(s) > 1;
      if ($25) {
        var cu1 = fromEnum(boundedEnumChar)(charAt(1)(s));
        var $26 = isTrail(cu1);
        if ($26) {
          return unsurrogate(cu0)(cu1);
        }
        ;
        return cu0;
      }
      ;
      return cu0;
    };
    unsafeCodePointAt0 = /* @__PURE__ */ _unsafeCodePointAt0(unsafeCodePointAt0Fallback);
    toCodePointArray = /* @__PURE__ */ _toCodePointArray(toCodePointArrayFallback)(unsafeCodePointAt0);
    length5 = function($52) {
      return length4(toCodePointArray($52));
    };
    lastIndexOf2 = function(p) {
      return function(s) {
        return map(functorMaybe)(function(i) {
          return length5(take2(i)(s));
        })(lastIndexOf(p)(s));
      };
    };
    indexOf2 = function(p) {
      return function(s) {
        return map(functorMaybe)(function(i) {
          return length5(take2(i)(s));
        })(indexOf(p)(s));
      };
    };
    fromCharCode2 = /* @__PURE__ */ function() {
      var $53 = toEnumWithDefaults(boundedEnumChar)(bottom(boundedChar))(top(boundedChar));
      return function($54) {
        return singleton4($53($54));
      };
    }();
    singletonFallback = function(v) {
      if (v <= 65535) {
        return fromCharCode2(v);
      }
      ;
      var lead = div(euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = mod(euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode2(lead) + fromCharCode2(trail);
    };
    singleton8 = /* @__PURE__ */ _singleton(singletonFallback);
    takeFallback = function(n) {
      return function(v) {
        if (n < 1) {
          return "";
        }
        ;
        var v1 = uncons3(v);
        if (v1 instanceof Just) {
          return singleton8(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
        }
        ;
        return v;
      };
    };
    take5 = /* @__PURE__ */ _take(takeFallback);
    splitAt2 = function(i) {
      return function(s) {
        var before = take5(i)(s);
        return {
          before,
          after: drop2(length3(before))(s)
        };
      };
    };
    eqCodePoint = {
      eq: function(x) {
        return function(y) {
          return x === y;
        };
      }
    };
    drop4 = function(n) {
      return function(s) {
        return drop2(length3(take5(n)(s)))(s);
      };
    };
    countTail = function($copy_p) {
      return function($copy_s) {
        return function($copy_accum) {
          var $tco_var_p = $copy_p;
          var $tco_var_s = $copy_s;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(p, s, accum) {
            var v = uncons3(s);
            if (v instanceof Just) {
              var $39 = p(v.value0.head);
              if ($39) {
                $tco_var_p = p;
                $tco_var_s = v.value0.tail;
                $copy_accum = accum + 1 | 0;
                return;
              }
              ;
              $tco_done = true;
              return accum;
            }
            ;
            $tco_done = true;
            return accum;
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_p, $tco_var_s, $copy_accum);
          }
          ;
          return $tco_result;
        };
      };
    };
    countFallback = function(p) {
      return function(s) {
        return countTail(p)(s)(0);
      };
    };
    countPrefix2 = /* @__PURE__ */ _countPrefix(countFallback)(unsafeCodePointAt0);
    takeWhile2 = function(p) {
      return function(s) {
        return take5(countPrefix2(p)(s))(s);
      };
    };
    codePointFromChar = /* @__PURE__ */ function() {
      var $55 = fromEnum(boundedEnumChar);
      return function($56) {
        return CodePoint($55($56));
      };
    }();
  }
});

// output/Data.String.Regex.Unsafe/index.js
var unsafeRegex;
var init_Data_String_Regex2 = __esm({
  "output/Data.String.Regex.Unsafe/index.js"() {
    init_Control2();
    init_Data16();
    init_Data_String4();
    init_Partial2();
    unsafeRegex = function(s) {
      return function(f) {
        return either(unsafeCrashWith)(identity(categoryFn))(regex(s)(f));
      };
    };
  }
});

// output/Data.String.Utils/index.js
var toCharArray2, startsWith, lines, endsWith;
var init_Data_String6 = __esm({
  "output/Data.String.Utils/index.js"() {
    init_foreign52();
    init_Data39();
    init_Data4();
    init_Data15();
    init_Data14();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data_String_Regex2();
    init_Data3();
    toCharArray2 = function(s) {
      return toCharArrayImpl(s);
    };
    startsWith = function(searchString) {
      return function(s) {
        return startsWithImpl(searchString, s);
      };
    };
    lines = function(s) {
      return linesImpl(s);
    };
    endsWith = function(searchString) {
      return function(s) {
        return endsWithImpl(searchString, s);
      };
    };
  }
});

// output/Data.UUID/foreign.js
var import_uuid, getUUIDImpl;
var init_foreign55 = __esm({
  "output/Data.UUID/foreign.js"() {
    import_uuid = __toModule(require("uuid"));
    getUUIDImpl = import_uuid.v4;
  }
});

// output/Data.UUID/index.js
var UUID, showUUID, genUUID;
var init_Data43 = __esm({
  "output/Data.UUID/index.js"() {
    init_foreign55();
    init_Control4();
    init_Control5();
    init_Control_Monad_Except();
    init_Data16();
    init_Data20();
    init_Data_List3();
    init_Data15();
    init_Data12();
    init_Effect();
    init_Foreign();
    UUID = function(x) {
      return x;
    };
    showUUID = {
      show: function(v) {
        return "(UUID " + (v + ")");
      }
    };
    genUUID = /* @__PURE__ */ bind(bindEffect)(getUUIDImpl)(/* @__PURE__ */ function() {
      var $24 = pure(applicativeEffect);
      return function($25) {
        return $24(UUID($25));
      };
    }());
  }
});

// output/IdePurescript.Exec/foreign.js
function whichSyncImpl(options) {
  var which2 = require("which");
  return function(path2) {
    return function() {
      return which2.sync(path2, {
        all: true,
        path: options.path,
        pathExt: options.pathExt
      });
    };
  };
}
var import_fs;
var init_foreign56 = __esm({
  "output/IdePurescript.Exec/foreign.js"() {
    import_fs = __toModule(require("fs"));
  }
});

// output/Node.Path/foreign.js
function concat2(segments) {
  return import_path.default.join.apply(this, segments);
}
function resolve(from2) {
  return (to) => () => import_path.default.resolve.apply(this, from2.concat([to]));
}
var import_path, normalize, basename, extname, sep, delimiter, parse, isAbsolute;
var init_foreign57 = __esm({
  "output/Node.Path/foreign.js"() {
    import_path = __toModule(require("path"));
    normalize = import_path.default.normalize;
    basename = import_path.default.basename;
    extname = import_path.default.extname;
    sep = import_path.default.sep;
    delimiter = import_path.default.delimiter;
    parse = import_path.default.parse;
    isAbsolute = import_path.default.isAbsolute;
  }
});

// output/Node.Path/index.js
var init_Node = __esm({
  "output/Node.Path/index.js"() {
    init_foreign57();
    init_foreign57();
  }
});

// output/Node.Process/foreign.js
function exit(code) {
  return () => {
    import_process.default.exit(code);
  };
}
function copyArray(xs) {
  return () => xs.slice();
}
function copyObject(o) {
  return () => Object.assign({}, o);
}
var import_process;
var init_foreign58 = __esm({
  "output/Node.Process/foreign.js"() {
    import_process = __toModule(require("process"));
  }
});

// output/Data.Posix.Signal/index.js
var SIGABRT, SIGALRM, SIGBUS, SIGCHLD, SIGCLD, SIGCONT, SIGEMT, SIGFPE, SIGHUP, SIGILL, SIGINFO, SIGINT, SIGIO, SIGIOT, SIGKILL, SIGLOST, SIGPIPE, SIGPOLL, SIGPROF, SIGPWR, SIGQUIT, SIGSEGV, SIGSTKFLT, SIGSTOP, SIGSYS, SIGTERM, SIGTRAP, SIGTSTP, SIGTTIN, SIGTTOU, SIGUNUSED, SIGURG, SIGUSR1, SIGUSR2, SIGVTALRM, SIGWINCH, SIGXCPU, SIGXFSZ, fromString3;
var init_Data_Posix = __esm({
  "output/Data.Posix.Signal/index.js"() {
    init_Data15();
    init_Data9();
    SIGABRT = /* @__PURE__ */ function() {
      function SIGABRT2() {
      }
      ;
      SIGABRT2.value = new SIGABRT2();
      return SIGABRT2;
    }();
    SIGALRM = /* @__PURE__ */ function() {
      function SIGALRM2() {
      }
      ;
      SIGALRM2.value = new SIGALRM2();
      return SIGALRM2;
    }();
    SIGBUS = /* @__PURE__ */ function() {
      function SIGBUS2() {
      }
      ;
      SIGBUS2.value = new SIGBUS2();
      return SIGBUS2;
    }();
    SIGCHLD = /* @__PURE__ */ function() {
      function SIGCHLD2() {
      }
      ;
      SIGCHLD2.value = new SIGCHLD2();
      return SIGCHLD2;
    }();
    SIGCLD = /* @__PURE__ */ function() {
      function SIGCLD2() {
      }
      ;
      SIGCLD2.value = new SIGCLD2();
      return SIGCLD2;
    }();
    SIGCONT = /* @__PURE__ */ function() {
      function SIGCONT2() {
      }
      ;
      SIGCONT2.value = new SIGCONT2();
      return SIGCONT2;
    }();
    SIGEMT = /* @__PURE__ */ function() {
      function SIGEMT2() {
      }
      ;
      SIGEMT2.value = new SIGEMT2();
      return SIGEMT2;
    }();
    SIGFPE = /* @__PURE__ */ function() {
      function SIGFPE2() {
      }
      ;
      SIGFPE2.value = new SIGFPE2();
      return SIGFPE2;
    }();
    SIGHUP = /* @__PURE__ */ function() {
      function SIGHUP2() {
      }
      ;
      SIGHUP2.value = new SIGHUP2();
      return SIGHUP2;
    }();
    SIGILL = /* @__PURE__ */ function() {
      function SIGILL2() {
      }
      ;
      SIGILL2.value = new SIGILL2();
      return SIGILL2;
    }();
    SIGINFO = /* @__PURE__ */ function() {
      function SIGINFO2() {
      }
      ;
      SIGINFO2.value = new SIGINFO2();
      return SIGINFO2;
    }();
    SIGINT = /* @__PURE__ */ function() {
      function SIGINT2() {
      }
      ;
      SIGINT2.value = new SIGINT2();
      return SIGINT2;
    }();
    SIGIO = /* @__PURE__ */ function() {
      function SIGIO2() {
      }
      ;
      SIGIO2.value = new SIGIO2();
      return SIGIO2;
    }();
    SIGIOT = /* @__PURE__ */ function() {
      function SIGIOT2() {
      }
      ;
      SIGIOT2.value = new SIGIOT2();
      return SIGIOT2;
    }();
    SIGKILL = /* @__PURE__ */ function() {
      function SIGKILL2() {
      }
      ;
      SIGKILL2.value = new SIGKILL2();
      return SIGKILL2;
    }();
    SIGLOST = /* @__PURE__ */ function() {
      function SIGLOST2() {
      }
      ;
      SIGLOST2.value = new SIGLOST2();
      return SIGLOST2;
    }();
    SIGPIPE = /* @__PURE__ */ function() {
      function SIGPIPE2() {
      }
      ;
      SIGPIPE2.value = new SIGPIPE2();
      return SIGPIPE2;
    }();
    SIGPOLL = /* @__PURE__ */ function() {
      function SIGPOLL2() {
      }
      ;
      SIGPOLL2.value = new SIGPOLL2();
      return SIGPOLL2;
    }();
    SIGPROF = /* @__PURE__ */ function() {
      function SIGPROF2() {
      }
      ;
      SIGPROF2.value = new SIGPROF2();
      return SIGPROF2;
    }();
    SIGPWR = /* @__PURE__ */ function() {
      function SIGPWR2() {
      }
      ;
      SIGPWR2.value = new SIGPWR2();
      return SIGPWR2;
    }();
    SIGQUIT = /* @__PURE__ */ function() {
      function SIGQUIT2() {
      }
      ;
      SIGQUIT2.value = new SIGQUIT2();
      return SIGQUIT2;
    }();
    SIGSEGV = /* @__PURE__ */ function() {
      function SIGSEGV2() {
      }
      ;
      SIGSEGV2.value = new SIGSEGV2();
      return SIGSEGV2;
    }();
    SIGSTKFLT = /* @__PURE__ */ function() {
      function SIGSTKFLT2() {
      }
      ;
      SIGSTKFLT2.value = new SIGSTKFLT2();
      return SIGSTKFLT2;
    }();
    SIGSTOP = /* @__PURE__ */ function() {
      function SIGSTOP2() {
      }
      ;
      SIGSTOP2.value = new SIGSTOP2();
      return SIGSTOP2;
    }();
    SIGSYS = /* @__PURE__ */ function() {
      function SIGSYS2() {
      }
      ;
      SIGSYS2.value = new SIGSYS2();
      return SIGSYS2;
    }();
    SIGTERM = /* @__PURE__ */ function() {
      function SIGTERM2() {
      }
      ;
      SIGTERM2.value = new SIGTERM2();
      return SIGTERM2;
    }();
    SIGTRAP = /* @__PURE__ */ function() {
      function SIGTRAP2() {
      }
      ;
      SIGTRAP2.value = new SIGTRAP2();
      return SIGTRAP2;
    }();
    SIGTSTP = /* @__PURE__ */ function() {
      function SIGTSTP2() {
      }
      ;
      SIGTSTP2.value = new SIGTSTP2();
      return SIGTSTP2;
    }();
    SIGTTIN = /* @__PURE__ */ function() {
      function SIGTTIN2() {
      }
      ;
      SIGTTIN2.value = new SIGTTIN2();
      return SIGTTIN2;
    }();
    SIGTTOU = /* @__PURE__ */ function() {
      function SIGTTOU2() {
      }
      ;
      SIGTTOU2.value = new SIGTTOU2();
      return SIGTTOU2;
    }();
    SIGUNUSED = /* @__PURE__ */ function() {
      function SIGUNUSED2() {
      }
      ;
      SIGUNUSED2.value = new SIGUNUSED2();
      return SIGUNUSED2;
    }();
    SIGURG = /* @__PURE__ */ function() {
      function SIGURG2() {
      }
      ;
      SIGURG2.value = new SIGURG2();
      return SIGURG2;
    }();
    SIGUSR1 = /* @__PURE__ */ function() {
      function SIGUSR12() {
      }
      ;
      SIGUSR12.value = new SIGUSR12();
      return SIGUSR12;
    }();
    SIGUSR2 = /* @__PURE__ */ function() {
      function SIGUSR22() {
      }
      ;
      SIGUSR22.value = new SIGUSR22();
      return SIGUSR22;
    }();
    SIGVTALRM = /* @__PURE__ */ function() {
      function SIGVTALRM2() {
      }
      ;
      SIGVTALRM2.value = new SIGVTALRM2();
      return SIGVTALRM2;
    }();
    SIGWINCH = /* @__PURE__ */ function() {
      function SIGWINCH2() {
      }
      ;
      SIGWINCH2.value = new SIGWINCH2();
      return SIGWINCH2;
    }();
    SIGXCPU = /* @__PURE__ */ function() {
      function SIGXCPU2() {
      }
      ;
      SIGXCPU2.value = new SIGXCPU2();
      return SIGXCPU2;
    }();
    SIGXFSZ = /* @__PURE__ */ function() {
      function SIGXFSZ2() {
      }
      ;
      SIGXFSZ2.value = new SIGXFSZ2();
      return SIGXFSZ2;
    }();
    fromString3 = function(s) {
      if (s === "SIGABRT") {
        return new Just(SIGABRT.value);
      }
      ;
      if (s === "SIGALRM") {
        return new Just(SIGALRM.value);
      }
      ;
      if (s === "SIGBUS") {
        return new Just(SIGBUS.value);
      }
      ;
      if (s === "SIGCHLD") {
        return new Just(SIGCHLD.value);
      }
      ;
      if (s === "SIGCLD") {
        return new Just(SIGCLD.value);
      }
      ;
      if (s === "SIGCONT") {
        return new Just(SIGCONT.value);
      }
      ;
      if (s === "SIGEMT") {
        return new Just(SIGEMT.value);
      }
      ;
      if (s === "SIGFPE") {
        return new Just(SIGFPE.value);
      }
      ;
      if (s === "SIGHUP") {
        return new Just(SIGHUP.value);
      }
      ;
      if (s === "SIGILL") {
        return new Just(SIGILL.value);
      }
      ;
      if (s === "SIGINFO") {
        return new Just(SIGINFO.value);
      }
      ;
      if (s === "SIGINT") {
        return new Just(SIGINT.value);
      }
      ;
      if (s === "SIGIO") {
        return new Just(SIGIO.value);
      }
      ;
      if (s === "SIGIOT") {
        return new Just(SIGIOT.value);
      }
      ;
      if (s === "SIGKILL") {
        return new Just(SIGKILL.value);
      }
      ;
      if (s === "SIGLOST") {
        return new Just(SIGLOST.value);
      }
      ;
      if (s === "SIGPIPE") {
        return new Just(SIGPIPE.value);
      }
      ;
      if (s === "SIGPOLL") {
        return new Just(SIGPOLL.value);
      }
      ;
      if (s === "SIGPROF") {
        return new Just(SIGPROF.value);
      }
      ;
      if (s === "SIGPWR") {
        return new Just(SIGPWR.value);
      }
      ;
      if (s === "SIGQUIT") {
        return new Just(SIGQUIT.value);
      }
      ;
      if (s === "SIGSEGV") {
        return new Just(SIGSEGV.value);
      }
      ;
      if (s === "SIGSTKFLT") {
        return new Just(SIGSTKFLT.value);
      }
      ;
      if (s === "SIGSTOP") {
        return new Just(SIGSTOP.value);
      }
      ;
      if (s === "SIGSYS") {
        return new Just(SIGSYS.value);
      }
      ;
      if (s === "SIGTERM") {
        return new Just(SIGTERM.value);
      }
      ;
      if (s === "SIGTRAP") {
        return new Just(SIGTRAP.value);
      }
      ;
      if (s === "SIGTSTP") {
        return new Just(SIGTSTP.value);
      }
      ;
      if (s === "SIGTTIN") {
        return new Just(SIGTTIN.value);
      }
      ;
      if (s === "SIGTTOU") {
        return new Just(SIGTTOU.value);
      }
      ;
      if (s === "SIGUNUSED") {
        return new Just(SIGUNUSED.value);
      }
      ;
      if (s === "SIGURG") {
        return new Just(SIGURG.value);
      }
      ;
      if (s === "SIGUSR1") {
        return new Just(SIGUSR1.value);
      }
      ;
      if (s === "SIGUSR2") {
        return new Just(SIGUSR2.value);
      }
      ;
      if (s === "SIGVTALRM") {
        return new Just(SIGVTALRM.value);
      }
      ;
      if (s === "SIGWINCH") {
        return new Just(SIGWINCH.value);
      }
      ;
      if (s === "SIGXCPU") {
        return new Just(SIGXCPU.value);
      }
      ;
      if (s === "SIGXFSZ") {
        return new Just(SIGXFSZ.value);
      }
      ;
      return Nothing.value;
    };
  }
});

// output/Node.Platform/index.js
var AIX, Darwin, FreeBSD, Linux, OpenBSD, SunOS, Win32, Android, fromString4, eqPlatform;
var init_Node2 = __esm({
  "output/Node.Platform/index.js"() {
    init_Data15();
    init_Data9();
    AIX = /* @__PURE__ */ function() {
      function AIX2() {
      }
      ;
      AIX2.value = new AIX2();
      return AIX2;
    }();
    Darwin = /* @__PURE__ */ function() {
      function Darwin2() {
      }
      ;
      Darwin2.value = new Darwin2();
      return Darwin2;
    }();
    FreeBSD = /* @__PURE__ */ function() {
      function FreeBSD2() {
      }
      ;
      FreeBSD2.value = new FreeBSD2();
      return FreeBSD2;
    }();
    Linux = /* @__PURE__ */ function() {
      function Linux2() {
      }
      ;
      Linux2.value = new Linux2();
      return Linux2;
    }();
    OpenBSD = /* @__PURE__ */ function() {
      function OpenBSD2() {
      }
      ;
      OpenBSD2.value = new OpenBSD2();
      return OpenBSD2;
    }();
    SunOS = /* @__PURE__ */ function() {
      function SunOS2() {
      }
      ;
      SunOS2.value = new SunOS2();
      return SunOS2;
    }();
    Win32 = /* @__PURE__ */ function() {
      function Win322() {
      }
      ;
      Win322.value = new Win322();
      return Win322;
    }();
    Android = /* @__PURE__ */ function() {
      function Android2() {
      }
      ;
      Android2.value = new Android2();
      return Android2;
    }();
    fromString4 = function(v) {
      if (v === "aix") {
        return new Just(AIX.value);
      }
      ;
      if (v === "darwin") {
        return new Just(Darwin.value);
      }
      ;
      if (v === "freebsd") {
        return new Just(FreeBSD.value);
      }
      ;
      if (v === "linux") {
        return new Just(Linux.value);
      }
      ;
      if (v === "openbsd") {
        return new Just(OpenBSD.value);
      }
      ;
      if (v === "sunos") {
        return new Just(SunOS.value);
      }
      ;
      if (v === "win32") {
        return new Just(Win32.value);
      }
      ;
      if (v === "android") {
        return new Just(Android.value);
      }
      ;
      return Nothing.value;
    };
    eqPlatform = {
      eq: function(x) {
        return function(y) {
          if (x instanceof AIX && y instanceof AIX) {
            return true;
          }
          ;
          if (x instanceof Darwin && y instanceof Darwin) {
            return true;
          }
          ;
          if (x instanceof FreeBSD && y instanceof FreeBSD) {
            return true;
          }
          ;
          if (x instanceof Linux && y instanceof Linux) {
            return true;
          }
          ;
          if (x instanceof OpenBSD && y instanceof OpenBSD) {
            return true;
          }
          ;
          if (x instanceof SunOS && y instanceof SunOS) {
            return true;
          }
          ;
          if (x instanceof Win32 && y instanceof Win32) {
            return true;
          }
          ;
          if (x instanceof Android && y instanceof Android) {
            return true;
          }
          ;
          return false;
        };
      }
    };
  }
});

// output/Node.Process/index.js
var platformStr, platform, mkEffect, lookupMutableObject, lookupEnv, getEnv, cwd, argv;
var init_Node3 = __esm({
  "output/Node.Process/index.js"() {
    init_foreign58();
    init_Data_Posix();
    init_Foreign3();
    init_Node2();
    init_Unsafe();
    init_foreign58();
    platformStr = /* @__PURE__ */ function() {
      return import_process.default.platform;
    }();
    platform = /* @__PURE__ */ fromString4(platformStr);
    mkEffect = unsafeCoerce2;
    lookupMutableObject = function(k) {
      return function(o) {
        return mkEffect(function(v) {
          return lookup2(k)(o);
        });
      };
    };
    lookupEnv = function(k) {
      return lookupMutableObject(k)(import_process.default.env);
    };
    getEnv = /* @__PURE__ */ function() {
      return copyObject(import_process.default.env);
    }();
    cwd = /* @__PURE__ */ function() {
      return import_process.default.cwd;
    }();
    argv = /* @__PURE__ */ function() {
      return copyArray(import_process.default.argv);
    }();
  }
});

// output/Node.Which/foreign.js
function whichImpl(options) {
  return function(path2) {
    return function(errcb) {
      return function(cb) {
        return function() {
          (0, import_which.default)(path2, { all: true, path: options.path, pathExt: options.pathExt }, function(err, resolved) {
            if (err) {
              errcb(err)();
            } else {
              cb(resolved)();
            }
          });
        };
      };
    };
  };
}
var import_which;
var init_foreign59 = __esm({
  "output/Node.Which/foreign.js"() {
    import_which = __toModule(require("which"));
  }
});

// output/Node.Which/index.js
var which$prime;
var init_Node4 = __esm({
  "output/Node.Which/index.js"() {
    init_foreign59();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Effect();
    init_Effect6();
    which$prime = function(v) {
      return function(s) {
        return makeAff(function(cb) {
          return voidRight(functorEffect)(nonCanceler)(whichImpl({
            path: toNullable(v.path),
            pathExt: toNullable(v.pathExt)
          })(s)(function($5) {
            return cb(Left.create($5));
          })(function($6) {
            return cb(Right.create($6));
          }));
        });
      };
    };
  }
});

// output/Effect.Random/foreign.js
var random;
var init_foreign60 = __esm({
  "output/Effect.Random/foreign.js"() {
    random = Math.random;
  }
});

// output/Effect.Random/index.js
var randomInt;
var init_Effect10 = __esm({
  "output/Effect.Random/index.js"() {
    init_foreign60();
    init_Data4();
    init_Data37();
    init_Effect();
    init_foreign60();
    randomInt = function(low) {
      return function(high) {
        return function __do2() {
          var n = random();
          var asNumber = (toNumber(high) - toNumber(low) + 1) * n + toNumber(low);
          return floor2(asNumber);
        };
      };
    };
  }
});

// output/Node.Buffer.Class/index.js
var toString2, readString2, concat3;
var init_Node_Buffer = __esm({
  "output/Node.Buffer.Class/index.js"() {
    toString2 = function(dict) {
      return dict.toString;
    };
    readString2 = function(dict) {
      return dict.readString;
    };
    concat3 = function(dict) {
      return dict.concat;
    };
  }
});

// output/Node.Buffer.Internal/foreign.js
function copyAll(a) {
  return () => {
    return Buffer.from(a);
  };
}
function writeInternal(ty) {
  return (value) => {
    return (offset) => {
      return (buf) => {
        return () => {
          buf["write" + ty](value, offset);
        };
      };
    };
  };
}
function writeStringInternal(encoding) {
  return (offset) => {
    return (length6) => {
      return (value) => {
        return (buff) => {
          return () => {
            return buff.write(value, offset, length6, encoding);
          };
        };
      };
    };
  };
}
function setAtOffset(value) {
  return (offset) => {
    return (buff) => {
      return () => {
        buff[offset] = value;
      };
    };
  };
}
function copy(srcStart) {
  return (srcEnd) => {
    return (src) => {
      return (targStart) => {
        return (targ) => {
          return () => {
            return src.copy(targ, targStart, srcStart, srcEnd);
          };
        };
      };
    };
  };
}
function fill(octet) {
  return (start) => {
    return (end2) => {
      return (buf) => {
        return () => {
          buf.fill(octet, start, end2);
        };
      };
    };
  };
}
var init_foreign61 = __esm({
  "output/Node.Buffer.Internal/foreign.js"() {
  }
});

// output/Node.Buffer.Immutable/foreign.js
function create(size6) {
  return Buffer.alloc(size6);
}
function fromArray(octets) {
  return Buffer.from(octets);
}
function size3(buff) {
  return buff.length;
}
function toArray(buff) {
  var json = buff.toJSON();
  return json.data || json;
}
function toArrayBuffer(buff) {
  return buff.buffer.slice(buff.byteOffset, buff.byteOffset + buff.byteLength);
}
function fromArrayBuffer(ab) {
  return Buffer.from(ab);
}
function fromStringImpl2(str) {
  return (encoding) => {
    return Buffer.from(str, encoding);
  };
}
function readImpl(ty) {
  return (offset) => {
    return (buf) => {
      return buf["read" + ty](offset);
    };
  };
}
function readStringImpl(enc) {
  return (start) => {
    return (end2) => {
      return (buff) => {
        return buff.toString(enc, start, end2);
      };
    };
  };
}
function getAtOffsetImpl(just) {
  return (nothing) => {
    return (offset) => {
      return (buff) => {
        var octet = buff[offset];
        return octet == null ? nothing : just(octet);
      };
    };
  };
}
function toStringImpl(enc) {
  return (buff) => {
    return buff.toString(enc);
  };
}
function slice3(start) {
  return (end2) => {
    return (buff) => {
      return buff.slice(start, end2);
    };
  };
}
function concat4(buffs) {
  return Buffer.concat(buffs);
}
function concatToLength(buffs) {
  return (totalLength) => {
    return Buffer.concat(buffs, totalLength);
  };
}
var import_util;
var init_foreign62 = __esm({
  "output/Node.Buffer.Immutable/foreign.js"() {
    import_util = __toModule(require("util"));
  }
});

// output/Node.Buffer.Types/index.js
var UInt8, UInt16LE, UInt16BE, UInt32LE, UInt32BE, Int8, Int16LE, Int16BE, Int32LE, Int32BE, FloatLE, FloatBE, DoubleLE, DoubleBE, showBufferValueType;
var init_Node_Buffer2 = __esm({
  "output/Node.Buffer.Types/index.js"() {
    UInt8 = /* @__PURE__ */ function() {
      function UInt82() {
      }
      ;
      UInt82.value = new UInt82();
      return UInt82;
    }();
    UInt16LE = /* @__PURE__ */ function() {
      function UInt16LE2() {
      }
      ;
      UInt16LE2.value = new UInt16LE2();
      return UInt16LE2;
    }();
    UInt16BE = /* @__PURE__ */ function() {
      function UInt16BE2() {
      }
      ;
      UInt16BE2.value = new UInt16BE2();
      return UInt16BE2;
    }();
    UInt32LE = /* @__PURE__ */ function() {
      function UInt32LE2() {
      }
      ;
      UInt32LE2.value = new UInt32LE2();
      return UInt32LE2;
    }();
    UInt32BE = /* @__PURE__ */ function() {
      function UInt32BE2() {
      }
      ;
      UInt32BE2.value = new UInt32BE2();
      return UInt32BE2;
    }();
    Int8 = /* @__PURE__ */ function() {
      function Int82() {
      }
      ;
      Int82.value = new Int82();
      return Int82;
    }();
    Int16LE = /* @__PURE__ */ function() {
      function Int16LE2() {
      }
      ;
      Int16LE2.value = new Int16LE2();
      return Int16LE2;
    }();
    Int16BE = /* @__PURE__ */ function() {
      function Int16BE2() {
      }
      ;
      Int16BE2.value = new Int16BE2();
      return Int16BE2;
    }();
    Int32LE = /* @__PURE__ */ function() {
      function Int32LE2() {
      }
      ;
      Int32LE2.value = new Int32LE2();
      return Int32LE2;
    }();
    Int32BE = /* @__PURE__ */ function() {
      function Int32BE2() {
      }
      ;
      Int32BE2.value = new Int32BE2();
      return Int32BE2;
    }();
    FloatLE = /* @__PURE__ */ function() {
      function FloatLE2() {
      }
      ;
      FloatLE2.value = new FloatLE2();
      return FloatLE2;
    }();
    FloatBE = /* @__PURE__ */ function() {
      function FloatBE2() {
      }
      ;
      FloatBE2.value = new FloatBE2();
      return FloatBE2;
    }();
    DoubleLE = /* @__PURE__ */ function() {
      function DoubleLE2() {
      }
      ;
      DoubleLE2.value = new DoubleLE2();
      return DoubleLE2;
    }();
    DoubleBE = /* @__PURE__ */ function() {
      function DoubleBE2() {
      }
      ;
      DoubleBE2.value = new DoubleBE2();
      return DoubleBE2;
    }();
    showBufferValueType = {
      show: function(v) {
        if (v instanceof UInt8) {
          return "UInt8";
        }
        ;
        if (v instanceof UInt16LE) {
          return "UInt16LE";
        }
        ;
        if (v instanceof UInt16BE) {
          return "UInt16BE";
        }
        ;
        if (v instanceof UInt32LE) {
          return "UInt32LE";
        }
        ;
        if (v instanceof UInt32BE) {
          return "UInt32BE";
        }
        ;
        if (v instanceof Int8) {
          return "Int8";
        }
        ;
        if (v instanceof Int16LE) {
          return "Int16LE";
        }
        ;
        if (v instanceof Int16BE) {
          return "Int16BE";
        }
        ;
        if (v instanceof Int32LE) {
          return "Int32LE";
        }
        ;
        if (v instanceof Int32BE) {
          return "Int32BE";
        }
        ;
        if (v instanceof FloatLE) {
          return "FloatLE";
        }
        ;
        if (v instanceof FloatBE) {
          return "FloatBE";
        }
        ;
        if (v instanceof DoubleLE) {
          return "DoubleLE";
        }
        ;
        if (v instanceof DoubleBE) {
          return "DoubleBE";
        }
        ;
        throw new Error("Failed pattern match at Node.Buffer.Types (line 33, column 1 - line 47, column 29): " + [v.constructor.name]);
      }
    };
  }
});

// output/Node.Encoding/foreign.js
var init_foreign63 = __esm({
  "output/Node.Encoding/foreign.js"() {
  }
});

// output/Node.Encoding/index.js
var ASCII, UTF8, UTF16LE, UCS2, Base64, Latin1, Binary, Hex, showEncoding, encodingToNode;
var init_Node5 = __esm({
  "output/Node.Encoding/index.js"() {
    init_foreign63();
    ASCII = /* @__PURE__ */ function() {
      function ASCII3() {
      }
      ;
      ASCII3.value = new ASCII3();
      return ASCII3;
    }();
    UTF8 = /* @__PURE__ */ function() {
      function UTF82() {
      }
      ;
      UTF82.value = new UTF82();
      return UTF82;
    }();
    UTF16LE = /* @__PURE__ */ function() {
      function UTF16LE2() {
      }
      ;
      UTF16LE2.value = new UTF16LE2();
      return UTF16LE2;
    }();
    UCS2 = /* @__PURE__ */ function() {
      function UCS22() {
      }
      ;
      UCS22.value = new UCS22();
      return UCS22;
    }();
    Base64 = /* @__PURE__ */ function() {
      function Base642() {
      }
      ;
      Base642.value = new Base642();
      return Base642;
    }();
    Latin1 = /* @__PURE__ */ function() {
      function Latin12() {
      }
      ;
      Latin12.value = new Latin12();
      return Latin12;
    }();
    Binary = /* @__PURE__ */ function() {
      function Binary2() {
      }
      ;
      Binary2.value = new Binary2();
      return Binary2;
    }();
    Hex = /* @__PURE__ */ function() {
      function Hex2() {
      }
      ;
      Hex2.value = new Hex2();
      return Hex2;
    }();
    showEncoding = {
      show: function(v) {
        if (v instanceof ASCII) {
          return "ASCII";
        }
        ;
        if (v instanceof UTF8) {
          return "UTF8";
        }
        ;
        if (v instanceof UTF16LE) {
          return "UTF16LE";
        }
        ;
        if (v instanceof UCS2) {
          return "UCS2";
        }
        ;
        if (v instanceof Base64) {
          return "Base64";
        }
        ;
        if (v instanceof Latin1) {
          return "Latin1";
        }
        ;
        if (v instanceof Binary) {
          return "Binary";
        }
        ;
        if (v instanceof Hex) {
          return "Hex";
        }
        ;
        throw new Error("Failed pattern match at Node.Encoding (line 19, column 1 - line 27, column 23): " + [v.constructor.name]);
      }
    };
    encodingToNode = function(v) {
      if (v instanceof ASCII) {
        return "ascii";
      }
      ;
      if (v instanceof UTF8) {
        return "utf8";
      }
      ;
      if (v instanceof UTF16LE) {
        return "utf16le";
      }
      ;
      if (v instanceof UCS2) {
        return "ucs2";
      }
      ;
      if (v instanceof Base64) {
        return "base64";
      }
      ;
      if (v instanceof Latin1) {
        return "latin1";
      }
      ;
      if (v instanceof Binary) {
        return "binary";
      }
      ;
      if (v instanceof Hex) {
        return "hex";
      }
      ;
      throw new Error("Failed pattern match at Node.Encoding (line 31, column 1 - line 31, column 37): " + [v.constructor.name]);
    };
  }
});

// output/Node.Buffer.Immutable/index.js
var toString3, readString3, read5, getAtOffset, fromString5, concat$prime;
var init_Node_Buffer3 = __esm({
  "output/Node.Buffer.Immutable/index.js"() {
    init_foreign62();
    init_Data15();
    init_Data9();
    init_Data14();
    init_Node_Buffer2();
    init_Node5();
    init_foreign62();
    toString3 = function($3) {
      return toStringImpl(encodingToNode($3));
    };
    readString3 = function($4) {
      return readStringImpl(encodingToNode($4));
    };
    read5 = /* @__PURE__ */ function() {
      var $5 = show(showBufferValueType);
      return function($6) {
        return readImpl($5($6));
      };
    }();
    getAtOffset = /* @__PURE__ */ function() {
      return getAtOffsetImpl(Just.create)(Nothing.value);
    }();
    fromString5 = function(str) {
      var $7 = fromStringImpl2(str);
      return function($8) {
        return $7(encodingToNode($8));
      };
    };
    concat$prime = concatToLength;
  }
});

// output/Node.Buffer.Internal/index.js
var writeString, write3, unsafeThaw2, usingToImmutable, unsafeFreeze2, usingFromImmutable, toString4, toArrayBuffer2, toArray2, slice4, size4, readString4, read6, getAtOffset2, fromString6, fromArrayBuffer2, fromArray2, create2, concat$prime2, concat5;
var init_Node_Buffer4 = __esm({
  "output/Node.Buffer.Internal/index.js"() {
    init_foreign61();
    init_Control4();
    init_Data4();
    init_Data14();
    init_Node_Buffer3();
    init_Node_Buffer2();
    init_Node5();
    init_foreign61();
    writeString = function(dictMonad) {
      return function($20) {
        return writeStringInternal(encodingToNode($20));
      };
    };
    write3 = function(dictMonad) {
      var $21 = show(showBufferValueType);
      return function($22) {
        return writeInternal($21($22));
      };
    };
    unsafeThaw2 = function(dictMonad) {
      var $23 = pure(dictMonad.Applicative0());
      return function($24) {
        return $23($24);
      };
    };
    usingToImmutable = function(dictMonad) {
      return function(f) {
        return function(x) {
          return unsafeThaw2(dictMonad)(f(x));
        };
      };
    };
    unsafeFreeze2 = function(dictMonad) {
      var $25 = pure(dictMonad.Applicative0());
      return function($26) {
        return $25($26);
      };
    };
    usingFromImmutable = function(dictMonad) {
      return function(f) {
        return function(buf) {
          return map(dictMonad.Bind1().Apply0().Functor0())(f)(unsafeFreeze2(dictMonad)(buf));
        };
      };
    };
    toString4 = function(dictMonad) {
      return function(m) {
        return usingFromImmutable(dictMonad)(toString3(m));
      };
    };
    toArrayBuffer2 = function(dictMonad) {
      return usingFromImmutable(dictMonad)(toArrayBuffer);
    };
    toArray2 = function(dictMonad) {
      return usingFromImmutable(dictMonad)(toArray);
    };
    slice4 = slice3;
    size4 = function(dictMonad) {
      return usingFromImmutable(dictMonad)(size3);
    };
    readString4 = function(dictMonad) {
      return function(m) {
        return function(o) {
          return function(o$prime) {
            return usingFromImmutable(dictMonad)(readString3(m)(o)(o$prime));
          };
        };
      };
    };
    read6 = function(dictMonad) {
      return function(t) {
        return function(o) {
          return usingFromImmutable(dictMonad)(read5(t)(o));
        };
      };
    };
    getAtOffset2 = function(dictMonad) {
      return function(o) {
        return usingFromImmutable(dictMonad)(getAtOffset(o));
      };
    };
    fromString6 = function(dictMonad) {
      return function(s) {
        return usingToImmutable(dictMonad)(fromString5(s));
      };
    };
    fromArrayBuffer2 = function(dictMonad) {
      return usingToImmutable(dictMonad)(fromArrayBuffer);
    };
    fromArray2 = function(dictMonad) {
      return usingToImmutable(dictMonad)(fromArray);
    };
    create2 = function(dictMonad) {
      return usingToImmutable(dictMonad)(create);
    };
    concat$prime2 = function(dictMonad) {
      return function(arrs) {
        return function(n) {
          return function(v) {
            return concat$prime(arrs)(n);
          };
        };
      };
    };
    concat5 = function(arrs) {
      return function(v) {
        return concat4(arrs);
      };
    };
  }
});

// output/Node.Buffer/index.js
var mutableBufferEffect;
var init_Node6 = __esm({
  "output/Node.Buffer/index.js"() {
    init_Effect();
    init_Node_Buffer();
    init_Node_Buffer4();
    init_Node_Buffer2();
    init_Node_Buffer();
    init_Node_Buffer2();
    mutableBufferEffect = {
      create: /* @__PURE__ */ create2(monadEffect),
      freeze: copyAll,
      unsafeFreeze: /* @__PURE__ */ unsafeFreeze2(monadEffect),
      thaw: copyAll,
      unsafeThaw: /* @__PURE__ */ unsafeThaw2(monadEffect),
      fromArray: /* @__PURE__ */ fromArray2(monadEffect),
      fromString: /* @__PURE__ */ fromString6(monadEffect),
      fromArrayBuffer: /* @__PURE__ */ fromArrayBuffer2(monadEffect),
      toArrayBuffer: /* @__PURE__ */ toArrayBuffer2(monadEffect),
      read: /* @__PURE__ */ read6(monadEffect),
      readString: /* @__PURE__ */ readString4(monadEffect),
      toString: /* @__PURE__ */ toString4(monadEffect),
      write: /* @__PURE__ */ write3(monadEffect),
      writeString: /* @__PURE__ */ writeString(monadEffect),
      toArray: /* @__PURE__ */ toArray2(monadEffect),
      getAtOffset: /* @__PURE__ */ getAtOffset2(monadEffect),
      setAtOffset,
      slice: slice4,
      size: /* @__PURE__ */ size4(monadEffect),
      concat: concat5,
      "concat'": /* @__PURE__ */ concat$prime2(monadEffect),
      copy,
      fill,
      Monad0: function() {
        return monadEffect;
      }
    };
  }
});

// output/Node.ChildProcess/foreign.js
function unsafeFromNullable(msg) {
  return (x) => {
    if (x === null)
      throw new Error(msg);
    return x;
  };
}
function spawnImpl(command) {
  return (args) => (opts) => () => (0, import_child_process.spawn)(command, args, opts);
}
function mkOnClose(mkChildExit) {
  return function onClose3(cp) {
    return (cb) => () => {
      cp.on("close", (code, signal) => {
        cb(mkChildExit(code)(signal))();
      });
    };
  };
}
function onError(cp) {
  return (cb) => () => {
    cp.on("error", (err) => {
      cb(err)();
    });
  };
}
var import_child_process, import_process2, execFileImpl, _undefined;
var init_foreign64 = __esm({
  "output/Node.ChildProcess/foreign.js"() {
    import_child_process = __toModule(require("child_process"));
    import_process2 = __toModule(require("process"));
    execFileImpl = function execImpl(command) {
      return (args) => (opts) => (callback) => () => (0, import_child_process.execFile)(command, args, opts, (err, stdout2, stderr2) => {
        callback(err)(stdout2)(stderr2)();
      });
    };
    _undefined = void 0;
  }
});

// output/Effect.Exception.Unsafe/index.js
var unsafeThrowException, unsafeThrow;
var init_Effect_Exception = __esm({
  "output/Effect.Exception.Unsafe/index.js"() {
    init_Effect2();
    init_Effect5();
    unsafeThrowException = function($0) {
      return unsafePerformEffect(throwException($0));
    };
    unsafeThrow = function($1) {
      return unsafeThrowException(error($1));
    };
  }
});

// output/Node.ChildProcess/index.js
var Pipe, Ignore, ShareStream, ShareFD, Normally, BySignal, toStandardError, toActualStdIOBehaviour, toActualStdIOOptions, spawn2, runChildProcess, pipe, pid, mkExit, onClose, missingStream, stderr, stdin, stdout, defaultSpawnOptions, defaultExecOptions, convertExecOptions, execFile2;
var init_Node7 = __esm({
  "output/Node.ChildProcess/index.js"() {
    init_foreign64();
    init_Control6();
    init_Control5();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Data_Posix();
    init_Data14();
    init_Effect_Exception();
    init_Node5();
    init_Unsafe();
    init_foreign64();
    Pipe = /* @__PURE__ */ function() {
      function Pipe2() {
      }
      ;
      Pipe2.value = new Pipe2();
      return Pipe2;
    }();
    Ignore = /* @__PURE__ */ function() {
      function Ignore2() {
      }
      ;
      Ignore2.value = new Ignore2();
      return Ignore2;
    }();
    ShareStream = /* @__PURE__ */ function() {
      function ShareStream2(value0) {
        this.value0 = value0;
      }
      ;
      ShareStream2.create = function(value0) {
        return new ShareStream2(value0);
      };
      return ShareStream2;
    }();
    ShareFD = /* @__PURE__ */ function() {
      function ShareFD2(value0) {
        this.value0 = value0;
      }
      ;
      ShareFD2.create = function(value0) {
        return new ShareFD2(value0);
      };
      return ShareFD2;
    }();
    Normally = /* @__PURE__ */ function() {
      function Normally2(value0) {
        this.value0 = value0;
      }
      ;
      Normally2.create = function(value0) {
        return new Normally2(value0);
      };
      return Normally2;
    }();
    BySignal = /* @__PURE__ */ function() {
      function BySignal2(value0) {
        this.value0 = value0;
      }
      ;
      BySignal2.create = function(value0) {
        return new BySignal2(value0);
      };
      return BySignal2;
    }();
    toStandardError = unsafeCoerce2;
    toActualStdIOBehaviour = function(b) {
      if (b instanceof Pipe) {
        return "pipe";
      }
      ;
      if (b instanceof Ignore) {
        return "ignore";
      }
      ;
      if (b instanceof ShareFD) {
        return b.value0;
      }
      ;
      if (b instanceof ShareStream) {
        return b.value0;
      }
      ;
      throw new Error("Failed pattern match at Node.ChildProcess (line 517, column 28 - line 521, column 33): " + [b.constructor.name]);
    };
    toActualStdIOOptions = /* @__PURE__ */ map(functorArray)(/* @__PURE__ */ function() {
      var $29 = map(functorMaybe)(toActualStdIOBehaviour);
      return function($30) {
        return toNullable($29($30));
      };
    }());
    spawn2 = function(cmd) {
      return function(args) {
        var convertOpts = function(opts) {
          return {
            cwd: fromMaybe(_undefined)(opts.cwd),
            stdio: toActualStdIOOptions(opts.stdio),
            env: toNullable(opts.env),
            detached: opts.detached,
            uid: fromMaybe(_undefined)(opts.uid),
            gid: fromMaybe(_undefined)(opts.gid)
          };
        };
        var $31 = spawnImpl(cmd)(args);
        return function($32) {
          return $31(convertOpts($32));
        };
      };
    };
    runChildProcess = function(v) {
      return v;
    };
    pipe = /* @__PURE__ */ function() {
      return map(functorArray)(Just.create)([Pipe.value, Pipe.value, Pipe.value]);
    }();
    pid = function($33) {
      return function(v) {
        return v.pid;
      }(runChildProcess($33));
    };
    mkExit = function(code) {
      return function(signal) {
        var fromSignal = composeKleisli(bindMaybe)(toMaybe)(function() {
          var $34 = map(functorMaybe)(BySignal.create);
          return function($35) {
            return $34(fromString3($35));
          };
        }());
        var fromCode = function() {
          var $36 = map(functorMaybe)(Normally.create);
          return function($37) {
            return $36(toMaybe($37));
          };
        }();
        var v = alt(altMaybe)(fromCode(code))(fromSignal(signal));
        if (v instanceof Just) {
          return v.value0;
        }
        ;
        if (v instanceof Nothing) {
          return unsafeThrow("Node.ChildProcess.mkExit: Invalid arguments");
        }
        ;
        throw new Error("Failed pattern match at Node.ChildProcess (line 170, column 3 - line 172, column 73): " + [v.constructor.name]);
      };
    };
    onClose = /* @__PURE__ */ mkOnClose(mkExit);
    missingStream = function(str) {
      return "Node.ChildProcess: stream not available: " + (str + "\nThis is probably because you passed something other than Pipe to the stdio option when you spawned it.");
    };
    stderr = /* @__PURE__ */ function() {
      var $38 = unsafeFromNullable(missingStream("stderr"));
      return function($39) {
        return $38(function(v) {
          return v.stderr;
        }(runChildProcess($39)));
      };
    }();
    stdin = /* @__PURE__ */ function() {
      var $40 = unsafeFromNullable(missingStream("stdin"));
      return function($41) {
        return $40(function(v) {
          return v.stdin;
        }(runChildProcess($41)));
      };
    }();
    stdout = /* @__PURE__ */ function() {
      var $42 = unsafeFromNullable(missingStream("stdout"));
      return function($43) {
        return $42(function(v) {
          return v.stdout;
        }(runChildProcess($43)));
      };
    }();
    defaultSpawnOptions = /* @__PURE__ */ function() {
      return {
        cwd: Nothing.value,
        stdio: pipe,
        env: Nothing.value,
        detached: false,
        uid: Nothing.value,
        gid: Nothing.value
      };
    }();
    defaultExecOptions = /* @__PURE__ */ function() {
      return {
        cwd: Nothing.value,
        env: Nothing.value,
        encoding: Nothing.value,
        shell: Nothing.value,
        timeout: Nothing.value,
        maxBuffer: Nothing.value,
        killSignal: Nothing.value,
        uid: Nothing.value,
        gid: Nothing.value
      };
    }();
    convertExecOptions = function(opts) {
      return {
        cwd: fromMaybe(_undefined)(opts.cwd),
        env: fromMaybe(_undefined)(opts.env),
        encoding: maybe(_undefined)(encodingToNode)(opts.encoding),
        shell: fromMaybe(_undefined)(opts.shell),
        timeout: fromMaybe(_undefined)(opts.timeout),
        maxBuffer: fromMaybe(_undefined)(opts.maxBuffer),
        killSignal: fromMaybe(_undefined)(opts.killSignal),
        uid: fromMaybe(_undefined)(opts.uid),
        gid: fromMaybe(_undefined)(opts.gid)
      };
    };
    execFile2 = function(cmd) {
      return function(args) {
        return function(opts) {
          return function(callback) {
            return execFileImpl(cmd)(args)(convertExecOptions(opts))(function(err) {
              return function(stdout$prime) {
                return function(stderr$prime) {
                  return callback({
                    error: toMaybe(err),
                    stdout: stdout$prime,
                    stderr: stderr$prime
                  });
                };
              };
            });
          };
        };
      };
    };
  }
});

// output/Node.FS.Sync/foreign.js
var import_fs2;
var init_foreign65 = __esm({
  "output/Node.FS.Sync/foreign.js"() {
    import_fs2 = __toModule(require("fs"));
  }
});

// output/Data.DateTime.Instant/foreign.js
function toDateTimeImpl(ctor) {
  return function(instant2) {
    var dt = new Date(instant2);
    return ctor(dt.getUTCFullYear())(dt.getUTCMonth() + 1)(dt.getUTCDate())(dt.getUTCHours())(dt.getUTCMinutes())(dt.getUTCSeconds())(dt.getUTCMilliseconds());
  };
}
var init_foreign66 = __esm({
  "output/Data.DateTime.Instant/foreign.js"() {
  }
});

// output/Data.Date/foreign.js
function canonicalDateImpl(ctor, y, m, d) {
  var date2 = createDate(y, m - 1, d);
  return ctor(date2.getUTCFullYear())(date2.getUTCMonth() + 1)(date2.getUTCDate());
}
var createDate;
var init_foreign67 = __esm({
  "output/Data.Date/foreign.js"() {
    createDate = function(y, m, d) {
      var date2 = new Date(Date.UTC(y, m, d));
      if (y >= 0 && y < 100) {
        date2.setUTCFullYear(y);
      }
      return date2;
    };
  }
});

// output/Data.Date.Component/index.js
var $runtime_lazy4, January, February, March, April, May, June, July, August, September, October, November, December, ordYear, ordDay, eqMonth, ordMonth, boundedYear, boundedMonth, boundedEnumYear, $lazy_enumYear, boundedEnumMonth, $lazy_enumMonth, boundedDay, boundedEnumDay, $lazy_enumDay;
var init_Data_Date = __esm({
  "output/Data.Date.Component/index.js"() {
    init_Data();
    init_Data42();
    init_Data8();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    $runtime_lazy4 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    January = /* @__PURE__ */ function() {
      function January2() {
      }
      ;
      January2.value = new January2();
      return January2;
    }();
    February = /* @__PURE__ */ function() {
      function February2() {
      }
      ;
      February2.value = new February2();
      return February2;
    }();
    March = /* @__PURE__ */ function() {
      function March2() {
      }
      ;
      March2.value = new March2();
      return March2;
    }();
    April = /* @__PURE__ */ function() {
      function April2() {
      }
      ;
      April2.value = new April2();
      return April2;
    }();
    May = /* @__PURE__ */ function() {
      function May2() {
      }
      ;
      May2.value = new May2();
      return May2;
    }();
    June = /* @__PURE__ */ function() {
      function June2() {
      }
      ;
      June2.value = new June2();
      return June2;
    }();
    July = /* @__PURE__ */ function() {
      function July2() {
      }
      ;
      July2.value = new July2();
      return July2;
    }();
    August = /* @__PURE__ */ function() {
      function August2() {
      }
      ;
      August2.value = new August2();
      return August2;
    }();
    September = /* @__PURE__ */ function() {
      function September2() {
      }
      ;
      September2.value = new September2();
      return September2;
    }();
    October = /* @__PURE__ */ function() {
      function October2() {
      }
      ;
      October2.value = new October2();
      return October2;
    }();
    November = /* @__PURE__ */ function() {
      function November2() {
      }
      ;
      November2.value = new November2();
      return November2;
    }();
    December = /* @__PURE__ */ function() {
      function December2() {
      }
      ;
      December2.value = new December2();
      return December2;
    }();
    ordYear = ordInt;
    ordDay = ordInt;
    eqMonth = {
      eq: function(x) {
        return function(y) {
          if (x instanceof January && y instanceof January) {
            return true;
          }
          ;
          if (x instanceof February && y instanceof February) {
            return true;
          }
          ;
          if (x instanceof March && y instanceof March) {
            return true;
          }
          ;
          if (x instanceof April && y instanceof April) {
            return true;
          }
          ;
          if (x instanceof May && y instanceof May) {
            return true;
          }
          ;
          if (x instanceof June && y instanceof June) {
            return true;
          }
          ;
          if (x instanceof July && y instanceof July) {
            return true;
          }
          ;
          if (x instanceof August && y instanceof August) {
            return true;
          }
          ;
          if (x instanceof September && y instanceof September) {
            return true;
          }
          ;
          if (x instanceof October && y instanceof October) {
            return true;
          }
          ;
          if (x instanceof November && y instanceof November) {
            return true;
          }
          ;
          if (x instanceof December && y instanceof December) {
            return true;
          }
          ;
          return false;
        };
      }
    };
    ordMonth = {
      compare: function(x) {
        return function(y) {
          if (x instanceof January && y instanceof January) {
            return EQ.value;
          }
          ;
          if (x instanceof January) {
            return LT.value;
          }
          ;
          if (y instanceof January) {
            return GT.value;
          }
          ;
          if (x instanceof February && y instanceof February) {
            return EQ.value;
          }
          ;
          if (x instanceof February) {
            return LT.value;
          }
          ;
          if (y instanceof February) {
            return GT.value;
          }
          ;
          if (x instanceof March && y instanceof March) {
            return EQ.value;
          }
          ;
          if (x instanceof March) {
            return LT.value;
          }
          ;
          if (y instanceof March) {
            return GT.value;
          }
          ;
          if (x instanceof April && y instanceof April) {
            return EQ.value;
          }
          ;
          if (x instanceof April) {
            return LT.value;
          }
          ;
          if (y instanceof April) {
            return GT.value;
          }
          ;
          if (x instanceof May && y instanceof May) {
            return EQ.value;
          }
          ;
          if (x instanceof May) {
            return LT.value;
          }
          ;
          if (y instanceof May) {
            return GT.value;
          }
          ;
          if (x instanceof June && y instanceof June) {
            return EQ.value;
          }
          ;
          if (x instanceof June) {
            return LT.value;
          }
          ;
          if (y instanceof June) {
            return GT.value;
          }
          ;
          if (x instanceof July && y instanceof July) {
            return EQ.value;
          }
          ;
          if (x instanceof July) {
            return LT.value;
          }
          ;
          if (y instanceof July) {
            return GT.value;
          }
          ;
          if (x instanceof August && y instanceof August) {
            return EQ.value;
          }
          ;
          if (x instanceof August) {
            return LT.value;
          }
          ;
          if (y instanceof August) {
            return GT.value;
          }
          ;
          if (x instanceof September && y instanceof September) {
            return EQ.value;
          }
          ;
          if (x instanceof September) {
            return LT.value;
          }
          ;
          if (y instanceof September) {
            return GT.value;
          }
          ;
          if (x instanceof October && y instanceof October) {
            return EQ.value;
          }
          ;
          if (x instanceof October) {
            return LT.value;
          }
          ;
          if (y instanceof October) {
            return GT.value;
          }
          ;
          if (x instanceof November && y instanceof November) {
            return EQ.value;
          }
          ;
          if (x instanceof November) {
            return LT.value;
          }
          ;
          if (y instanceof November) {
            return GT.value;
          }
          ;
          if (x instanceof December && y instanceof December) {
            return EQ.value;
          }
          ;
          throw new Error("Failed pattern match at Data.Date.Component (line 0, column 0 - line 0, column 0): " + [x.constructor.name, y.constructor.name]);
        };
      },
      Eq0: function() {
        return eqMonth;
      }
    };
    boundedYear = /* @__PURE__ */ function() {
      return {
        bottom: -271820 | 0,
        top: 275759,
        Ord0: function() {
          return ordYear;
        }
      };
    }();
    boundedMonth = /* @__PURE__ */ function() {
      return {
        bottom: January.value,
        top: December.value,
        Ord0: function() {
          return ordMonth;
        }
      };
    }();
    boundedEnumYear = {
      cardinality: 547580,
      toEnum: function(n) {
        if (n >= (-271820 | 0) && n <= 275759) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Date.Component (line 35, column 1 - line 40, column 24): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedYear;
      },
      Enum1: function() {
        return $lazy_enumYear(0);
      }
    };
    $lazy_enumYear = /* @__PURE__ */ $runtime_lazy4("enumYear", "Data.Date.Component", function() {
      return {
        succ: function() {
          var $46 = toEnum(boundedEnumYear);
          var $47 = fromEnum(boundedEnumYear);
          return function($48) {
            return $46(function(v) {
              return v + 1 | 0;
            }($47($48)));
          };
        }(),
        pred: function() {
          var $49 = toEnum(boundedEnumYear);
          var $50 = fromEnum(boundedEnumYear);
          return function($51) {
            return $49(function(v) {
              return v - 1 | 0;
            }($50($51)));
          };
        }(),
        Ord0: function() {
          return ordYear;
        }
      };
    });
    boundedEnumMonth = {
      cardinality: 12,
      toEnum: function(v) {
        if (v === 1) {
          return new Just(January.value);
        }
        ;
        if (v === 2) {
          return new Just(February.value);
        }
        ;
        if (v === 3) {
          return new Just(March.value);
        }
        ;
        if (v === 4) {
          return new Just(April.value);
        }
        ;
        if (v === 5) {
          return new Just(May.value);
        }
        ;
        if (v === 6) {
          return new Just(June.value);
        }
        ;
        if (v === 7) {
          return new Just(July.value);
        }
        ;
        if (v === 8) {
          return new Just(August.value);
        }
        ;
        if (v === 9) {
          return new Just(September.value);
        }
        ;
        if (v === 10) {
          return new Just(October.value);
        }
        ;
        if (v === 11) {
          return new Just(November.value);
        }
        ;
        if (v === 12) {
          return new Just(December.value);
        }
        ;
        return Nothing.value;
      },
      fromEnum: function(v) {
        if (v instanceof January) {
          return 1;
        }
        ;
        if (v instanceof February) {
          return 2;
        }
        ;
        if (v instanceof March) {
          return 3;
        }
        ;
        if (v instanceof April) {
          return 4;
        }
        ;
        if (v instanceof May) {
          return 5;
        }
        ;
        if (v instanceof June) {
          return 6;
        }
        ;
        if (v instanceof July) {
          return 7;
        }
        ;
        if (v instanceof August) {
          return 8;
        }
        ;
        if (v instanceof September) {
          return 9;
        }
        ;
        if (v instanceof October) {
          return 10;
        }
        ;
        if (v instanceof November) {
          return 11;
        }
        ;
        if (v instanceof December) {
          return 12;
        }
        ;
        throw new Error("Failed pattern match at Data.Date.Component (line 87, column 14 - line 99, column 19): " + [v.constructor.name]);
      },
      Bounded0: function() {
        return boundedMonth;
      },
      Enum1: function() {
        return $lazy_enumMonth(0);
      }
    };
    $lazy_enumMonth = /* @__PURE__ */ $runtime_lazy4("enumMonth", "Data.Date.Component", function() {
      return {
        succ: function() {
          var $58 = toEnum(boundedEnumMonth);
          var $59 = fromEnum(boundedEnumMonth);
          return function($60) {
            return $58(function(v) {
              return v + 1 | 0;
            }($59($60)));
          };
        }(),
        pred: function() {
          var $61 = toEnum(boundedEnumMonth);
          var $62 = fromEnum(boundedEnumMonth);
          return function($63) {
            return $61(function(v) {
              return v - 1 | 0;
            }($62($63)));
          };
        }(),
        Ord0: function() {
          return ordMonth;
        }
      };
    });
    boundedDay = {
      bottom: 1,
      top: 31,
      Ord0: function() {
        return ordDay;
      }
    };
    boundedEnumDay = {
      cardinality: 31,
      toEnum: function(n) {
        if (n >= 1 && n <= 31) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Date.Component (line 133, column 1 - line 138, column 23): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedDay;
      },
      Enum1: function() {
        return $lazy_enumDay(0);
      }
    };
    $lazy_enumDay = /* @__PURE__ */ $runtime_lazy4("enumDay", "Data.Date.Component", function() {
      return {
        succ: function() {
          var $64 = toEnum(boundedEnumDay);
          var $65 = fromEnum(boundedEnumDay);
          return function($66) {
            return $64(function(v) {
              return v + 1 | 0;
            }($65($66)));
          };
        }(),
        pred: function() {
          var $67 = toEnum(boundedEnumDay);
          var $68 = fromEnum(boundedEnumDay);
          return function($69) {
            return $67(function(v) {
              return v - 1 | 0;
            }($68($69)));
          };
        }(),
        Ord0: function() {
          return ordDay;
        }
      };
    });
  }
});

// output/Data.Date/index.js
var $$Date, year, month, day, canonicalDate;
var init_Data44 = __esm({
  "output/Data.Date/index.js"() {
    init_foreign67();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data();
    init_Data13();
    init_Data_Date();
    init_Data42();
    init_Data8();
    init_Data18();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data_Time();
    init_Data_Date();
    $$Date = /* @__PURE__ */ function() {
      function $$Date2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      $$Date2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new $$Date2(value0, value1, value2);
          };
        };
      };
      return $$Date2;
    }();
    year = function(v) {
      return v.value0;
    };
    month = function(v) {
      return v.value1;
    };
    day = function(v) {
      return v.value2;
    };
    canonicalDate = function(y) {
      return function(m) {
        return function(d) {
          var mkDate = function(y$prime) {
            return function(m$prime) {
              return function(d$prime) {
                return new $$Date(y$prime, fromJust()(toEnum(boundedEnumMonth)(m$prime)), d$prime);
              };
            };
          };
          return canonicalDateImpl(mkDate, y, fromEnum(boundedEnumMonth)(m), d);
        };
      };
    };
  }
});

// output/Data.DateTime/foreign.js
function calcDiff2(rec1, rec2) {
  var msUTC1 = createUTC(rec1.year, rec1.month - 1, rec1.day, rec1.hour, rec1.minute, rec1.second, rec1.millisecond);
  var msUTC2 = createUTC(rec2.year, rec2.month - 1, rec2.day, rec2.hour, rec2.minute, rec2.second, rec2.millisecond);
  return msUTC1 - msUTC2;
}
var createUTC;
var init_foreign68 = __esm({
  "output/Data.DateTime/foreign.js"() {
    createUTC = function(y, mo, d, h, m, s, ms) {
      var date2 = new Date(Date.UTC(y, mo, d, h, m, s, ms));
      if (y >= 0 && y < 100) {
        date2.setUTCFullYear(y);
      }
      return date2.getTime();
    };
  }
});

// output/Data.Time.Component/index.js
var $runtime_lazy5, ordSecond, ordMinute, ordMillisecond, ordHour, boundedSecond, boundedMinute, boundedMillisecond, boundedHour, boundedEnumSecond, $lazy_enumSecond, boundedEnumMinute, $lazy_enumMinute, boundedEnumMillisecond, $lazy_enumMillisecond, boundedEnumHour, $lazy_enumHour;
var init_Data_Time2 = __esm({
  "output/Data.Time.Component/index.js"() {
    init_Data();
    init_Data42();
    init_Data8();
    init_Data15();
    init_Data12();
    init_Data14();
    $runtime_lazy5 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    ordSecond = ordInt;
    ordMinute = ordInt;
    ordMillisecond = ordInt;
    ordHour = ordInt;
    boundedSecond = {
      bottom: 0,
      top: 59,
      Ord0: function() {
        return ordSecond;
      }
    };
    boundedMinute = {
      bottom: 0,
      top: 59,
      Ord0: function() {
        return ordMinute;
      }
    };
    boundedMillisecond = {
      bottom: 0,
      top: 999,
      Ord0: function() {
        return ordMillisecond;
      }
    };
    boundedHour = {
      bottom: 0,
      top: 23,
      Ord0: function() {
        return ordHour;
      }
    };
    boundedEnumSecond = {
      cardinality: 60,
      toEnum: function(n) {
        if (n >= 0 && n <= 59) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Time.Component (line 90, column 1 - line 95, column 26): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedSecond;
      },
      Enum1: function() {
        return $lazy_enumSecond(0);
      }
    };
    $lazy_enumSecond = /* @__PURE__ */ $runtime_lazy5("enumSecond", "Data.Time.Component", function() {
      return {
        succ: function() {
          var $28 = toEnum(boundedEnumSecond);
          var $29 = fromEnum(boundedEnumSecond);
          return function($30) {
            return $28(function(v) {
              return v + 1 | 0;
            }($29($30)));
          };
        }(),
        pred: function() {
          var $31 = toEnum(boundedEnumSecond);
          var $32 = fromEnum(boundedEnumSecond);
          return function($33) {
            return $31(function(v) {
              return v - 1 | 0;
            }($32($33)));
          };
        }(),
        Ord0: function() {
          return ordSecond;
        }
      };
    });
    boundedEnumMinute = {
      cardinality: 60,
      toEnum: function(n) {
        if (n >= 0 && n <= 59) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Time.Component (line 61, column 1 - line 66, column 26): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedMinute;
      },
      Enum1: function() {
        return $lazy_enumMinute(0);
      }
    };
    $lazy_enumMinute = /* @__PURE__ */ $runtime_lazy5("enumMinute", "Data.Time.Component", function() {
      return {
        succ: function() {
          var $34 = toEnum(boundedEnumMinute);
          var $35 = fromEnum(boundedEnumMinute);
          return function($36) {
            return $34(function(v) {
              return v + 1 | 0;
            }($35($36)));
          };
        }(),
        pred: function() {
          var $37 = toEnum(boundedEnumMinute);
          var $38 = fromEnum(boundedEnumMinute);
          return function($39) {
            return $37(function(v) {
              return v - 1 | 0;
            }($38($39)));
          };
        }(),
        Ord0: function() {
          return ordMinute;
        }
      };
    });
    boundedEnumMillisecond = {
      cardinality: 1e3,
      toEnum: function(n) {
        if (n >= 0 && n <= 999) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Time.Component (line 120, column 1 - line 125, column 31): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedMillisecond;
      },
      Enum1: function() {
        return $lazy_enumMillisecond(0);
      }
    };
    $lazy_enumMillisecond = /* @__PURE__ */ $runtime_lazy5("enumMillisecond", "Data.Time.Component", function() {
      return {
        succ: function() {
          var $40 = toEnum(boundedEnumMillisecond);
          var $41 = fromEnum(boundedEnumMillisecond);
          return function($42) {
            return $40(function(v) {
              return v + 1 | 0;
            }($41($42)));
          };
        }(),
        pred: function() {
          var $43 = toEnum(boundedEnumMillisecond);
          var $44 = fromEnum(boundedEnumMillisecond);
          return function($45) {
            return $43(function(v) {
              return v - 1 | 0;
            }($44($45)));
          };
        }(),
        Ord0: function() {
          return ordMillisecond;
        }
      };
    });
    boundedEnumHour = {
      cardinality: 24,
      toEnum: function(n) {
        if (n >= 0 && n <= 23) {
          return new Just(n);
        }
        ;
        if (otherwise) {
          return Nothing.value;
        }
        ;
        throw new Error("Failed pattern match at Data.Time.Component (line 32, column 1 - line 37, column 24): " + [n.constructor.name]);
      },
      fromEnum: function(v) {
        return v;
      },
      Bounded0: function() {
        return boundedHour;
      },
      Enum1: function() {
        return $lazy_enumHour(0);
      }
    };
    $lazy_enumHour = /* @__PURE__ */ $runtime_lazy5("enumHour", "Data.Time.Component", function() {
      return {
        succ: function() {
          var $46 = toEnum(boundedEnumHour);
          var $47 = fromEnum(boundedEnumHour);
          return function($48) {
            return $46(function(v) {
              return v + 1 | 0;
            }($47($48)));
          };
        }(),
        pred: function() {
          var $49 = toEnum(boundedEnumHour);
          var $50 = fromEnum(boundedEnumHour);
          return function($51) {
            return $49(function(v) {
              return v - 1 | 0;
            }($50($51)));
          };
        }(),
        Ord0: function() {
          return ordHour;
        }
      };
    });
  }
});

// output/Data.Time/index.js
var Time, second, minute, millisecond, hour;
var init_Data45 = __esm({
  "output/Data.Time/index.js"() {
    init_Control3();
    init_Data13();
    init_Data42();
    init_Data8();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data23();
    init_Data36();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data_Time2();
    init_Data_Time();
    init_Data22();
    Time = /* @__PURE__ */ function() {
      function Time2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      Time2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new Time2(value0, value1, value2, value3);
            };
          };
        };
      };
      return Time2;
    }();
    second = function(v) {
      return v.value2;
    };
    minute = function(v) {
      return v.value1;
    };
    millisecond = function(v) {
      return v.value3;
    };
    hour = function(v) {
      return v.value0;
    };
  }
});

// output/Data.DateTime/index.js
var DateTime, toRecord, diff;
var init_Data46 = __esm({
  "output/Data.DateTime/index.js"() {
    init_foreign68();
    init_Control3();
    init_Control5();
    init_Data13();
    init_Data44();
    init_Data_Date();
    init_Data42();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data45();
    init_Data_Time2();
    init_Data_Time();
    init_Data44();
    init_Data45();
    DateTime = /* @__PURE__ */ function() {
      function DateTime2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DateTime2.create = function(value0) {
        return function(value1) {
          return new DateTime2(value0, value1);
        };
      };
      return DateTime2;
    }();
    toRecord = function(v) {
      return {
        year: fromEnum(boundedEnumYear)(year(v.value0)),
        month: fromEnum(boundedEnumMonth)(month(v.value0)),
        day: fromEnum(boundedEnumDay)(day(v.value0)),
        hour: fromEnum(boundedEnumHour)(hour(v.value1)),
        minute: fromEnum(boundedEnumMinute)(minute(v.value1)),
        second: fromEnum(boundedEnumSecond)(second(v.value1)),
        millisecond: fromEnum(boundedEnumMillisecond)(millisecond(v.value1))
      };
    };
    diff = function(dictDuration) {
      return function(dt1) {
        return function(dt2) {
          return toDuration(dictDuration)(calcDiff2(toRecord(dt1), toRecord(dt2)));
        };
      };
    };
  }
});

// output/Data.DateTime.Instant/index.js
var toDateTime, instant;
var init_Data_DateTime = __esm({
  "output/Data.DateTime.Instant/index.js"() {
    init_foreign66();
    init_Data();
    init_Data13();
    init_Data44();
    init_Data_Date();
    init_Data46();
    init_Data42();
    init_Data15();
    init_Data14();
    init_Data45();
    init_Data_Time2();
    init_Data_Time();
    toDateTime = /* @__PURE__ */ function() {
      var mkDateTime = function(y) {
        return function(mo) {
          return function(d) {
            return function(h) {
              return function(mi) {
                return function(s) {
                  return function(ms) {
                    return new DateTime(canonicalDate(y)(fromJust()(toEnum(boundedEnumMonth)(mo)))(d), new Time(h, mi, s, ms));
                  };
                };
              };
            };
          };
        };
      };
      return toDateTimeImpl(mkDateTime);
    }();
    instant = function(v) {
      if (v >= -86399778816e5 && v <= 8639977881599999) {
        return new Just(v);
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.DateTime.Instant (line 44, column 1 - line 44, column 41): " + [v.constructor.name]);
    };
  }
});

// output/Node.FS/index.js
var init_Node8 = __esm({
  "output/Node.FS/index.js"() {
    init_Data14();
  }
});

// output/Node.FS.Internal/index.js
var mkEffect2;
var init_Node_FS = __esm({
  "output/Node.FS.Internal/index.js"() {
    init_Unsafe();
    mkEffect2 = unsafeCoerce2;
  }
});

// output/Node.FS.Perms/index.js
var init_Node_FS2 = __esm({
  "output/Node.FS.Perms/index.js"() {
    init_Control3();
    init_Data();
    init_Data42();
    init_Data8();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data12();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
  }
});

// output/Node.FS.Stats/foreign.js
function statsMethod(m, s) {
  return s[m]();
}
var import_util2;
var init_foreign69 = __esm({
  "output/Node.FS.Stats/foreign.js"() {
    import_util2 = __toModule(require("util"));
  }
});

// output/Data.JSDate/foreign.js
function now() {
  return new Date();
}
function toInstantImpl(just) {
  return function(nothing) {
    return function(date2) {
      var t = date2.getTime();
      return isNaN(t) ? nothing : just(t);
    };
  };
}
var init_foreign70 = __esm({
  "output/Data.JSDate/foreign.js"() {
  }
});

// output/Data.JSDate/index.js
var toInstant, toDateTime2;
var init_Data47 = __esm({
  "output/Data.JSDate/index.js"() {
    init_foreign70();
    init_Control5();
    init_Data44();
    init_Data_Date();
    init_Data46();
    init_Data_DateTime();
    init_Data42();
    init_Data4();
    init_Data20();
    init_Data37();
    init_Data15();
    init_Data12();
    init_Data14();
    init_Data45();
    init_Data_Time2();
    init_Data_Time();
    init_Foreign();
    init_foreign70();
    toInstant = /* @__PURE__ */ function() {
      return composeKleisliFlipped(bindMaybe)(function($4) {
        return instant(Milliseconds($4));
      })(toInstantImpl(Just.create)(Nothing.value));
    }();
    toDateTime2 = /* @__PURE__ */ map(functorFn)(/* @__PURE__ */ map(functorMaybe)(toDateTime))(toInstant);
  }
});

// output/Node.FS.Stats/index.js
var Stats, isDirectory;
var init_Node_FS3 = __esm({
  "output/Node.FS.Stats/index.js"() {
    init_foreign69();
    init_Data47();
    init_Data15();
    Stats = /* @__PURE__ */ function() {
      function Stats2(value0) {
        this.value0 = value0;
      }
      ;
      Stats2.create = function(value0) {
        return new Stats2(value0);
      };
      return Stats2;
    }();
    isDirectory = function(v) {
      return statsMethod("isDirectory", v.value0);
    };
  }
});

// output/Node.FS.Sync/index.js
var writeTextFile, unlink, readTextFile, exists, appendTextFile;
var init_Node_FS4 = __esm({
  "output/Node.FS.Sync/index.js"() {
    init_foreign65();
    init_Data_DateTime();
    init_Data18();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data41();
    init_Data14();
    init_Effect();
    init_Node6();
    init_Node_Buffer();
    init_Node5();
    init_Node8();
    init_Node_FS();
    init_Node_FS2();
    init_Node_FS3();
    writeTextFile = function(encoding) {
      return function(file) {
        return function(text) {
          return mkEffect2(function(v) {
            return import_fs2.writeFileSync(file, text, {
              encoding: show(showEncoding)(encoding)
            });
          });
        };
      };
    };
    unlink = function(file) {
      return mkEffect2(function(v) {
        return import_fs2.unlinkSync(file);
      });
    };
    readTextFile = function(encoding) {
      return function(file) {
        return mkEffect2(function(v) {
          return import_fs2.readFileSync(file, {
            encoding: show(showEncoding)(encoding)
          });
        });
      };
    };
    exists = function(file) {
      return mkEffect2(function(v) {
        return import_fs2.existsSync(file);
      });
    };
    appendTextFile = function(encoding) {
      return function(file) {
        return function(buff) {
          return mkEffect2(function(v) {
            return import_fs2.appendFileSync(file, buff, {
              encoding: show(showEncoding)(encoding)
            });
          });
        };
      };
    };
  }
});

// output/PscIde/foreign.js
function send(cmd) {
  return function(port) {
    return function(cb) {
      return function(err) {
        return function() {
          var sock = (0, import_net.createConnection)({ host: "127.0.0.1", port }), result2 = "";
          sock.on("data", function(data) {
            result2 += data;
          }).on("end", function() {
            cb(result2)();
          }).on("connect", function() {
            sock.setEncoding("utf8");
            sock.write(cmd + "\n");
          }).on("error", function(e) {
            err(e)();
          });
        };
      };
    };
  };
}
var import_net;
var init_foreign71 = __esm({
  "output/PscIde/foreign.js"() {
    import_net = __toModule(require("net"));
  }
});

// output/Data.Argonaut.Core/foreign.js
function id(x) {
  return x;
}
function stringify(j) {
  return JSON.stringify(j);
}
function _caseJson(isNull3, isBool, isNum, isStr, isArr, isObj, j) {
  if (j == null)
    return isNull3();
  else if (typeof j === "boolean")
    return isBool(j);
  else if (typeof j === "number")
    return isNum(j);
  else if (typeof j === "string")
    return isStr(j);
  else if (Object.prototype.toString.call(j) === "[object Array]")
    return isArr(j);
  else
    return isObj(j);
}
var jsonNull;
var init_foreign72 = __esm({
  "output/Data.Argonaut.Core/foreign.js"() {
    jsonNull = null;
  }
});

// output/Data.Argonaut.Core/index.js
var verbJsonType, toJsonType, jsonSingletonObject, jsonEmptyObject, isJsonType, caseJsonString, toString5, caseJsonObject, toObject, caseJsonNumber, caseJsonNull, isNull2, caseJsonArray, toArray4;
var init_Data_Argonaut = __esm({
  "output/Data.Argonaut.Core/index.js"() {
    init_foreign72();
    init_Data8();
    init_Data2();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Foreign3();
    init_foreign72();
    verbJsonType = function(def) {
      return function(f) {
        return function(g) {
          return g(def)(f);
        };
      };
    };
    toJsonType = /* @__PURE__ */ function() {
      return verbJsonType(Nothing.value)(Just.create);
    }();
    jsonSingletonObject = function(key) {
      return function(val) {
        return id(singleton7(key)(val));
      };
    };
    jsonEmptyObject = /* @__PURE__ */ id(empty5);
    isJsonType = /* @__PURE__ */ verbJsonType(false)(/* @__PURE__ */ $$const(true));
    caseJsonString = function(d) {
      return function(f) {
        return function(j) {
          return _caseJson($$const(d), $$const(d), $$const(d), f, $$const(d), $$const(d), j);
        };
      };
    };
    toString5 = /* @__PURE__ */ toJsonType(caseJsonString);
    caseJsonObject = function(d) {
      return function(f) {
        return function(j) {
          return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), $$const(d), f, j);
        };
      };
    };
    toObject = /* @__PURE__ */ toJsonType(caseJsonObject);
    caseJsonNumber = function(d) {
      return function(f) {
        return function(j) {
          return _caseJson($$const(d), $$const(d), f, $$const(d), $$const(d), $$const(d), j);
        };
      };
    };
    caseJsonNull = function(d) {
      return function(f) {
        return function(j) {
          return _caseJson(f, $$const(d), $$const(d), $$const(d), $$const(d), $$const(d), j);
        };
      };
    };
    isNull2 = /* @__PURE__ */ isJsonType(caseJsonNull);
    caseJsonArray = function(d) {
      return function(f) {
        return function(j) {
          return _caseJson($$const(d), $$const(d), $$const(d), $$const(d), f, $$const(d), j);
        };
      };
    };
    toArray4 = /* @__PURE__ */ toJsonType(caseJsonArray);
  }
});

// output/Data.Argonaut.Decode.Error/index.js
var TypeMismatch2, UnexpectedValue, AtIndex, AtKey, Named, MissingValue, showJsonDecodeError, printJsonDecodeError;
var init_Data_Argonaut_Decode = __esm({
  "output/Data.Argonaut.Decode.Error/index.js"() {
    init_Data_Argonaut();
    init_Data8();
    init_Data_Generic();
    init_Data12();
    init_Data9();
    init_Data14();
    TypeMismatch2 = /* @__PURE__ */ function() {
      function TypeMismatch3(value0) {
        this.value0 = value0;
      }
      ;
      TypeMismatch3.create = function(value0) {
        return new TypeMismatch3(value0);
      };
      return TypeMismatch3;
    }();
    UnexpectedValue = /* @__PURE__ */ function() {
      function UnexpectedValue2(value0) {
        this.value0 = value0;
      }
      ;
      UnexpectedValue2.create = function(value0) {
        return new UnexpectedValue2(value0);
      };
      return UnexpectedValue2;
    }();
    AtIndex = /* @__PURE__ */ function() {
      function AtIndex2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      AtIndex2.create = function(value0) {
        return function(value1) {
          return new AtIndex2(value0, value1);
        };
      };
      return AtIndex2;
    }();
    AtKey = /* @__PURE__ */ function() {
      function AtKey2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      AtKey2.create = function(value0) {
        return function(value1) {
          return new AtKey2(value0, value1);
        };
      };
      return AtKey2;
    }();
    Named = /* @__PURE__ */ function() {
      function Named2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Named2.create = function(value0) {
        return function(value1) {
          return new Named2(value0, value1);
        };
      };
      return Named2;
    }();
    MissingValue = /* @__PURE__ */ function() {
      function MissingValue2() {
      }
      ;
      MissingValue2.value = new MissingValue2();
      return MissingValue2;
    }();
    showJsonDecodeError = {
      show: function(v) {
        if (v instanceof TypeMismatch2) {
          return "(TypeMismatch " + (show(showString)(v.value0) + ")");
        }
        ;
        if (v instanceof UnexpectedValue) {
          return "(UnexpectedValue " + (stringify(v.value0) + ")");
        }
        ;
        if (v instanceof AtIndex) {
          return "(AtIndex " + (show(showInt)(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
        }
        ;
        if (v instanceof AtKey) {
          return "(AtKey " + (show(showString)(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
        }
        ;
        if (v instanceof Named) {
          return "(Named " + (show(showString)(v.value0) + (" " + (show(showJsonDecodeError)(v.value1) + ")")));
        }
        ;
        if (v instanceof MissingValue) {
          return "MissingValue";
        }
        ;
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 24, column 10 - line 30, column 35): " + [v.constructor.name]);
      }
    };
    printJsonDecodeError = function(err) {
      var go = function(v) {
        if (v instanceof TypeMismatch2) {
          return "  Expected value of type '" + (v.value0 + "'.");
        }
        ;
        if (v instanceof UnexpectedValue) {
          return "  Unexpected value " + (stringify(v.value0) + ".");
        }
        ;
        if (v instanceof AtIndex) {
          return "  At array index " + (show(showInt)(v.value0) + (":\n" + go(v.value1)));
        }
        ;
        if (v instanceof AtKey) {
          return "  At object key '" + (v.value0 + ("':\n" + go(v.value1)));
        }
        ;
        if (v instanceof Named) {
          return "  Under '" + (v.value0 + ("':\n" + go(v.value1)));
        }
        ;
        if (v instanceof MissingValue) {
          return "  No value was found.";
        }
        ;
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Error (line 37, column 8 - line 43, column 44): " + [v.constructor.name]);
      };
      return "An error occurred while decoding a JSON value:\n" + go(err);
    };
  }
});

// output/Data.Array.NonEmpty.Internal/foreign.js
var foldr1Impl, foldl1Impl, traverse1Impl;
var init_foreign73 = __esm({
  "output/Data.Array.NonEmpty.Internal/foreign.js"() {
    foldr1Impl = function(f) {
      return function(xs) {
        var acc = xs[xs.length - 1];
        for (var i = xs.length - 2; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
    foldl1Impl = function(f) {
      return function(xs) {
        var acc = xs[0];
        var len = xs.length;
        for (var i = 1; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
    traverse1Impl = function() {
      function Cont(fn) {
        this.fn = fn;
      }
      var emptyList = {};
      var ConsCell = function(head4, tail2) {
        this.head = head4;
        this.tail = tail2;
      };
      function finalCell(head4) {
        return new ConsCell(head4, emptyList);
      }
      function consList(x) {
        return function(xs) {
          return new ConsCell(x, xs);
        };
      }
      function listToArray(list) {
        var arr = [];
        var xs = list;
        while (xs !== emptyList) {
          arr.push(xs.head);
          xs = xs.tail;
        }
        return arr;
      }
      return function(apply3) {
        return function(map2) {
          return function(f) {
            var buildFrom = function(x, ys) {
              return apply3(map2(consList)(f(x)))(ys);
            };
            var go = function(acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last4 = xs[currentLen - 1];
                return new Cont(function() {
                  var built = go(buildFrom(last4, acc), currentLen - 1, xs);
                  return built;
                });
              }
            };
            return function(array) {
              var acc = map2(finalCell)(f(array[array.length - 1]));
              var result2 = go(acc, array.length - 1, array);
              while (result2 instanceof Cont) {
                result2 = result2.fn();
              }
              return map2(listToArray)(result2);
            };
          };
        };
      };
    }();
  }
});

// output/Data.Array.NonEmpty.Internal/index.js
var NonEmptyArray, traversableNonEmptyArray, functorNonEmptyArray, foldableNonEmptyArray, foldable1NonEmptyArray;
var init_Data_Array_NonEmpty = __esm({
  "output/Data.Array.NonEmpty.Internal/index.js"() {
    init_foreign73();
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control7();
    init_Data8();
    init_Data25();
    init_Data28();
    init_Data4();
    init_Data27();
    init_Data12();
    init_Data7();
    init_Data_Semigroup();
    init_Data_Semigroup2();
    init_Data14();
    init_Data29();
    init_Data30();
    init_Data31();
    NonEmptyArray = function(x) {
      return x;
    };
    traversableNonEmptyArray = traversableArray;
    functorNonEmptyArray = functorArray;
    foldableNonEmptyArray = foldableArray;
    foldable1NonEmptyArray = {
      foldMap1: function(dictSemigroup) {
        return foldMap1DefaultL(foldable1NonEmptyArray)(functorNonEmptyArray)(dictSemigroup);
      },
      foldr1: foldr1Impl,
      foldl1: foldl1Impl,
      Foldable0: function() {
        return foldableNonEmptyArray;
      }
    };
  }
});

// output/Data.Array.NonEmpty/index.js
var unsafeFromArray, toArray5, singleton9, fromArray4, foldl12, cons$prime, adaptMaybe, head3, last3, uncons4, toNonEmpty;
var init_Data_Array2 = __esm({
  "output/Data.Array.NonEmpty/index.js"() {
    init_Control5();
    init_Data39();
    init_Data_Array_NonEmpty();
    init_Data24();
    init_Data();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data33();
    init_Data12();
    init_Data7();
    init_Data_Semigroup();
    init_Data22();
    init_Data31();
    init_Unsafe();
    unsafeFromArray = NonEmptyArray;
    toArray5 = function(v) {
      return v;
    };
    singleton9 = function($55) {
      return unsafeFromArray(singleton5($55));
    };
    fromArray4 = function(xs) {
      if (length4(xs) > 0) {
        return new Just(unsafeFromArray(xs));
      }
      ;
      if (otherwise) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 157, column 1 - line 157, column 58): " + [xs.constructor.name]);
    };
    foldl12 = /* @__PURE__ */ foldl1(foldable1NonEmptyArray);
    cons$prime = function(x) {
      return function(xs) {
        return unsafeFromArray(cons2(x)(xs));
      };
    };
    adaptMaybe = function(f) {
      var $70 = fromJust();
      return function($71) {
        return $70(f(toArray5($71)));
      };
    };
    head3 = /* @__PURE__ */ adaptMaybe(head);
    last3 = /* @__PURE__ */ adaptMaybe(last2);
    uncons4 = /* @__PURE__ */ adaptMaybe(uncons2);
    toNonEmpty = function($72) {
      return function(v) {
        return new NonEmpty(v.head, v.tail);
      }(uncons4($72));
    };
  }
});

// output/Data.Set/index.js
var $$Set, union3, toList2, toUnfoldable5, singleton10, semigroupSet, member3, isEmpty3, insert4, fromMap, foldableSet, empty6, fromFoldable5, intersection, monoidSet;
var init_Data48 = __esm({
  "output/Data.Set/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad_Rec();
    init_Control_Monad_ST();
    init_Data39();
    init_Data_Array();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data38();
    init_Data_List();
    init_Data_Map();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data14();
    init_Data32();
    init_Data3();
    $$Set = function(x) {
      return x;
    };
    union3 = function(dictOrd) {
      return function(v) {
        return function(v1) {
          return union2(dictOrd)(v)(v1);
        };
      };
    };
    toList2 = function(v) {
      return keys(v);
    };
    toUnfoldable5 = function(dictUnfoldable) {
      var $70 = toUnfoldable(dictUnfoldable);
      return function($71) {
        return $70(toList2($71));
      };
    };
    singleton10 = function(a) {
      return singleton6(a)(unit);
    };
    semigroupSet = function(dictOrd) {
      return {
        append: union3(dictOrd)
      };
    };
    member3 = function(dictOrd) {
      return function(a) {
        return function(v) {
          return member(dictOrd)(a)(v);
        };
      };
    };
    isEmpty3 = function(v) {
      return isEmpty(v);
    };
    insert4 = function(dictOrd) {
      return function(a) {
        return function(v) {
          return insert(dictOrd)(a)(unit)(v);
        };
      };
    };
    fromMap = $$Set;
    foldableSet = {
      foldMap: function(dictMonoid) {
        return function(f) {
          var $72 = foldMap(foldableList)(dictMonoid)(f);
          return function($73) {
            return $72(toList2($73));
          };
        };
      },
      foldl: function(f) {
        return function(x) {
          var $74 = foldl(foldableList)(f)(x);
          return function($75) {
            return $74(toList2($75));
          };
        };
      },
      foldr: function(f) {
        return function(x) {
          var $76 = foldr(foldableList)(f)(x);
          return function($77) {
            return $76(toList2($77));
          };
        };
      }
    };
    empty6 = empty2;
    fromFoldable5 = function(dictFoldable) {
      return function(dictOrd) {
        return foldl(dictFoldable)(function(m) {
          return function(a) {
            return insert4(dictOrd)(a)(m);
          };
        })(empty6);
      };
    };
    intersection = function(dictOrd) {
      return function(s1) {
        return function(s2) {
          var toArray7 = function() {
            var $78 = fromFoldable2(foldableList);
            return function($79) {
              return $78(toList2($79));
            };
          }();
          var rs = toArray7(s2);
          var rl = length4(rs);
          var ls = toArray7(s1);
          var ll = length4(ls);
          var intersect3 = function(acc) {
            var go = function(l) {
              return function(r) {
                var $65 = l < ll && r < rl;
                if ($65) {
                  var v = compare(dictOrd)(ls[l])(rs[r]);
                  if (v instanceof EQ) {
                    return function __do2() {
                      push(ls[l])(acc)();
                      return new Loop({
                        a: l + 1 | 0,
                        b: r + 1 | 0
                      });
                    };
                  }
                  ;
                  if (v instanceof LT) {
                    return pure(applicativeST)(new Loop({
                      a: l + 1 | 0,
                      b: r
                    }));
                  }
                  ;
                  if (v instanceof GT) {
                    return pure(applicativeST)(new Loop({
                      a: l,
                      b: r + 1 | 0
                    }));
                  }
                  ;
                  throw new Error("Failed pattern match at Data.Set (line 184, column 12 - line 189, column 43): " + [v.constructor.name]);
                }
                ;
                return pure(applicativeST)(new Done(acc));
              };
            };
            return tailRecM2(monadRecST)(go)(0)(0);
          };
          return fromFoldable5(foldableArray)(dictOrd)(bind(bindST)(bind(bindST)(newSTArray)(intersect3))(unsafeFreeze)());
        };
      };
    };
    monoidSet = function(dictOrd) {
      return {
        mempty: empty6,
        Semigroup0: function() {
          return semigroupSet(dictOrd);
        }
      };
    };
  }
});

// output/Data.String.NonEmpty.Internal/index.js
var init_Data_String_NonEmpty = __esm({
  "output/Data.String.NonEmpty.Internal/index.js"() {
    init_Control5();
    init_Data8();
    init_Data25();
    init_Data15();
    init_Data19();
    init_Data12();
    init_Data7();
    init_Data14();
    init_Data_String2();
    init_Data_String3();
    init_Data5();
  }
});

// output/Data.Argonaut.Decode.Decoders/index.js
var getFieldOptional$prime, getField, decodeString, decodeNumber, decodeMaybe, decodeJObject, decodeJArray, decodeInt, decodeForeignObject, decodeArray;
var init_Data_Argonaut_Decode2 = __esm({
  "output/Data.Argonaut.Decode.Decoders/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data_Argonaut();
    init_Data_Argonaut_Decode();
    init_Data39();
    init_Data_Array2();
    init_Data_Array_NonEmpty();
    init_Data24();
    init_Data();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data20();
    init_Data37();
    init_Data38();
    init_Data_List3();
    init_Data_List();
    init_Data_Map();
    init_Data15();
    init_Data33();
    init_Data48();
    init_Data_String5();
    init_Data_String_NonEmpty();
    init_Data29();
    init_Data30();
    init_Data22();
    init_Data3();
    init_Foreign3();
    getFieldOptional$prime = function(decoder) {
      return function(obj) {
        return function(str) {
          var decode = function(json) {
            var $5 = isNull2(json);
            if ($5) {
              return pure(applicativeEither)(Nothing.value);
            }
            ;
            return map(functorEither)(Just.create)(lmap(bifunctorEither)(AtKey.create(str))(decoder(json)));
          };
          return maybe(pure(applicativeEither)(Nothing.value))(decode)(lookup2(str)(obj));
        };
      };
    };
    getField = function(decoder) {
      return function(obj) {
        return function(str) {
          return maybe(new Left(new AtKey(str, MissingValue.value)))(function() {
            var $18 = lmap(bifunctorEither)(AtKey.create(str));
            return function($19) {
              return $18(decoder($19));
            };
          }())(lookup2(str)(obj));
        };
      };
    };
    decodeString = /* @__PURE__ */ function() {
      return caseJsonString(new Left(new TypeMismatch2("String")))(Right.create);
    }();
    decodeNumber = /* @__PURE__ */ function() {
      return caseJsonNumber(new Left(new TypeMismatch2("Number")))(Right.create);
    }();
    decodeMaybe = function(decoder) {
      return function(json) {
        if (isNull2(json)) {
          return pure(applicativeEither)(Nothing.value);
        }
        ;
        if (otherwise) {
          return map(functorEither)(Just.create)(decoder(json));
        }
        ;
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Decoders (line 37, column 1 - line 41, column 38): " + [decoder.constructor.name, json.constructor.name]);
      };
    };
    decodeJObject = /* @__PURE__ */ function() {
      var $20 = note(new TypeMismatch2("Object"));
      return function($21) {
        return $20(toObject($21));
      };
    }();
    decodeJArray = /* @__PURE__ */ function() {
      var $22 = note(new TypeMismatch2("Array"));
      return function($23) {
        return $22(toArray4($23));
      };
    }();
    decodeInt = /* @__PURE__ */ composeKleisliFlipped(bindEither)(/* @__PURE__ */ function() {
      var $54 = note(new TypeMismatch2("Integer"));
      return function($55) {
        return $54(fromNumber($55));
      };
    }())(decodeNumber);
    decodeForeignObject = function(decoder) {
      return composeKleisliFlipped(bindEither)(function() {
        var $56 = lmap(bifunctorEither)(Named.create("ForeignObject"));
        var $57 = traverse(traversableObject)(applicativeEither)(decoder);
        return function($58) {
          return $56($57($58));
        };
      }())(decodeJObject);
    };
    decodeArray = function(decoder) {
      return composeKleisliFlipped(bindEither)(function() {
        var $59 = lmap(bifunctorEither)(Named.create("Array"));
        var $60 = traverseWithIndex(traversableWithIndexArray)(applicativeEither)(function(i) {
          var $62 = lmap(bifunctorEither)(AtIndex.create(i));
          return function($63) {
            return $62(decoder($63));
          };
        });
        return function($61) {
          return $59($60($61));
        };
      }())(decodeJArray);
    };
  }
});

// output/Record.Unsafe.Union/foreign.js
var init_foreign74 = __esm({
  "output/Record.Unsafe.Union/foreign.js"() {
  }
});

// output/Record.Unsafe.Union/index.js
var init_Record_Unsafe = __esm({
  "output/Record.Unsafe.Union/index.js"() {
    init_foreign74();
    init_Data_Function();
    init_foreign74();
  }
});

// output/Record/index.js
var init_Record2 = __esm({
  "output/Record/index.js"() {
    init_Data8();
    init_Data5();
    init_Record();
    init_Record_Unsafe();
    init_Type();
    init_Unsafe();
  }
});

// output/Data.Argonaut.Decode.Class/index.js
var decodeJsonString, decodeJsonJson, decodeJsonInt, decodeJson, decodeJsonMaybe, decodeForeignObject2, decodeArray2;
var init_Data_Argonaut_Decode3 = __esm({
  "output/Data.Argonaut.Decode.Class/index.js"() {
    init_Control5();
    init_Data_Argonaut();
    init_Data_Argonaut_Decode2();
    init_Data_Argonaut_Decode();
    init_Data24();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Data5();
    init_Foreign3();
    init_Record2();
    init_Type();
    decodeJsonString = {
      decodeJson: decodeString
    };
    decodeJsonJson = /* @__PURE__ */ function() {
      return {
        decodeJson: Right.create
      };
    }();
    decodeJsonInt = {
      decodeJson: decodeInt
    };
    decodeJson = function(dict) {
      return dict.decodeJson;
    };
    decodeJsonMaybe = function(dictDecodeJson) {
      return {
        decodeJson: decodeMaybe(decodeJson(dictDecodeJson))
      };
    };
    decodeForeignObject2 = function(dictDecodeJson) {
      return {
        decodeJson: decodeForeignObject(decodeJson(dictDecodeJson))
      };
    };
    decodeArray2 = function(dictDecodeJson) {
      return {
        decodeJson: decodeArray(decodeJson(dictDecodeJson))
      };
    };
  }
});

// output/Data.Argonaut.Encode.Encoders/index.js
var extend2, encodeString, encodeMaybe, encodeInt, encodeBoolean, encodeArray, assoc;
var init_Data_Argonaut_Encode = __esm({
  "output/Data.Argonaut.Encode.Encoders/index.js"() {
    init_Data_Argonaut();
    init_Data39();
    init_Data_Array2();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data38();
    init_Data_List3();
    init_Data_List();
    init_Data_Map();
    init_Data15();
    init_Data48();
    init_Data_String5();
    init_Data_String2();
    init_Data_String_NonEmpty();
    init_Data22();
    init_Data32();
    init_Data6();
    init_Foreign3();
    extend2 = function(encoder) {
      return function(v) {
        var $32 = caseJsonObject(jsonSingletonObject(v.value0)(v.value1))(function() {
          var $34 = insert2(v.value0)(v.value1);
          return function($35) {
            return id($34($35));
          };
        }());
        return function($33) {
          return $32(encoder($33));
        };
      };
    };
    encodeString = id;
    encodeMaybe = function(encoder) {
      return function(v) {
        if (v instanceof Nothing) {
          return jsonNull;
        }
        ;
        if (v instanceof Just) {
          return encoder(v.value0);
        }
        ;
        throw new Error("Failed pattern match at Data.Argonaut.Encode.Encoders (line 31, column 23 - line 33, column 22): " + [v.constructor.name]);
      };
    };
    encodeInt = function($48) {
      return id(toNumber($48));
    };
    encodeBoolean = id;
    encodeArray = function(encoder) {
      var $53 = map(functorArray)(encoder);
      return function($54) {
        return id($53($54));
      };
    };
    assoc = function(encoder) {
      return function(k) {
        var $59 = Tuple.create(k);
        return function($60) {
          return $59(encoder($60));
        };
      };
    };
  }
});

// output/Data.Argonaut.Encode.Class/index.js
var encodeJsonJson, encodeJsonJString, encodeJsonJBoolean, encodeJsonInt, encodeJson, encodeJsonArray, encodeJsonMaybe;
var init_Data_Argonaut_Encode2 = __esm({
  "output/Data.Argonaut.Encode.Class/index.js"() {
    init_Control2();
    init_Data_Argonaut();
    init_Data_Argonaut_Encode();
    init_Data5();
    init_Foreign3();
    init_Record2();
    init_Type();
    encodeJsonJson = {
      encodeJson: /* @__PURE__ */ identity(categoryFn)
    };
    encodeJsonJString = {
      encodeJson: encodeString
    };
    encodeJsonJBoolean = {
      encodeJson: encodeBoolean
    };
    encodeJsonInt = {
      encodeJson: encodeInt
    };
    encodeJson = function(dict) {
      return dict.encodeJson;
    };
    encodeJsonArray = function(dictEncodeJson) {
      return {
        encodeJson: encodeArray(encodeJson(dictEncodeJson))
      };
    };
    encodeJsonMaybe = function(dictEncodeJson) {
      return {
        encodeJson: encodeMaybe(encodeJson(dictEncodeJson))
      };
    };
  }
});

// output/Data.Argonaut.Decode.Combinators/index.js
var getFieldOptional$prime2, getField2;
var init_Data_Argonaut_Decode4 = __esm({
  "output/Data.Argonaut.Decode.Combinators/index.js"() {
    init_Data_Argonaut_Decode3();
    init_Data_Argonaut_Decode2();
    init_Data16();
    init_Data4();
    init_Data15();
    getFieldOptional$prime2 = function(dictDecodeJson) {
      return getFieldOptional$prime(decodeJson(dictDecodeJson));
    };
    getField2 = function(dictDecodeJson) {
      return getField(decodeJson(dictDecodeJson));
    };
  }
});

// output/Data.Argonaut.Parser/foreign.js
function _jsonParser(fail3, succ2, s) {
  try {
    return succ2(JSON.parse(s));
  } catch (e) {
    return fail3(e.message);
  }
}
var init_foreign75 = __esm({
  "output/Data.Argonaut.Parser/foreign.js"() {
  }
});

// output/Data.Argonaut.Parser/index.js
var jsonParser;
var init_Data_Argonaut2 = __esm({
  "output/Data.Argonaut.Parser/index.js"() {
    init_foreign75();
    init_Data16();
    jsonParser = function(j) {
      return _jsonParser(Left.create, Right.create, j);
    };
  }
});

// output/Data.Argonaut.Decode.Parser/index.js
var parseJson;
var init_Data_Argonaut_Decode5 = __esm({
  "output/Data.Argonaut.Decode.Parser/index.js"() {
    init_Data_Argonaut_Decode();
    init_Data_Argonaut2();
    init_Data24();
    parseJson = /* @__PURE__ */ function() {
      var $1 = lmap(bifunctorEither)(function(v) {
        return new TypeMismatch2("JSON");
      });
      return function($2) {
        return $1(jsonParser($2));
      };
    }();
  }
});

// output/Data.Argonaut.Encode.Combinators/index.js
var extend3, assoc2;
var init_Data_Argonaut_Encode3 = __esm({
  "output/Data.Argonaut.Encode.Combinators/index.js"() {
    init_Data_Argonaut_Encode2();
    init_Data_Argonaut_Encode();
    extend3 = function(dictEncodeJson) {
      return extend2(encodeJson(dictEncodeJson));
    };
    assoc2 = function(dictEncodeJson) {
      return assoc(encodeJson(dictEncodeJson));
    };
  }
});

// output/PscIde.Command/index.js
var Package, Ident, SourceSpan, TypePosition, NSValue, NSType, NSKind, ModuleList, Message, Flex, Distance, LoadedModules, Imports, AvailableModules, Implicit, Explicit, Hiding, AddImplicitImport, AddQualifiedImport, AddImport, DeclValue, DeclType, DeclTypeSynonym, DeclDataConstructor, DeclTypeClass, DeclValueOperator, DeclTypeOperator, DeclModule, ExactFilter, PrefixFilter, ModuleFilter, NamespaceFilter, DeclarationFilter, DependencyFilter, SuccessFile, SuccessText, MultipleResults, RebuildResult, JS, JSSourceMap, CoreFn, Other, Cwd, Ls, Quit, Reset, Load, Complete, Pursuit, Type, AddClause, CaseSplit, ImportCmd, RebuildCmd, Usages, unwrapResponse, showPursuitType, jsonSingletonObject$prime, filterWrapper, encodePursuitType, encodeNamespace, encodeMaybeNull, encodeMatcher, encodeImportCommand, encodeCompletionOptions, encodeCodegenTarget, decodeSourceSpan$prime, decodeTypePosition, decodeSourceSpan, decodeModuleList, decodeMessage, decodeImport, decodeImportList, declarationTypeToString, encodeFilter, declarationTypeFromString, decodeTypeInfo, decodeImportResult, decodeRebuildError, decodeRebuildResult, commandWrapper, encodeCommand;
var init_PscIde = __esm({
  "output/PscIde.Command/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Data_Argonaut();
    init_Data_Argonaut_Decode3();
    init_Data_Argonaut_Decode4();
    init_Data_Argonaut_Decode();
    init_Data_Argonaut_Decode5();
    init_Data_Argonaut_Encode2();
    init_Data_Argonaut_Encode3();
    init_Data39();
    init_Data24();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data14();
    init_Data_String3();
    Package = /* @__PURE__ */ function() {
      function Package2() {
      }
      ;
      Package2.value = new Package2();
      return Package2;
    }();
    Ident = /* @__PURE__ */ function() {
      function Ident2() {
      }
      ;
      Ident2.value = new Ident2();
      return Ident2;
    }();
    SourceSpan = function(x) {
      return x;
    };
    TypePosition = function(x) {
      return x;
    };
    NSValue = /* @__PURE__ */ function() {
      function NSValue2() {
      }
      ;
      NSValue2.value = new NSValue2();
      return NSValue2;
    }();
    NSType = /* @__PURE__ */ function() {
      function NSType2() {
      }
      ;
      NSType2.value = new NSType2();
      return NSType2;
    }();
    NSKind = /* @__PURE__ */ function() {
      function NSKind2() {
      }
      ;
      NSKind2.value = new NSKind2();
      return NSKind2;
    }();
    ModuleList = function(x) {
      return x;
    };
    Message = function(x) {
      return x;
    };
    Flex = /* @__PURE__ */ function() {
      function Flex2(value0) {
        this.value0 = value0;
      }
      ;
      Flex2.create = function(value0) {
        return new Flex2(value0);
      };
      return Flex2;
    }();
    Distance = /* @__PURE__ */ function() {
      function Distance2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Distance2.create = function(value0) {
        return function(value1) {
          return new Distance2(value0, value1);
        };
      };
      return Distance2;
    }();
    LoadedModules = /* @__PURE__ */ function() {
      function LoadedModules2() {
      }
      ;
      LoadedModules2.value = new LoadedModules2();
      return LoadedModules2;
    }();
    Imports = /* @__PURE__ */ function() {
      function Imports2(value0) {
        this.value0 = value0;
      }
      ;
      Imports2.create = function(value0) {
        return new Imports2(value0);
      };
      return Imports2;
    }();
    AvailableModules = /* @__PURE__ */ function() {
      function AvailableModules2() {
      }
      ;
      AvailableModules2.value = new AvailableModules2();
      return AvailableModules2;
    }();
    Implicit = /* @__PURE__ */ function() {
      function Implicit2() {
      }
      ;
      Implicit2.value = new Implicit2();
      return Implicit2;
    }();
    Explicit = /* @__PURE__ */ function() {
      function Explicit2(value0) {
        this.value0 = value0;
      }
      ;
      Explicit2.create = function(value0) {
        return new Explicit2(value0);
      };
      return Explicit2;
    }();
    Hiding = /* @__PURE__ */ function() {
      function Hiding2(value0) {
        this.value0 = value0;
      }
      ;
      Hiding2.create = function(value0) {
        return new Hiding2(value0);
      };
      return Hiding2;
    }();
    AddImplicitImport = /* @__PURE__ */ function() {
      function AddImplicitImport2(value0) {
        this.value0 = value0;
      }
      ;
      AddImplicitImport2.create = function(value0) {
        return new AddImplicitImport2(value0);
      };
      return AddImplicitImport2;
    }();
    AddQualifiedImport = /* @__PURE__ */ function() {
      function AddQualifiedImport2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      AddQualifiedImport2.create = function(value0) {
        return function(value1) {
          return new AddQualifiedImport2(value0, value1);
        };
      };
      return AddQualifiedImport2;
    }();
    AddImport = /* @__PURE__ */ function() {
      function AddImport2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      AddImport2.create = function(value0) {
        return function(value1) {
          return new AddImport2(value0, value1);
        };
      };
      return AddImport2;
    }();
    DeclValue = /* @__PURE__ */ function() {
      function DeclValue3() {
      }
      ;
      DeclValue3.value = new DeclValue3();
      return DeclValue3;
    }();
    DeclType = /* @__PURE__ */ function() {
      function DeclType3() {
      }
      ;
      DeclType3.value = new DeclType3();
      return DeclType3;
    }();
    DeclTypeSynonym = /* @__PURE__ */ function() {
      function DeclTypeSynonym2() {
      }
      ;
      DeclTypeSynonym2.value = new DeclTypeSynonym2();
      return DeclTypeSynonym2;
    }();
    DeclDataConstructor = /* @__PURE__ */ function() {
      function DeclDataConstructor2() {
      }
      ;
      DeclDataConstructor2.value = new DeclDataConstructor2();
      return DeclDataConstructor2;
    }();
    DeclTypeClass = /* @__PURE__ */ function() {
      function DeclTypeClass2() {
      }
      ;
      DeclTypeClass2.value = new DeclTypeClass2();
      return DeclTypeClass2;
    }();
    DeclValueOperator = /* @__PURE__ */ function() {
      function DeclValueOperator2() {
      }
      ;
      DeclValueOperator2.value = new DeclValueOperator2();
      return DeclValueOperator2;
    }();
    DeclTypeOperator = /* @__PURE__ */ function() {
      function DeclTypeOperator2() {
      }
      ;
      DeclTypeOperator2.value = new DeclTypeOperator2();
      return DeclTypeOperator2;
    }();
    DeclModule = /* @__PURE__ */ function() {
      function DeclModule2() {
      }
      ;
      DeclModule2.value = new DeclModule2();
      return DeclModule2;
    }();
    ExactFilter = /* @__PURE__ */ function() {
      function ExactFilter2(value0) {
        this.value0 = value0;
      }
      ;
      ExactFilter2.create = function(value0) {
        return new ExactFilter2(value0);
      };
      return ExactFilter2;
    }();
    PrefixFilter = /* @__PURE__ */ function() {
      function PrefixFilter2(value0) {
        this.value0 = value0;
      }
      ;
      PrefixFilter2.create = function(value0) {
        return new PrefixFilter2(value0);
      };
      return PrefixFilter2;
    }();
    ModuleFilter = /* @__PURE__ */ function() {
      function ModuleFilter2(value0) {
        this.value0 = value0;
      }
      ;
      ModuleFilter2.create = function(value0) {
        return new ModuleFilter2(value0);
      };
      return ModuleFilter2;
    }();
    NamespaceFilter = /* @__PURE__ */ function() {
      function NamespaceFilter2(value0) {
        this.value0 = value0;
      }
      ;
      NamespaceFilter2.create = function(value0) {
        return new NamespaceFilter2(value0);
      };
      return NamespaceFilter2;
    }();
    DeclarationFilter = /* @__PURE__ */ function() {
      function DeclarationFilter2(value0) {
        this.value0 = value0;
      }
      ;
      DeclarationFilter2.create = function(value0) {
        return new DeclarationFilter2(value0);
      };
      return DeclarationFilter2;
    }();
    DependencyFilter = /* @__PURE__ */ function() {
      function DependencyFilter2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DependencyFilter2.create = function(value0) {
        return function(value1) {
          return new DependencyFilter2(value0, value1);
        };
      };
      return DependencyFilter2;
    }();
    SuccessFile = /* @__PURE__ */ function() {
      function SuccessFile2(value0) {
        this.value0 = value0;
      }
      ;
      SuccessFile2.create = function(value0) {
        return new SuccessFile2(value0);
      };
      return SuccessFile2;
    }();
    SuccessText = /* @__PURE__ */ function() {
      function SuccessText2(value0) {
        this.value0 = value0;
      }
      ;
      SuccessText2.create = function(value0) {
        return new SuccessText2(value0);
      };
      return SuccessText2;
    }();
    MultipleResults = /* @__PURE__ */ function() {
      function MultipleResults2(value0) {
        this.value0 = value0;
      }
      ;
      MultipleResults2.create = function(value0) {
        return new MultipleResults2(value0);
      };
      return MultipleResults2;
    }();
    RebuildResult = function(x) {
      return x;
    };
    JS = /* @__PURE__ */ function() {
      function JS2() {
      }
      ;
      JS2.value = new JS2();
      return JS2;
    }();
    JSSourceMap = /* @__PURE__ */ function() {
      function JSSourceMap2() {
      }
      ;
      JSSourceMap2.value = new JSSourceMap2();
      return JSSourceMap2;
    }();
    CoreFn = /* @__PURE__ */ function() {
      function CoreFn2() {
      }
      ;
      CoreFn2.value = new CoreFn2();
      return CoreFn2;
    }();
    Other = /* @__PURE__ */ function() {
      function Other2(value0) {
        this.value0 = value0;
      }
      ;
      Other2.create = function(value0) {
        return new Other2(value0);
      };
      return Other2;
    }();
    Cwd = /* @__PURE__ */ function() {
      function Cwd2() {
      }
      ;
      Cwd2.value = new Cwd2();
      return Cwd2;
    }();
    Ls = /* @__PURE__ */ function() {
      function Ls2(value0) {
        this.value0 = value0;
      }
      ;
      Ls2.create = function(value0) {
        return new Ls2(value0);
      };
      return Ls2;
    }();
    Quit = /* @__PURE__ */ function() {
      function Quit2() {
      }
      ;
      Quit2.value = new Quit2();
      return Quit2;
    }();
    Reset = /* @__PURE__ */ function() {
      function Reset2() {
      }
      ;
      Reset2.value = new Reset2();
      return Reset2;
    }();
    Load = /* @__PURE__ */ function() {
      function Load2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Load2.create = function(value0) {
        return function(value1) {
          return new Load2(value0, value1);
        };
      };
      return Load2;
    }();
    Complete = /* @__PURE__ */ function() {
      function Complete2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      Complete2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new Complete2(value0, value1, value2, value3);
            };
          };
        };
      };
      return Complete2;
    }();
    Pursuit = /* @__PURE__ */ function() {
      function Pursuit2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Pursuit2.create = function(value0) {
        return function(value1) {
          return new Pursuit2(value0, value1);
        };
      };
      return Pursuit2;
    }();
    Type = /* @__PURE__ */ function() {
      function Type3(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      Type3.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new Type3(value0, value1, value2);
          };
        };
      };
      return Type3;
    }();
    AddClause = /* @__PURE__ */ function() {
      function AddClause2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      AddClause2.create = function(value0) {
        return function(value1) {
          return new AddClause2(value0, value1);
        };
      };
      return AddClause2;
    }();
    CaseSplit = /* @__PURE__ */ function() {
      function CaseSplit2(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
      }
      ;
      CaseSplit2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return function(value4) {
                return new CaseSplit2(value0, value1, value2, value3, value4);
              };
            };
          };
        };
      };
      return CaseSplit2;
    }();
    ImportCmd = /* @__PURE__ */ function() {
      function ImportCmd2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      ImportCmd2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new ImportCmd2(value0, value1, value2, value3);
            };
          };
        };
      };
      return ImportCmd2;
    }();
    RebuildCmd = /* @__PURE__ */ function() {
      function RebuildCmd2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      RebuildCmd2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new RebuildCmd2(value0, value1, value2);
          };
        };
      };
      return RebuildCmd2;
    }();
    Usages = /* @__PURE__ */ function() {
      function Usages2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      Usages2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new Usages2(value0, value1, value2);
          };
        };
      };
      return Usages2;
    }();
    unwrapResponse = function(dictDecodeJson) {
      return function(dictDecodeJson1) {
        return function(s) {
          return lmap(bifunctorEither)(printJsonDecodeError)(bind(bindEither)(parseJson(s))(function(json) {
            return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
              return bind(bindEither)(getField2(decodeJsonString)(o)("resultType"))(function(resultType) {
                if (resultType === "success") {
                  return bind(bindEither)(getField2(dictDecodeJson1)(o)("result"))(function(result2) {
                    return pure(applicativeEither)(new Right(result2));
                  });
                }
                ;
                return bind(bindEither)(getField2(dictDecodeJson)(o)("result"))(function(result2) {
                  return pure(applicativeEither)(new Left(result2));
                });
              });
            });
          }));
        };
      };
    };
    showPursuitType = {
      show: function(v) {
        if (v instanceof Package) {
          return "package";
        }
        ;
        if (v instanceof Ident) {
          return "completion";
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 54, column 1 - line 56, column 30): " + [v.constructor.name]);
      }
    };
    jsonSingletonObject$prime = function(dictEncodeJson) {
      return function(s) {
        return function(o) {
          return jsonSingletonObject(s)(encodeJson(dictEncodeJson)(o));
        };
      };
    };
    filterWrapper = function(dictEncodeJson) {
      return function(f) {
        return function(q) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("filter")(f))(extend3(encodeJsonJson)(assoc2(dictEncodeJson)("params")(q))(jsonEmptyObject));
        };
      };
    };
    encodePursuitType = {
      encodeJson: /* @__PURE__ */ function() {
        var $93 = encodeJson(encodeJsonJString);
        var $94 = show(showPursuitType);
        return function($95) {
          return $93($94($95));
        };
      }()
    };
    encodeNamespace = {
      encodeJson: function(v) {
        if (v instanceof NSValue) {
          return id("value");
        }
        ;
        if (v instanceof NSType) {
          return id("type");
        }
        ;
        if (v instanceof NSKind) {
          return id("kind");
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 277, column 1 - line 280, column 40): " + [v.constructor.name]);
      }
    };
    encodeMaybeNull = function(dictEncodeJson) {
      return maybe(jsonNull)(encodeJson(dictEncodeJson));
    };
    encodeMatcher = {
      encodeJson: function(v) {
        if (v instanceof Flex) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("matcher")("flex"))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("params")(jsonSingletonObject$prime(encodeJsonJString)("search")(v.value0)))(jsonEmptyObject));
        }
        ;
        if (v instanceof Distance) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("matcher")("distance"))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("params")(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("search")(v.value0))(extend3(encodeJsonJson)(assoc2(encodeJsonInt)("maximumDistance")(v.value1))(jsonEmptyObject))))(jsonEmptyObject));
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 65, column 1 - line 77, column 23): " + [v.constructor.name]);
      }
    };
    encodeImportCommand = {
      encodeJson: function(v) {
        if (v instanceof AddImplicitImport) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("importCommand")("addImplicitImport"))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("module")(encodeJson(encodeJsonJString)(v.value0)))(jsonEmptyObject));
        }
        ;
        if (v instanceof AddQualifiedImport) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("importCommand")("addQualifiedImport"))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("module")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("qualifier")(encodeJson(encodeJsonJString)(v.value1)))(jsonEmptyObject)));
        }
        ;
        if (v instanceof AddImport) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("importCommand")("addImport"))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("identifier")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("qualifier")(encodeJson(encodeJsonMaybe(encodeJsonJString))(v.value1)))(jsonEmptyObject)));
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 261, column 1 - line 275, column 23): " + [v.constructor.name]);
      }
    };
    encodeCompletionOptions = {
      encodeJson: function(v) {
        return extend3(encodeJsonJson)(assoc2(encodeJsonJson)("maxResults")(encodeMaybeNull(encodeJsonInt)(v.maxResults)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("groupReexports")(encodeJson(encodeJsonJBoolean)(v.groupReexports)))(jsonEmptyObject));
      }
    };
    encodeCodegenTarget = {
      encodeJson: function(v) {
        if (v instanceof JS) {
          return id("js");
        }
        ;
        if (v instanceof JSSourceMap) {
          return id("sourcemaps");
        }
        ;
        if (v instanceof CoreFn) {
          return id("corefn");
        }
        ;
        if (v instanceof Other) {
          return id(v.value0);
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 282, column 1 - line 286, column 38): " + [v.constructor.name]);
      }
    };
    decodeSourceSpan$prime = function(json) {
      return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
        return bind(bindEither)(getField2(decodeJsonString)(o)("name"))(function(name2) {
          return bind(bindEither)(getField2(decodeArray2(decodeJsonInt))(o)("start"))(function(start) {
            return bind(bindEither)(getField2(decodeArray2(decodeJsonInt))(o)("end"))(function(end2) {
              if (start.length === 2 && end2.length === 2) {
                return new Right({
                  name: name2,
                  start: {
                    line: start[0],
                    column: start[1]
                  },
                  end: {
                    line: end2[0],
                    column: end2[1]
                  }
                });
              }
              ;
              return new Left(new TypeMismatch2("Array"));
            });
          });
        });
      });
    };
    decodeTypePosition = {
      decodeJson: function(json) {
        return map(functorEither)(TypePosition)(decodeSourceSpan$prime(json));
      }
    };
    decodeSourceSpan = {
      decodeJson: function(json) {
        return map(functorEither)(SourceSpan)(decodeSourceSpan$prime(json));
      }
    };
    decodeModuleList = {
      decodeJson: function(json) {
        return map(functorEither)(ModuleList)(decodeJson(decodeArray2(decodeJsonString))(json));
      }
    };
    decodeMessage = {
      decodeJson: function(json) {
        return maybe(new Left(new TypeMismatch2("String")))(function($96) {
          return Right.create(Message($96));
        })(toString5(json));
      }
    };
    decodeImport = {
      decodeJson: function(json) {
        return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
          return bind(bindEither)(getField2(decodeJsonString)(o)("module"))(function(moduleName) {
            return bind(bindEither)(getField2(decodeJsonString)(o)("importType"))(function(importType) {
              return bind(bindEither)(alt(altEither)(map(functorEither)(Just.create)(getField2(decodeJsonString)(o)("qualifier")))(pure(applicativeEither)(Nothing.value)))(function(q) {
                if (importType === "implicit") {
                  return pure(applicativeEither)({
                    moduleName,
                    importType: Implicit.value,
                    qualifier: q
                  });
                }
                ;
                if (importType === "explicit") {
                  return bind(bindEither)(getField2(decodeArray2(decodeJsonString))(o)("identifiers"))(function(identifiers) {
                    return pure(applicativeEither)({
                      moduleName,
                      importType: new Explicit(identifiers),
                      qualifier: q
                    });
                  });
                }
                ;
                if (importType === "hiding") {
                  return bind(bindEither)(getField2(decodeArray2(decodeJsonString))(o)("identifiers"))(function(identifiers) {
                    return pure(applicativeEither)({
                      moduleName,
                      importType: new Hiding(identifiers),
                      qualifier: q
                    });
                  });
                }
                ;
                return new Left(new TypeMismatch2("ImportType"));
              });
            });
          });
        });
      }
    };
    decodeImportList = {
      decodeJson: function(json) {
        var decodeModuleNameBug = function(moduleName) {
          return map(functorEither)(joinWith("."))(decodeJson(decodeArray2(decodeJsonString))(moduleName));
        };
        var decodeObject = bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
          return bind(bindEither)(getField2(decodeJsonJson)(o)("moduleName"))(function(moduleNameField) {
            return bind(bindEither)(alt(altEither)(decodeModuleNameBug(moduleNameField))(decodeJson(decodeJsonString)(moduleNameField)))(function(moduleName) {
              return bind(bindEither)(getField2(decodeArray2(decodeImport))(o)("imports"))(function(imports) {
                return pure(applicativeEither)({
                  moduleName: new Just(moduleName),
                  imports
                });
              });
            });
          });
        });
        var decodeArray3 = bind(bindEither)(decodeJson(decodeArray2(decodeImport))(json))(function(imports) {
          return pure(applicativeEither)({
            moduleName: Nothing.value,
            imports
          });
        });
        return alt(altEither)(decodeObject)(decodeArray3);
      }
    };
    declarationTypeToString = function(v) {
      if (v instanceof DeclValue) {
        return "value";
      }
      ;
      if (v instanceof DeclType) {
        return "type";
      }
      ;
      if (v instanceof DeclTypeSynonym) {
        return "synonym";
      }
      ;
      if (v instanceof DeclDataConstructor) {
        return "dataconstructor";
      }
      ;
      if (v instanceof DeclTypeClass) {
        return "typeclass";
      }
      ;
      if (v instanceof DeclValueOperator) {
        return "valueoperator";
      }
      ;
      if (v instanceof DeclTypeOperator) {
        return "typeoperator";
      }
      ;
      if (v instanceof DeclModule) {
        return "module";
      }
      ;
      throw new Error("Failed pattern match at PscIde.Command (line 167, column 27 - line 175, column 25): " + [v.constructor.name]);
    };
    encodeFilter = {
      encodeJson: function(v) {
        if (v instanceof ExactFilter) {
          return filterWrapper(encodeJsonJson)("exact")(jsonSingletonObject$prime(encodeJsonJString)("search")(v.value0));
        }
        ;
        if (v instanceof PrefixFilter) {
          return filterWrapper(encodeJsonJson)("prefix")(jsonSingletonObject$prime(encodeJsonJString)("search")(v.value0));
        }
        ;
        if (v instanceof ModuleFilter) {
          return filterWrapper(encodeJsonJson)("modules")(jsonSingletonObject$prime(encodeJsonArray(encodeJsonJString))("modules")(v.value0));
        }
        ;
        if (v instanceof NamespaceFilter) {
          return filterWrapper(encodeJsonJson)("namespace")(jsonSingletonObject$prime(encodeJsonArray(encodeNamespace))("namespaces")(v.value0));
        }
        ;
        if (v instanceof DeclarationFilter) {
          return filterWrapper(encodeJsonArray(encodeJsonJString))("declarations")(map(functorArray)(declarationTypeToString)(v.value0));
        }
        ;
        if (v instanceof DependencyFilter) {
          return filterWrapper(encodeJsonJson)("dependencies")(extend3(encodeJsonJson)(assoc2(encodeJsonMaybe(encodeJsonJString))("qualifier")(v.value0))(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("moduleText")(v.value1))(jsonEmptyObject)));
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 96, column 1 - line 108, column 109): " + [v.constructor.name]);
      }
    };
    declarationTypeFromString = function(v) {
      if (v === "value") {
        return new Just(DeclValue.value);
      }
      ;
      if (v === "type") {
        return new Just(DeclType.value);
      }
      ;
      if (v === "synonym") {
        return new Just(DeclTypeSynonym.value);
      }
      ;
      if (v === "dataconstructor") {
        return new Just(DeclDataConstructor.value);
      }
      ;
      if (v === "typeclass") {
        return new Just(DeclTypeClass.value);
      }
      ;
      if (v === "valueoperator") {
        return new Just(DeclValueOperator.value);
      }
      ;
      if (v === "typeoperator") {
        return new Just(DeclTypeOperator.value);
      }
      ;
      if (v === "module") {
        return new Just(DeclModule.value);
      }
      ;
      return Nothing.value;
    };
    decodeTypeInfo = {
      decodeJson: function(json) {
        var getFieldMaybe = function(dictDecodeJson) {
          return function(o) {
            return function(f) {
              return new Right(either($$const(Nothing.value))(Just.create)(getField2(dictDecodeJson)(o)(f)));
            };
          };
        };
        return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
          return bind(bindEither)(getField2(decodeJsonString)(o)("identifier"))(function(identifier) {
            return bind(bindEither)(getField2(decodeJsonString)(o)("type"))(function(type$prime2) {
              return bind(bindEither)(getField2(decodeJsonString)(o)("module"))(function(module$prime) {
                return bind(bindEither)(getFieldMaybe(decodeTypePosition)(o)("definedAt"))(function(definedAt) {
                  return bind(bindEither)(getFieldMaybe(decodeJsonString)(o)("expandedType"))(function(expandedType) {
                    return bind(bindEither)(getFieldMaybe(decodeJsonString)(o)("documentation"))(function(documentation) {
                      return bind(bindEither)(getFieldMaybe(decodeJsonString)(o)("declarationType"))(function(declarationTypeStr) {
                        return bind(bindEither)(new Right(either($$const([]))(identity(categoryFn))(getField2(decodeArray2(decodeJsonString))(o)("exportedFrom"))))(function(exportedFrom) {
                          return pure(applicativeEither)({
                            identifier,
                            "type'": type$prime2,
                            "module'": module$prime,
                            definedAt,
                            expandedType,
                            documentation,
                            exportedFrom,
                            declarationType: bindFlipped(bindMaybe)(declarationTypeFromString)(declarationTypeStr)
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      }
    };
    decodeImportResult = {
      decodeJson: function(json) {
        return alt(altEither)(map(functorEither)(SuccessText.create)(decodeJson(decodeArray2(decodeJsonString))(json)))(alt(altEither)(map(functorEither)(SuccessFile.create)(decodeJson(decodeMessage)(json)))(alt(altEither)(map(functorEither)(MultipleResults.create)(decodeJson(decodeArray2(decodeTypeInfo))(json)))(new Left(new TypeMismatch2("ImportResult")))));
      }
    };
    decodeRebuildError = {
      decodeJson: function(json) {
        return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
          return bind(bindEither)(getField2(decodeJsonString)(o)("message"))(function(message2) {
            return bind(bindEither)(getField2(decodeJsonString)(o)("errorCode"))(function(errorCode) {
              return bind(bindEither)(getField2(decodeJsonString)(o)("errorLink"))(function(errorLink) {
                return bind(bindEither)(getField2(decodeJsonMaybe(decodeJsonString))(o)("moduleName"))(function(moduleName) {
                  return bind(bindEither)(getField2(decodeJsonMaybe(decodeJsonString))(o)("filename"))(function(filename) {
                    return bind(bindEither)(pure(applicativeEither)(hush(bind(bindEither)(getField2(decodeForeignObject2(decodeJsonJson))(o)("position"))(function(p) {
                      return apply(applyEither)(apply(applyEither)(apply(applyEither)(map(functorEither)(function(v) {
                        return function(v1) {
                          return function(v2) {
                            return function(v32) {
                              return {
                                startLine: v,
                                startColumn: v1,
                                endLine: v2,
                                endColumn: v32
                              };
                            };
                          };
                        };
                      })(getField2(decodeJsonInt)(p)("startLine")))(getField2(decodeJsonInt)(p)("startColumn")))(getField2(decodeJsonInt)(p)("endLine")))(getField2(decodeJsonInt)(p)("endColumn"));
                    }))))(function(position) {
                      return bind(bindEither)(pure(applicativeEither)(hush(bind(bindEither)(getField2(decodeForeignObject2(decodeJsonJson))(o)("pursIde"))(function(pio) {
                        return bind(bindEither)(getField2(decodeJsonString)(pio)("name"))(function(name2) {
                          return bind(bindEither)(getField2(decodeArray2(decodeTypeInfo))(pio)("completions"))(function(completions) {
                            return pure(applicativeEither)({
                              name: name2,
                              completions
                            });
                          });
                        });
                      }))))(function(pursIde) {
                        return bind(bindEither)(pure(applicativeEither)(hush(bind(bindEither)(getField2(decodeForeignObject2(decodeJsonJson))(o)("suggestion"))(function(so) {
                          return bind(bindEither)(getField2(decodeJsonString)(so)("replacement"))(function(replacement) {
                            return bind(bindEither)(getField2(decodeForeignObject2(decodeJsonJson))(so)("replaceRange"))(function(rr) {
                              return bind(bindEither)(pure(applicativeEither)(hush(apply(applyEither)(apply(applyEither)(apply(applyEither)(map(functorEither)(function(v) {
                                return function(v1) {
                                  return function(v2) {
                                    return function(v32) {
                                      return {
                                        startLine: v,
                                        startColumn: v1,
                                        endLine: v2,
                                        endColumn: v32
                                      };
                                    };
                                  };
                                };
                              })(getField2(decodeJsonInt)(rr)("startLine")))(getField2(decodeJsonInt)(rr)("startColumn")))(getField2(decodeJsonInt)(rr)("endLine")))(getField2(decodeJsonInt)(rr)("endColumn")))))(function(replaceRange) {
                                return pure(applicativeEither)({
                                  replacement,
                                  replaceRange
                                });
                              });
                            });
                          });
                        }))))(function(suggestion) {
                          return bind(bindEither)(map(functorEither)(fromMaybe([]))(getFieldOptional$prime2(decodeArray2(decodeSourceSpan))(o)("allSpans")))(function(allSpans) {
                            return pure(applicativeEither)({
                              errorCode,
                              errorLink,
                              moduleName,
                              filename,
                              message: message2,
                              position,
                              pursIde,
                              suggestion,
                              allSpans
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          });
        });
      }
    };
    decodeRebuildResult = {
      decodeJson: function(json) {
        return map(functorEither)(RebuildResult)(alt(altEither)(decodeJson(decodeArray2(decodeRebuildError))(json))(map(functorEither)(singleton5)(decodeJson(decodeRebuildError)(json))));
      }
    };
    commandWrapper = function(dictEncodeJson) {
      return function(s) {
        return function(o) {
          return extend3(encodeJsonJson)(assoc2(encodeJsonJString)("command")(s))(extend3(encodeJsonJson)(assoc2(dictEncodeJson)("params")(o))(jsonEmptyObject));
        };
      };
    };
    encodeCommand = {
      encodeJson: function(v) {
        if (v instanceof Cwd) {
          return jsonSingletonObject$prime(encodeJsonJString)("command")("cwd");
        }
        ;
        if (v instanceof Ls && v.value0 instanceof LoadedModules) {
          return commandWrapper(encodeJsonJson)("list")(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("type")("loadedModules"))(jsonEmptyObject));
        }
        ;
        if (v instanceof Ls && v.value0 instanceof AvailableModules) {
          return commandWrapper(encodeJsonJson)("list")(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("type")("availableModules"))(jsonEmptyObject));
        }
        ;
        if (v instanceof Ls && v.value0 instanceof Imports) {
          return commandWrapper(encodeJsonJson)("list")(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("type")("import"))(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("file")(v.value0.value0))(jsonEmptyObject)));
        }
        ;
        if (v instanceof Quit) {
          return jsonSingletonObject$prime(encodeJsonJString)("command")("quit");
        }
        ;
        if (v instanceof Reset) {
          return jsonSingletonObject$prime(encodeJsonJString)("command")("reset");
        }
        ;
        if (v instanceof Load) {
          return commandWrapper(encodeJsonJson)("load")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("modules")(encodeJson(encodeJsonArray(encodeJsonJString))(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("dependencies")(encodeJson(encodeJsonArray(encodeJsonJString))(v.value1)))(jsonEmptyObject)));
        }
        ;
        if (v instanceof Complete) {
          return commandWrapper(encodeJsonJson)("complete")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("filters")(encodeJson(encodeJsonArray(encodeFilter))(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("matcher")(encodeMaybeNull(encodeMatcher)(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("currentModule")(encodeMaybeNull(encodeJsonJString)(v.value2)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("options")(encodeJson(encodeCompletionOptions)(v.value3)))(jsonEmptyObject)))));
        }
        ;
        if (v instanceof Pursuit) {
          return commandWrapper(encodeJsonJson)("pursuit")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("type")(encodeJson(encodePursuitType)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJString)("query")(v.value1))(jsonEmptyObject)));
        }
        ;
        if (v instanceof Type) {
          return commandWrapper(encodeJsonJson)("type")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("search")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("filters")(encodeJson(encodeJsonArray(encodeFilter))(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("currentModule")(encodeMaybeNull(encodeJsonJString)(v.value2)))(jsonEmptyObject))));
        }
        ;
        if (v instanceof AddClause) {
          return commandWrapper(encodeJsonJson)("addClause")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("line")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("annotations")(encodeJson(encodeJsonJBoolean)(v.value1)))(jsonEmptyObject)));
        }
        ;
        if (v instanceof CaseSplit) {
          return commandWrapper(encodeJsonJson)("caseSplit")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("line")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("begin")(encodeJson(encodeJsonInt)(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("end")(encodeJson(encodeJsonInt)(v.value2)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("annotations")(encodeJson(encodeJsonJBoolean)(v.value3)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("type")(encodeJson(encodeJsonJString)(v.value4)))(jsonEmptyObject))))));
        }
        ;
        if (v instanceof ImportCmd) {
          return commandWrapper(encodeJsonJson)("import")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("file")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("outfile")(encodeMaybeNull(encodeJsonJString)(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("filters")(encodeJson(encodeJsonArray(encodeFilter))(v.value2)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("importCommand")(encodeJson(encodeImportCommand)(v.value3)))(jsonEmptyObject)))));
        }
        ;
        if (v instanceof RebuildCmd) {
          return commandWrapper(encodeJsonJson)("rebuild")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("file")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("actualFile")(encodeMaybeNull(encodeJsonJString)(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("codegen")(encodeMaybeNull(encodeJsonArray(encodeCodegenTarget))(v.value2)))(jsonEmptyObject))));
        }
        ;
        if (v instanceof Usages) {
          return commandWrapper(encodeJsonJson)("usages")(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("module")(encodeJson(encodeJsonJString)(v.value0)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("namespace")(encodeJson(encodeNamespace)(v.value1)))(extend3(encodeJsonJson)(assoc2(encodeJsonJson)("identifier")(encodeJson(encodeJsonJString)(v.value2)))(jsonEmptyObject))));
        }
        ;
        throw new Error("Failed pattern match at PscIde.Command (line 183, column 1 - line 256, column 6): " + [v.constructor.name]);
      }
    };
  }
});

// output/PscIde/index.js
var sendCommandR, sendCommand, type$prime, usages, rebuild, quit, qualifiedImport, load, listLoadedModules, listImports, listAvailableModules, implicitImport, explicitImport, defaultCompletionOptions, cwd2, complete, suggestTypos, caseSplit, addClause;
var init_PscIde2 = __esm({
  "output/PscIde/index.js"() {
    init_foreign71();
    init_Control6();
    init_Control4();
    init_Control5();
    init_Data_Argonaut();
    init_Data_Argonaut_Decode3();
    init_Data_Argonaut_Encode2();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Effect();
    init_Effect6();
    init_PscIde();
    init_foreign71();
    sendCommandR = function(dictEncodeJson) {
      return function(dictDecodeJson) {
        return function(dictDecodeJson1) {
          return function(port) {
            return function(command) {
              return makeAff(function(cb) {
                return voidRight(functorEffect)(nonCanceler)(send(stringify(encodeJson(dictEncodeJson)(command)))(port)(function() {
                  var $6 = unwrapResponse(dictDecodeJson)(dictDecodeJson1);
                  return function($7) {
                    return cb(Right.create($6($7)));
                  };
                }())(function($8) {
                  return cb(Left.create($8));
                }));
              });
            };
          };
        };
      };
    };
    sendCommand = function(dictEncodeJson) {
      return function(dictDecodeJson) {
        return function(port) {
          return function(command) {
            return makeAff(function(cb) {
              return voidRight(functorEffect)(nonCanceler)(send(stringify(encodeJson(dictEncodeJson)(command)))(port)(function() {
                var $9 = join(bindEither);
                var $10 = unwrapResponse(decodeJsonString)(dictDecodeJson);
                return function($11) {
                  return cb(Right.create($9($10($11))));
                };
              }())(function($12) {
                return cb(Left.create($12));
              }));
            });
          };
        };
      };
    };
    type$prime = function(port) {
      return function(s) {
        return function(fs) {
          return function(mod2) {
            return sendCommand(encodeCommand)(decodeArray2(decodeTypeInfo))(port)(new Type(s, fs, mod2));
          };
        };
      };
    };
    usages = function(port) {
      return function(file) {
        return function(ns) {
          return function(ident) {
            return sendCommand(encodeCommand)(decodeArray2(decodeTypePosition))(port)(new Usages(file, ns, ident));
          };
        };
      };
    };
    rebuild = function(port) {
      return function(file) {
        return function(actualFile) {
          return function(targets) {
            return sendCommandR(encodeCommand)(decodeRebuildResult)(decodeRebuildResult)(port)(new RebuildCmd(file, actualFile, targets));
          };
        };
      };
    };
    quit = function(port) {
      return sendCommand(encodeCommand)(decodeMessage)(port)(Quit.value);
    };
    qualifiedImport = function(port) {
      return function(infile) {
        return function(outfile) {
          return function(mod2) {
            return function(qualifier) {
              return sendCommand(encodeCommand)(decodeImportResult)(port)(new ImportCmd(infile, outfile, [], new AddQualifiedImport(mod2, qualifier)));
            };
          };
        };
      };
    };
    load = function(port) {
      return function(ms) {
        return function(ds) {
          return sendCommand(encodeCommand)(decodeMessage)(port)(new Load(ms, ds));
        };
      };
    };
    listLoadedModules = function(port) {
      return sendCommand(encodeCommand)(decodeModuleList)(port)(new Ls(LoadedModules.value));
    };
    listImports = function(port) {
      return function(fp) {
        return sendCommand(encodeCommand)(decodeImportList)(port)(new Ls(new Imports(fp)));
      };
    };
    listAvailableModules = function(port) {
      return sendCommand(encodeCommand)(decodeModuleList)(port)(new Ls(AvailableModules.value));
    };
    implicitImport = function(port) {
      return function(infile) {
        return function(outfile) {
          return function(filters) {
            return function(mod2) {
              return sendCommand(encodeCommand)(decodeImportResult)(port)(new ImportCmd(infile, outfile, filters, new AddImplicitImport(mod2)));
            };
          };
        };
      };
    };
    explicitImport = function(port) {
      return function(infile) {
        return function(outfile) {
          return function(filters) {
            return function(ident) {
              return function(qualifier) {
                return sendCommand(encodeCommand)(decodeImportResult)(port)(new ImportCmd(infile, outfile, filters, new AddImport(ident, qualifier)));
              };
            };
          };
        };
      };
    };
    defaultCompletionOptions = /* @__PURE__ */ function() {
      return {
        maxResults: Nothing.value,
        groupReexports: false
      };
    }();
    cwd2 = function(port) {
      return sendCommand(encodeCommand)(decodeMessage)(port)(Cwd.value);
    };
    complete = function(port) {
      return function(fs) {
        return function(m) {
          return function(mod2) {
            return function(opts) {
              return sendCommand(encodeCommand)(decodeArray2(decodeTypeInfo))(port)(new Complete(fs, m, mod2, opts));
            };
          };
        };
      };
    };
    suggestTypos = function(port) {
      return function(q) {
        return function(m) {
          return function(mod2) {
            return function(opts) {
              return map(functorAff)(function(v) {
                return alt(altEither)(v)(pure(applicativeEither)([]));
              })(complete(port)([])(new Just(new Distance(q, m)))(mod2)(opts));
            };
          };
        };
      };
    };
    caseSplit = function(port) {
      return function(line) {
        return function(begin) {
          return function(end2) {
            return function(annotations) {
              return function(typ) {
                return sendCommand(encodeCommand)(decodeArray2(decodeJsonString))(port)(new CaseSplit(line, begin, end2, annotations, typ));
              };
            };
          };
        };
      };
    };
    addClause = function(port) {
      return function(line) {
        return function(annotations) {
          return sendCommand(encodeCommand)(decodeArray2(decodeJsonString))(port)(new AddClause(line, annotations));
        };
      };
    };
  }
});

// output/PscIde.Server/index.js
var Started, Closed, StartError, All, None, Debug, Perf, Executable, stopServer, portFilePath, savePort, pickFreshPort, logParam, startServer, getSavedPort, findBins$prime, deleteSavedPort, defaultServerArgs;
var init_PscIde3 = __esm({
  "output/PscIde.Server/index.js"() {
    init_Control6();
    init_Control4();
    init_Control5();
    init_Control_Monad_Error();
    init_Control_Parallel();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect10();
    init_Node6();
    init_Node_Buffer();
    init_Node7();
    init_Node5();
    init_Node_FS4();
    init_Node();
    init_Node4();
    init_PscIde2();
    Started = /* @__PURE__ */ function() {
      function Started3(value0) {
        this.value0 = value0;
      }
      ;
      Started3.create = function(value0) {
        return new Started3(value0);
      };
      return Started3;
    }();
    Closed = /* @__PURE__ */ function() {
      function Closed3() {
      }
      ;
      Closed3.value = new Closed3();
      return Closed3;
    }();
    StartError = /* @__PURE__ */ function() {
      function StartError3(value0) {
        this.value0 = value0;
      }
      ;
      StartError3.create = function(value0) {
        return new StartError3(value0);
      };
      return StartError3;
    }();
    All = /* @__PURE__ */ function() {
      function All2() {
      }
      ;
      All2.value = new All2();
      return All2;
    }();
    None = /* @__PURE__ */ function() {
      function None2() {
      }
      ;
      None2.value = new None2();
      return None2;
    }();
    Debug = /* @__PURE__ */ function() {
      function Debug2() {
      }
      ;
      Debug2.value = new Debug2();
      return Debug2;
    }();
    Perf = /* @__PURE__ */ function() {
      function Perf2() {
      }
      ;
      Perf2.value = new Perf2();
      return Perf2;
    }();
    Executable = /* @__PURE__ */ function() {
      function Executable2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Executable2.create = function(value0) {
        return function(value1) {
          return new Executable2(value0, value1);
        };
      };
      return Executable2;
    }();
    stopServer = function(port) {
      return $$void(functorAff)(quit(port));
    };
    portFilePath = function(cwd4) {
      return concat2([cwd4, ".psc-ide-port"]);
    };
    savePort = function(port) {
      return function(cwd4) {
        return writeTextFile(UTF8.value)(portFilePath(cwd4))(show(showInt)(port));
      };
    };
    pickFreshPort = /* @__PURE__ */ randomInt(15e3)(16e3);
    logParam = function(v) {
      if (v instanceof All) {
        return "all";
      }
      ;
      if (v instanceof None) {
        return "none";
      }
      ;
      if (v instanceof Debug) {
        return "debug";
      }
      ;
      if (v instanceof Perf) {
        return "perf";
      }
      ;
      throw new Error("Failed pattern match at PscIde.Server (line 48, column 12 - line 52, column 17): " + [v.constructor.name]);
    };
    startServer = function(v) {
      return bind(bindAff)(liftEffect(monadEffectAff)(spawn2(v.exe)(append(semigroupArray)(function() {
        if (v.combinedExe) {
          return ["ide", "server"];
        }
        ;
        return [];
      }())(append(semigroupArray)(maybe([])(function(p) {
        return ["-p", show(showInt)(p)];
      })(v.port))(append(semigroupArray)(maybe([])(function(d) {
        return ["-d", d];
      })(v.directory))(append(semigroupArray)(maybe([])(function(od) {
        return ["--output-directory", od];
      })(v.outputDirectory))(append(semigroupArray)(function() {
        if (v.watch) {
          return [];
        }
        ;
        return ["--no-watch"];
      }())(append(semigroupArray)(function() {
        if (v.debug) {
          return ["--debug"];
        }
        ;
        return [];
      }())(append(semigroupArray)(function() {
        if (v.polling) {
          return ["--polling"];
        }
        ;
        return [];
      }())(append(semigroupArray)(function() {
        if (v.editorMode) {
          return ["--editor-mode"];
        }
        ;
        return [];
      }())(append(semigroupArray)(maybe([])(function(l) {
        return ["--log-level", logParam(l)];
      })(v.logLevel))(v.source))))))))))({
        cwd: v.cwd,
        stdio: v.stdio,
        env: defaultSpawnOptions.env,
        detached: defaultSpawnOptions.detached,
        uid: defaultSpawnOptions.uid,
        gid: defaultSpawnOptions.gid
      })))(function(cp) {
        var handleErr = makeAff(function(cb) {
          return voidRight(functorEffect)(nonCanceler)(function __do2() {
            onError(cp)(function(v1) {
              return cb(new Right(new StartError("psc-ide-server error:" + ("{ code: " + (v1.code + (", errno: " + (v1.errno + (", syscall: " + (v1.syscall + " }")))))))));
            })();
            return onClose(cp)(function(exit2) {
              if (exit2 instanceof Normally && exit2.value0 === 0) {
                return cb(new Right(Closed.value));
              }
              ;
              if (exit2 instanceof Normally) {
                return cb(new Right(new StartError("Error code returned: " + show(showInt)(exit2.value0))));
              }
              ;
              return cb(new Right(new StartError("Other close error")));
            })();
          });
        });
        return sequential(parallelAff)(alt(altParAff)(parallel(parallelAff)(handleErr))(parallel(parallelAff)(voidLeft(functorAff)(delay(100))(new Started(cp)))));
      });
    };
    getSavedPort = function(cwd4) {
      return map(functorEffect)(function(v) {
        return bindFlipped(bindMaybe)(fromString2)(hush(v));
      })($$try2(monadErrorEffect)(readTextFile(UTF8.value)(portFilePath(cwd4))));
    };
    findBins$prime = function(v) {
      return function(executable) {
        var getVersion2 = function(bin) {
          return makeAff(function(cb) {
            return voidRight(functorEffect)(nonCanceler)(execFile2(bin)(["--version"])({
              cwd: defaultExecOptions.cwd,
              env: v.env,
              encoding: defaultExecOptions.encoding,
              shell: defaultExecOptions.shell,
              timeout: defaultExecOptions.timeout,
              maxBuffer: defaultExecOptions.maxBuffer,
              killSignal: defaultExecOptions.killSignal,
              uid: defaultExecOptions.uid,
              gid: defaultExecOptions.gid
            })(function(v1) {
              return maybe(bind(bindEffect)(map(functorEffect)(Right.create)(readString2(mutableBufferEffect)(UTF8.value)(0)(100)(v1.stdout)))(cb))(function($44) {
                return cb(Left.create($44));
              })(v1.error);
            }));
          });
        };
        return bind(bindAff)(alt(altAff)(which$prime({
          path: v.path,
          pathExt: v.pathExt
        })(executable))(pure(applicativeAff)([])))(function(bins) {
          return $$for(applicativeAff)(traversableArray)(bins)(function(bin) {
            return map(functorAff)(map(functorFn)(Executable.create(bin))(either($$const(Nothing.value))(Just.create)))(attempt(getVersion2(bin)));
          });
        });
      };
    };
    deleteSavedPort = function(cwd4) {
      return unlink(portFilePath(cwd4));
    };
    defaultServerArgs = /* @__PURE__ */ function() {
      return {
        exe: "purs",
        combinedExe: true,
        cwd: Nothing.value,
        stdio: pipe,
        source: [],
        port: Nothing.value,
        directory: Nothing.value,
        outputDirectory: Nothing.value,
        watch: true,
        debug: false,
        polling: false,
        editorMode: false,
        logLevel: Nothing.value
      };
    }();
  }
});

// output/IdePurescript.Exec/index.js
var whichSync, findBins, addNpmBinPath, getPathVar;
var init_IdePurescript = __esm({
  "output/IdePurescript.Exec/index.js"() {
    init_foreign56();
    init_Control6();
    init_Control4();
    init_Control5();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Effect6();
    init_Effect4();
    init_Foreign3();
    init_Node();
    init_Node3();
    init_Node4();
    init_PscIde3();
    init_foreign56();
    whichSync = function(v) {
      return whichSyncImpl({
        path: toNullable(v.path),
        pathExt: toNullable(v.pathExt)
      });
    };
    findBins = function(pathVar) {
      return function(server) {
        return bind(bindAff)(liftEffect(monadEffectAff)(getEnv))(function(env) {
          return findBins$prime({
            pathExt: Nothing.value,
            path: either($$const(Nothing.value))(Just.create)(pathVar),
            env: either($$const(Nothing.value))(function() {
              var $11 = flip(insert2("PATH"))(env);
              return function($12) {
                return Just.create($11($12));
              };
            }())(pathVar)
          })(server);
        });
      };
    };
    addNpmBinPath = function(rootDir) {
      return function(path2) {
        return concat2([rootDir, "node_modules", ".bin"]) + maybe("")(function(v) {
          return delimiter + v;
        })(path2);
      };
    };
    getPathVar = function(addNpmBin) {
      return function(rootDir) {
        return function __do2() {
          var processPath = lookupEnv("PATH")();
          if (addNpmBin) {
            return new Right(addNpmBinPath(rootDir)(processPath));
          }
          ;
          return new Left(fromMaybe("")(processPath));
        };
      };
    };
  }
});

// output/IdePurescript.PscIde/index.js
var runMsg, primModules, eitherToErr, getCompletion$prime, getCompletion, result, getAvailableModules, getLoadedModules, getModuleInfo, getTypeInfo, getTypeInfoWithImportFilter, typesInModule, cwd3;
var init_IdePurescript2 = __esm({
  "output/IdePurescript.PscIde/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad_Error();
    init_Data_Argonaut_Decode3();
    init_Data_Argonaut_Decode4();
    init_Data39();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Data7();
    init_Data_String3();
    init_Effect6();
    init_Effect2();
    init_PscIde2();
    init_PscIde();
    runMsg = function(v) {
      return v;
    };
    primModules = ["Prim", "Prim.Boolean", "Prim.Ordering", "Prim.Row", "Prim.RowList", "Prim.Symbol", "Prim.TypeError"];
    eitherToErr = function(c2) {
      return bind(bindAff)(c2)(function(r) {
        if (r instanceof Left) {
          return throwError(monadThrowAff)(error(r.value0));
        }
        ;
        if (r instanceof Right) {
          return pure(applicativeAff)(r.value0);
        }
        ;
        throw new Error("Failed pattern match at IdePurescript.PscIde (line 37, column 3 - line 39, column 26): " + [r.constructor.name]);
      });
    };
    getCompletion$prime = function(matcher) {
      return function(mainFilter) {
        return function(port) {
          return function(currentModule) {
            return function(modulePrefix) {
              return function(unqualModules) {
                return function(getQualifiedModule) {
                  return function(opts) {
                    var modules = maybe(unqualModules)(getQualifiedModule)(modulePrefix);
                    var moduleFilters = [new ModuleFilter(function() {
                      var $10 = $$null(modules);
                      if ($10) {
                        return unqualModules;
                      }
                      ;
                      return modules;
                    }())];
                    return eitherToErr(complete(port)(append(semigroupArray)(mainFilter)(moduleFilters))(matcher)(currentModule)(opts));
                  };
                };
              };
            };
          };
        };
      };
    };
    getCompletion = function(port) {
      return function(prefix) {
        return getCompletion$prime(Nothing.value)([new PrefixFilter(prefix)])(port);
      };
    };
    result = function(f) {
      return function(a) {
        return eitherToErr(map(functorAff)(function(v) {
          return map(functorEither)(f)(v);
        })(a));
      };
    };
    getAvailableModules = /* @__PURE__ */ function() {
      var conv = function(v) {
        return append(semigroupArray)(primModules)(v);
      };
      var $23 = result(conv);
      return function($24) {
        return $23(listAvailableModules($24));
      };
    }();
    getLoadedModules = /* @__PURE__ */ function() {
      var conv = function(v) {
        return append(semigroupArray)(primModules)(v);
      };
      var $25 = result(conv);
      return function($26) {
        return $25(listLoadedModules($26));
      };
    }();
    getModuleInfo = function(port) {
      return function(text) {
        var filters = [new DeclarationFilter([DeclModule.value])];
        return result(head)(type$prime(port)(text)(filters)(Nothing.value));
      };
    };
    getTypeInfo = function(port) {
      return function(text) {
        return function(currentModule) {
          return function(modulePrefix) {
            return function(unqualModules) {
              return function(getQualifiedModule) {
                var moduleFilters = [new ModuleFilter(maybe(unqualModules)(getQualifiedModule)(modulePrefix))];
                return result(head)(type$prime(port)(text)(moduleFilters)(currentModule));
              };
            };
          };
        };
      };
    };
    getTypeInfoWithImportFilter = function(port) {
      return function(text) {
        return function(currentModule) {
          return function(qualifier) {
            return function(importLines) {
              var moduleText = joinWith("\n")(cons2("module RequestModule where")(importLines));
              var moduleFilters = [new DependencyFilter(qualifier, moduleText)];
              return result(head)(type$prime(port)(text)(moduleFilters)(currentModule));
            };
          };
        };
      };
    };
    typesInModule = function(port) {
      return function(moduleName) {
        return eitherToErr(complete(port)([new ModuleFilter([moduleName])])(Nothing.value)(new Just(moduleName))(defaultCompletionOptions));
      };
    };
    cwd3 = /* @__PURE__ */ function() {
      var $27 = result(runMsg);
      return function($28) {
        return $27(cwd2($28));
      };
    }();
  }
});

// output/Node.Stream/foreign.js
function readChunkImpl(Left2) {
  return (Right2) => (chunk) => {
    if (chunk instanceof Buffer) {
      return Right2(chunk);
    } else if (typeof chunk === "string") {
      return Left2(chunk);
    } else {
      throw new Error("Node.Stream.readChunkImpl: Unrecognised chunk type; expected String or Buffer, got: " + chunk);
    }
  };
}
function onDataEitherImpl(readChunk2) {
  return (r) => (f) => () => {
    r.on("data", (data) => {
      f(readChunk2(data))();
    });
  };
}
function writeStringImpl(w) {
  return (enc) => (s) => (done) => () => w.write(s, enc, done);
}
function endImpl(w) {
  return (done) => () => {
    w.end(null, null, done);
  };
}
var init_foreign76 = __esm({
  "output/Node.Stream/foreign.js"() {
  }
});

// output/Node.Stream/index.js
var writeString3, readChunk, onDataEither, onData, onDataString, end;
var init_Node9 = __esm({
  "output/Node.Stream/index.js"() {
    init_foreign76();
    init_Control4();
    init_Control5();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Data14();
    init_Effect();
    init_Effect2();
    init_Node6();
    init_Node_Buffer();
    init_Node5();
    init_foreign76();
    writeString3 = function(w) {
      return function(enc) {
        return function(s) {
          return function(cb) {
            return writeStringImpl(w)(show(showEncoding)(enc))(s)(function($13) {
              return cb(toMaybe($13))();
            });
          };
        };
      };
    };
    readChunk = /* @__PURE__ */ function() {
      return readChunkImpl(Left.create)(Right.create);
    }();
    onDataEither = function(r) {
      return function(cb) {
        return onDataEitherImpl(readChunk)(r)(cb);
      };
    };
    onData = function(r) {
      return function(cb) {
        var fromEither = function(x) {
          if (x instanceof Left) {
            return $$throw("Stream encoding should not be set");
          }
          ;
          if (x instanceof Right) {
            return pure(applicativeEffect)(x.value0);
          }
          ;
          throw new Error("Failed pattern match at Node.Stream (line 97, column 5 - line 101, column 17): " + [x.constructor.name]);
        };
        return onDataEither(r)(composeKleisliFlipped(bindEffect)(cb)(fromEither));
      };
    };
    onDataString = function(r) {
      return function(enc) {
        return function(cb) {
          return onData(r)(composeKleisliFlipped(bindEffect)(cb)(toString2(mutableBufferEffect)(enc)));
        };
      };
    };
    end = function(w) {
      return function(cb) {
        return endImpl(w)(function($15) {
          return cb(toMaybe($15))();
        });
      };
    };
  }
});

// output/IdePurescript.PscIdeServer/index.js
var Version, CorrectPath, WrongPath, Started2, Closed2, StartError2, Success, Info, Warning, $$Error, stopServer2, startServer2, startServer$prime, showErrorLevel, parseVersion, eqVersion, ordVersion;
var init_IdePurescript3 = __esm({
  "output/IdePurescript.PscIdeServer/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad_Error();
    init_Data39();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data12();
    init_Data14();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data29();
    init_Data22();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_IdePurescript();
    init_IdePurescript2();
    init_Node7();
    init_Node5();
    init_Node();
    init_Node2();
    init_Node3();
    init_Node9();
    init_PscIde3();
    Version = /* @__PURE__ */ function() {
      function Version2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      Version2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new Version2(value0, value1, value2, value3);
            };
          };
        };
      };
      return Version2;
    }();
    CorrectPath = /* @__PURE__ */ function() {
      function CorrectPath2(value0) {
        this.value0 = value0;
      }
      ;
      CorrectPath2.create = function(value0) {
        return new CorrectPath2(value0);
      };
      return CorrectPath2;
    }();
    WrongPath = /* @__PURE__ */ function() {
      function WrongPath2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      WrongPath2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new WrongPath2(value0, value1, value2);
          };
        };
      };
      return WrongPath2;
    }();
    Started2 = /* @__PURE__ */ function() {
      function Started3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Started3.create = function(value0) {
        return function(value1) {
          return new Started3(value0, value1);
        };
      };
      return Started3;
    }();
    Closed2 = /* @__PURE__ */ function() {
      function Closed3() {
      }
      ;
      Closed3.value = new Closed3();
      return Closed3;
    }();
    StartError2 = /* @__PURE__ */ function() {
      function StartError3(value0) {
        this.value0 = value0;
      }
      ;
      StartError3.create = function(value0) {
        return new StartError3(value0);
      };
      return StartError3;
    }();
    Success = /* @__PURE__ */ function() {
      function Success2() {
      }
      ;
      Success2.value = new Success2();
      return Success2;
    }();
    Info = /* @__PURE__ */ function() {
      function Info2() {
      }
      ;
      Info2.value = new Info2();
      return Info2;
    }();
    Warning = /* @__PURE__ */ function() {
      function Warning2() {
      }
      ;
      Warning2.value = new Warning2();
      return Warning2;
    }();
    $$Error = /* @__PURE__ */ function() {
      function $$Error2() {
      }
      ;
      $$Error2.value = new $$Error2();
      return $$Error2;
    }();
    stopServer2 = function(port) {
      return function(rootPath) {
        return function(_cp) {
          return bind(bindAff)(liftEffect(monadEffectAff)(getSavedPort(rootPath)))(function(oldPort) {
            return bind(bindAff)($$try2(monadErrorAff)(liftEffect(monadEffectAff)(when(applicativeEffect)(eq(eqMaybe(eqInt))(oldPort)(new Just(port)))(deleteSavedPort(rootPath)))))(function() {
              return stopServer(port);
            });
          });
        };
      };
    };
    startServer2 = function(logCb) {
      return function(v) {
        return function(rootPath) {
          var normalizePath = function() {
            var $88 = function() {
              var $20 = eq(eqMaybe(eqPlatform))(platform)(new Just(Win32.value));
              if ($20) {
                return toLower;
              }
              ;
              return identity(categoryFn);
            }();
            return function($89) {
              return $88(normalize($89));
            };
          }();
          var launchServer = function(connectPort) {
            var r = function(v1) {
              return function(v2) {
                if (v2 instanceof Started) {
                  return new Started2(v1, v2.value0);
                }
                ;
                if (v2 instanceof Closed) {
                  return Closed2.value;
                }
                ;
                if (v2 instanceof StartError) {
                  return new StartError2(v2.value0);
                }
                ;
                throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 228, column 5 - line 228, column 44): " + [v1.constructor.name, v2.constructor.name]);
              };
            };
            return bind(bindAff)(maybe(liftEffect(monadEffectAff)(pickFreshPort))(pure(applicativeAff))(connectPort))(function(port) {
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(function __do2() {
                logCb(Info.value)("Starting IDE server on port " + (show(showInt)(port) + (" with cwd " + rootPath)))();
                return when(applicativeEffect)(isNothing(connectPort))(savePort(port)(rootPath))();
              }))(function() {
                return map(functorAff)(r(port))(startServer({
                  exe: v.exe,
                  combinedExe: v.combinedExe,
                  cwd: new Just(rootPath),
                  stdio: defaultServerArgs.stdio,
                  source: v.glob,
                  port: new Just(port),
                  directory: defaultServerArgs.directory,
                  outputDirectory: v.outputDirectory,
                  watch: defaultServerArgs.watch,
                  debug: defaultServerArgs.debug,
                  polling: defaultServerArgs.polling,
                  editorMode: defaultServerArgs.editorMode,
                  logLevel: v.logLevel
                }));
              });
            });
          };
          var gotPath = function(port) {
            return function(workingDir) {
              return liftEffect(monadEffectAff)(function() {
                var $25 = normalizePath(workingDir) === normalizePath(rootPath);
                if ($25) {
                  return function __do2() {
                    logCb(Info.value)("Found IDE server on port " + (show(showInt)(port) + (" with correct path: " + workingDir)))();
                    return new CorrectPath(port);
                  };
                }
                ;
                return function __do2() {
                  logCb(Info.value)("Found IDE server on port " + (show(showInt)(port) + (" with wrong path: " + (normalizePath(workingDir) + (" instead of " + normalizePath(rootPath))))))();
                  return new WrongPath(port, workingDir, rootPath);
                };
              }());
            };
          };
          var joinServer = function(port) {
            return function(launchPort) {
              return function(message2) {
                return bind(bindAff)(attempt(cwd3(port)))(function(workingDir) {
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)(message2 + (": " + (show(showInt)(port) + either($$const(" (couldn't connect to existing server)"))(function(v1) {
                    return ", cwd: " + v1;
                  })(workingDir))))))(function() {
                    return either($$const(launchServer(launchPort)))(gotPath(port))(workingDir);
                  });
                });
              };
            };
          };
          if (v.port instanceof Just) {
            return joinServer(v.port.value0)(v.port)("Using configured port");
          }
          ;
          if (v.port instanceof Nothing) {
            return bind(bindAff)(liftEffect(monadEffectAff)(getSavedPort(rootPath)))(function(v1) {
              if (v1 instanceof Just) {
                return joinServer(v1.value0)(Nothing.value)("Found existing port from file");
              }
              ;
              if (v1 instanceof Nothing) {
                return launchServer(Nothing.value);
              }
              ;
              throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 189, column 13 - line 193, column 42): " + [v1.constructor.name]);
            });
          }
          ;
          throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 184, column 3 - line 193, column 42): " + [v.port.constructor.name]);
        };
      };
    };
    startServer$prime = function(v) {
      return function(path2) {
        return function(addNpmBin) {
          return function(cb) {
            return function(logCb) {
              var wireOutput = function(cp) {
                return function(log4) {
                  return function __do2() {
                    onDataString(stderr(cp))(UTF8.value)(log4(Warning.value))();
                    return onDataString(stdout(cp))(UTF8.value)(log4(Info.value))();
                  };
                };
              };
              var printSrvExec = function(v1) {
                return v1.value0 + (":" + maybe(" could not determine version")(function(v2) {
                  return " " + (trim(v2) + "");
                })(v1.value1));
              };
              return bind(bindAff)(liftEffect(monadEffectAff)(getPathVar(addNpmBin)(path2)))(function(pathVar) {
                return bind(bindAff)(findBins(pathVar)(v.exe))(function(serverBins) {
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(cb(Info.value)("Using PATH env variable value: " + either(identity(categoryFn))(identity(categoryFn))(pathVar))))(function() {
                    return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(when(applicativeEffect)(length4(serverBins) > 1)(cb(Warning.value)("Found multiple IDE server executables (will use the first one):\n" + joinWith("\n")(mapFlipped(functorArray)(serverBins)(printSrvExec))))))(function() {
                      var v1 = head(serverBins);
                      if (v1 instanceof Nothing) {
                        return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(cb(Info.value)("Couldn't find IDE server, looked for: " + (v.exe + " using PATH env variable."))))(function() {
                          return pure(applicativeAff)({
                            quit: pure(applicativeAff)(unit),
                            port: Nothing.value,
                            purs: Nothing.value
                          });
                        });
                      }
                      ;
                      if (v1 instanceof Just) {
                        return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)("Using found IDE server bin (npm-bin: " + (show(showBoolean)(addNpmBin) + ("): " + printSrvExec(v1.value0))))))(function() {
                          return bind(bindAff)(startServer2(logCb)({
                            exe: v1.value0.value0,
                            combinedExe: v.combinedExe,
                            glob: v.glob,
                            logLevel: v.logLevel,
                            outputDirectory: v.outputDirectory,
                            port: v.port
                          })(path2))(function(res) {
                            var noRes = {
                              quit: pure(applicativeAff)(unit),
                              port: Nothing.value,
                              purs: new Just(v1.value0)
                            };
                            return liftEffect(monadEffectAff)(function() {
                              if (res instanceof CorrectPath) {
                                return voidRight(functorEffect)({
                                  quit: pure(applicativeAff)(unit),
                                  port: new Just(res.value0),
                                  purs: new Just(v1.value0)
                                })(cb(Info.value)("Found existing IDE server with correct path on port " + show(showInt)(res.value0)));
                              }
                              ;
                              if (res instanceof WrongPath) {
                                return function __do2() {
                                  cb($$Error.value)("Found existing IDE server on port '" + (show(showInt)(res.value0) + ("' with wrong path: '" + (res.value1 + ("' instead of '" + (res.value2 + "'. Correct, kill or configure a different port, and restart."))))))();
                                  return noRes;
                                };
                              }
                              ;
                              if (res instanceof Started2) {
                                return function __do2() {
                                  cb(Success.value)("Started IDE server (port " + (show(showInt)(res.value0) + ")"))();
                                  wireOutput(res.value1)(logCb)();
                                  return {
                                    quit: stopServer2(res.value0)(path2)(res.value1),
                                    port: new Just(res.value0),
                                    purs: new Just(v1.value0)
                                  };
                                };
                              }
                              ;
                              if (res instanceof Closed2) {
                                return voidRight(functorEffect)(noRes)(cb(Info.value)("IDE server exited with success code"));
                              }
                              ;
                              if (res instanceof StartError2) {
                                return voidRight(functorEffect)(noRes)(cb($$Error.value)("Could not start IDE server process. Check the configured port number is valid.\n" + res.value0));
                              }
                              ;
                              throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 133, column 11 - line 164, column 16): " + [res.constructor.name]);
                            }());
                          });
                        });
                      }
                      ;
                      throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 115, column 3 - line 164, column 16): " + [v1.constructor.name]);
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
    showErrorLevel = {
      show: function(v) {
        if (v instanceof Success) {
          return "Success";
        }
        ;
        if (v instanceof Info) {
          return "Info";
        }
        ;
        if (v instanceof Warning) {
          return "Warning";
        }
        ;
        if (v instanceof $$Error) {
          return "Error";
        }
        ;
        throw new Error("Failed pattern match at IdePurescript.PscIdeServer (line 53, column 1 - line 57, column 23): " + [v.constructor.name]);
      }
    };
    parseVersion = function(s0) {
      var s = trim(s0);
      var dotted = takeWhile2(function(c2) {
        return notEq(eqCodePoint)(c2)(codePointFromChar(" ")) && notEq(eqCodePoint)(c2)(codePointFromChar("-"));
      })(s);
      var rest = map(functorMaybe)(trim)(stripPrefix(dotted)(s));
      var v = traverse(traversableArray)(applicativeMaybe)(fromString2)(split(".")(dotted));
      if (v instanceof Just && v.value0.length === 3) {
        return new Just(new Version(v["value0"][0], v["value0"][1], v["value0"][2], rest));
      }
      ;
      return Nothing.value;
    };
    eqVersion = {
      eq: function(v) {
        return function(v1) {
          return v.value0 === v1.value0 && (v.value1 === v1.value1 && (v.value2 === v1.value2 && eq(eqMaybe(eqString))(v.value3)(v1.value3)));
        };
      }
    };
    ordVersion = {
      compare: function(v) {
        return function(v1) {
          return compare(ordTuple(ordArray(ordInt))(ordMaybe(ordString)))(new Tuple([v.value0, v.value1, v.value2], v.value3))(new Tuple([v1.value0, v1.value1, v1.value2], v1.value3));
        };
      },
      Eq0: function() {
        return eqVersion;
      }
    };
  }
});

// output/IdePurescript.Regex/index.js
var test$prime, replace$prime, match$prime;
var init_IdePurescript4 = __esm({
  "output/IdePurescript.Regex/index.js"() {
    init_Data_Array2();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data_String4();
    test$prime = function(v) {
      if (v instanceof Left) {
        return $$const(false);
      }
      ;
      if (v instanceof Right) {
        return test(v.value0);
      }
      ;
      throw new Error("Failed pattern match at IdePurescript.Regex (line 18, column 1 - line 18, column 57): " + [v.constructor.name]);
    };
    replace$prime = function(v) {
      return function(v1) {
        return function(s) {
          if (v instanceof Left) {
            return s;
          }
          ;
          if (v instanceof Right) {
            return replace2(v.value0)(v1)(s);
          }
          ;
          throw new Error("Failed pattern match at IdePurescript.Regex (line 10, column 1 - line 10, column 69): " + [v.constructor.name, v1.constructor.name, s.constructor.name]);
        };
      };
    };
    match$prime = function(v) {
      return function(v1) {
        if (v instanceof Left) {
          return Nothing.value;
        }
        ;
        if (v instanceof Right) {
          return map(functorMaybe)(toArray5)(match(v.value0)(v1));
        }
        ;
        throw new Error("Failed pattern match at IdePurescript.Regex (line 14, column 1 - line 14, column 79): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  }
});

// output/Node.FS.Async/foreign.js
function handleCallbackImpl(left2, right2, f) {
  return function(err, value) {
    if (err) {
      f(left2(err))();
    } else {
      f(right2(value))();
    }
  };
}
var import_fs3;
var init_foreign77 = __esm({
  "output/Node.FS.Async/foreign.js"() {
    import_fs3 = __toModule(require("fs"));
  }
});

// output/Node.FS.Async/index.js
var handleCallback, readTextFile2, readdir2, rmdir2, stat2, unlink3, writeTextFile2;
var init_Node_FS5 = __esm({
  "output/Node.FS.Async/index.js"() {
    init_foreign77();
    init_Data_DateTime();
    init_Data16();
    init_Data18();
    init_Data4();
    init_Data37();
    init_Data15();
    init_Data41();
    init_Data14();
    init_Node6();
    init_Node_Buffer();
    init_Node5();
    init_Node8();
    init_Node_FS();
    init_Node_FS2();
    init_Node_FS3();
    handleCallback = function(cb) {
      return handleCallbackImpl(Left.create, Right.create, cb);
    };
    readTextFile2 = function(encoding) {
      return function(file) {
        return function(cb) {
          return mkEffect2(function(v) {
            return import_fs3.readFile(file, {
              encoding: show(showEncoding)(encoding)
            }, handleCallback(cb));
          });
        };
      };
    };
    readdir2 = function(file) {
      return function(cb) {
        return mkEffect2(function(v) {
          return import_fs3.readdir(file, handleCallback(cb));
        });
      };
    };
    rmdir2 = function(file) {
      return function(cb) {
        return mkEffect2(function(v) {
          return import_fs3.rmdir(file, handleCallback(cb));
        });
      };
    };
    stat2 = function(file) {
      return function(cb) {
        return mkEffect2(function(v) {
          return import_fs3.stat(file, handleCallback(function() {
            var $33 = map(functorEither)(Stats.create);
            return function($34) {
              return cb($33($34));
            };
          }()));
        });
      };
    };
    unlink3 = function(file) {
      return function(cb) {
        return mkEffect2(function(v) {
          return import_fs3.unlink(file, handleCallback(cb));
        });
      };
    };
    writeTextFile2 = function(encoding) {
      return function(file) {
        return function(buff) {
          return function(cb) {
            return mkEffect2(function(v) {
              return import_fs3.writeFile(file, buff, {
                encoding: show(showEncoding)(encoding)
              }, handleCallback(cb));
            });
          };
        };
      };
    };
  }
});

// output/Node.FS.Aff/index.js
var toAff2, toAff1, unlink4, toAff22, toAff3, writeTextFile3, stat3, rmdir3, readdir3, readTextFile3;
var init_Node_FS6 = __esm({
  "output/Node.FS.Aff/index.js"() {
    init_Data4();
    init_Effect();
    init_Effect6();
    init_Node_FS5();
    toAff2 = function(p) {
      return makeAff(function(k) {
        return voidLeft(functorEffect)(p(k))(nonCanceler);
      });
    };
    toAff1 = function(f) {
      return function(a) {
        return toAff2(f(a));
      };
    };
    unlink4 = /* @__PURE__ */ toAff1(unlink3);
    toAff22 = function(f) {
      return function(a) {
        return function(b) {
          return toAff2(f(a)(b));
        };
      };
    };
    toAff3 = function(f) {
      return function(a) {
        return function(b) {
          return function(c2) {
            return toAff2(f(a)(b)(c2));
          };
        };
      };
    };
    writeTextFile3 = /* @__PURE__ */ toAff3(writeTextFile2);
    stat3 = /* @__PURE__ */ toAff1(stat2);
    rmdir3 = /* @__PURE__ */ toAff1(rmdir2);
    readdir3 = /* @__PURE__ */ toAff1(readdir2);
    readTextFile3 = /* @__PURE__ */ toAff22(readTextFile2);
  }
});

// output/IdePurescript.Modules/index.js
var UpdatedImports, AmbiguousImport, UnnecessaryImport, FailedImport, mkImplicit, makeTempFile, withTempFile, reformatModuleImports, initialModulesState, getModuleName, getModules, getUnqualActiveModules, getQualModule, getModuleFromUnknownQualifier, getMainModule, getModulesForFile, getModulesForFileTemp, getAllUnqualActiveModules, getAllActiveModules, eqImportType, moduleEq, addQualifiedImport, addModuleImport, addExplicitImport;
var init_IdePurescript5 = __esm({
  "output/IdePurescript.Modules/index.js"() {
    init_foreign49();
    init_Control6();
    init_Control4();
    init_Control5();
    init_Control2();
    init_Data39();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data14();
    init_Data_String2();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data_String6();
    init_Data22();
    init_Data43();
    init_Effect6();
    init_Effect4();
    init_Foreign3();
    init_IdePurescript3();
    init_IdePurescript4();
    init_Node5();
    init_Node_FS6();
    init_Node();
    init_PscIde2();
    init_PscIde();
    UpdatedImports = /* @__PURE__ */ function() {
      function UpdatedImports2(value0) {
        this.value0 = value0;
      }
      ;
      UpdatedImports2.create = function(value0) {
        return new UpdatedImports2(value0);
      };
      return UpdatedImports2;
    }();
    AmbiguousImport = /* @__PURE__ */ function() {
      function AmbiguousImport2(value0) {
        this.value0 = value0;
      }
      ;
      AmbiguousImport2.create = function(value0) {
        return new AmbiguousImport2(value0);
      };
      return AmbiguousImport2;
    }();
    UnnecessaryImport = /* @__PURE__ */ function() {
      function UnnecessaryImport2() {
      }
      ;
      UnnecessaryImport2.value = new UnnecessaryImport2();
      return UnnecessaryImport2;
    }();
    FailedImport = /* @__PURE__ */ function() {
      function FailedImport2(value0) {
        this.value0 = value0;
      }
      ;
      FailedImport2.create = function(value0) {
        return new FailedImport2(value0);
      };
      return FailedImport2;
    }();
    mkImplicit = function(m) {
      return {
        qualifier: Nothing.value,
        importType: Implicit.value,
        moduleName: m
      };
    };
    makeTempFile = function(fileName) {
      return function(text) {
        return bind(bindAff)(liftEffect(monadEffectAff)(tmpDir))(function(dir) {
          return bind(bindAff)(liftEffect(monadEffectAff)(genUUID))(function(uuid) {
            var name2 = replace$prime(regex("[\\/\\\\:]")(global))("-")(fileName);
            var tmpFile = dir + (sep + ("ide-purescript-" + (show(showUUID)(uuid) + ("-" + name2))));
            return discard(discardUnit)(bindAff)(writeTextFile3(UTF8.value)(tmpFile)(text))(function() {
              return pure(applicativeAff)(tmpFile);
            });
          });
        });
      };
    };
    withTempFile = function(fileName) {
      return function(text) {
        return function(action) {
          return bind(bindAff)(makeTempFile(fileName)(text))(function(tmpFile) {
            return bind(bindAff)(action(tmpFile))(function(res) {
              return bind(bindAff)(function() {
                if (res instanceof Right && res.value0 instanceof SuccessFile) {
                  return map(functorAff)(UpdatedImports.create)(readTextFile3(UTF8.value)(tmpFile));
                }
                ;
                if (res instanceof Right && res.value0 instanceof MultipleResults) {
                  return pure(applicativeAff)(new AmbiguousImport(res.value0.value0));
                }
                ;
                if (res instanceof Right && res.value0 instanceof SuccessText) {
                  return pure(applicativeAff)(new FailedImport(intercalate3(monoidString)("\n")(res.value0.value0)));
                }
                ;
                if (res instanceof Left) {
                  return pure(applicativeAff)(new FailedImport(res.value0));
                }
                ;
                throw new Error("Failed pattern match at IdePurescript.Modules (line 201, column 13 - line 205, column 40): " + [res.constructor.name]);
              }())(function(answer) {
                return bind(bindAff)(attempt(unlink4(tmpFile)))(function() {
                  return pure(applicativeAff)(answer);
                });
              });
            });
          });
        };
      };
    };
    reformatModuleImports = function(log4) {
      return function(state2) {
        return function(port) {
          return function(fileName) {
            return function(text) {
              var addBogusImport = function(tmpFile) {
                return qualifiedImport(port)(tmpFile)(new Just(tmpFile))("Prim")("__IDE_IMPORT_HACK");
              };
              return bind(bindAff)(withTempFile(fileName)(text)(addBogusImport))(function(res) {
                if (res instanceof UpdatedImports) {
                  var result$prime = intercalate3(monoidString)("\n")(filter2(function() {
                    var $100 = not(heytingAlgebraBoolean);
                    var $101 = contains("__IDE_IMPORT_HACK");
                    return function($102) {
                      return $100($101($102));
                    };
                  }())(lines(res.value0)));
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log4(Info.value)(show(showArray(showString))(lines(result$prime)))))(function() {
                    return pure(applicativeAff)(new Just({
                      state: state2,
                      result: result$prime
                    }));
                  });
                }
                ;
                return pure(applicativeAff)(Nothing.value);
              });
            };
          };
        };
      };
    };
    initialModulesState = /* @__PURE__ */ function() {
      return {
        main: Nothing.value,
        modules: [],
        identifiers: [],
        identToModule: empty5
      };
    }();
    getModuleName = function(v) {
      return v.moduleName;
    };
    getModules = function(include) {
      return function(v) {
        return function(v1) {
          return append(semigroupArray)(["Prim"])(v1);
        }(map(functorArray)(getModuleName)(append(semigroupArray)(maybe([])(function($103) {
          return singleton5(mkImplicit($103));
        })(v.main))(filter2(include)(v.modules))));
      };
    };
    getUnqualActiveModules = function(state2) {
      return function(ident) {
        var include = function(v) {
          if (v.qualifier instanceof Just) {
            return false;
          }
          ;
          if (v.importType instanceof Explicit) {
            return maybe(false)(function(x) {
              return elem(foldableArray)(eqString)(x)(v.importType.value0) || elem(foldableArray)(eqString)("(" + (x + ")"))(v.importType.value0);
            })(ident);
          }
          ;
          if (v.importType instanceof Implicit) {
            return true;
          }
          ;
          if (v.importType instanceof Hiding) {
            return maybe(true)(function(v1) {
              return notElem(foldableArray)(eqString)(v1)(v.importType.value0);
            })(ident);
          }
          ;
          throw new Error("Failed pattern match at IdePurescript.Modules (line 125, column 3 - line 125, column 49): " + [v.constructor.name]);
        };
        return getModules(include)(state2);
      };
    };
    getQualModule = function(qualifier) {
      return function(v) {
        var qual = function(v1) {
          return function(v2) {
            if (v2.qualifier instanceof Just) {
              return v1 === v2.qualifier.value0;
            }
            ;
            return false;
          };
        };
        return map(functorArray)(getModuleName)(filter2(qual(qualifier))(v.modules));
      };
    };
    getModuleFromUnknownQualifier = function(qual) {
      return function(v) {
        return alt(altMaybe)(lookup2(qual)(v.identToModule))(lookup2("class " + qual)(v.identToModule));
      };
    };
    getMainModule = function(text) {
      var regex3 = regex("module\\s+([\\w.]+)")(multiline);
      var v = match$prime(regex3)(text);
      if (v instanceof Just && (v.value0.length === 2 && v["value0"][1] instanceof Just)) {
        return new Just(v["value0"][1].value0);
      }
      ;
      return Nothing.value;
    };
    getModulesForFile = function(port) {
      return function(file) {
        return function(fullText) {
          var mod2 = function(v) {
            return v;
          };
          var idents = function(v) {
            if (v.importType instanceof Explicit) {
              return map(functorArray)(flip(Tuple.create)(v))(v.importType.value0);
            }
            ;
            return [];
          };
          var $$default = {
            moduleName: Nothing.value,
            imports: []
          };
          return bind(bindAff)(map(functorAff)(either($$const($$default))(identity(categoryFn)))(listImports(port)(file)))(function(v) {
            var modules = map(functorArray)(mod2)(v.imports);
            var main2 = maybe(getMainModule(fullText))(Just.create)(v.moduleName);
            var identToModule = fromFoldable4(foldableArray)(concatMap(idents)(modules));
            var identifiers = keys2(identToModule);
            return pure(applicativeAff)({
              main: main2,
              modules,
              identifiers,
              identToModule
            });
          });
        };
      };
    };
    getModulesForFileTemp = function(port) {
      return function(file) {
        return function(fullText) {
          return bind(bindAff)(makeTempFile(file)(fullText))(function(tmpFile) {
            return bind(bindAff)(getModulesForFile(port)(tmpFile)(fullText))(function(res) {
              return bind(bindAff)(attempt(unlink4(tmpFile)))(function() {
                return pure(applicativeAff)(res);
              });
            });
          });
        };
      };
    };
    getAllUnqualActiveModules = function(state2) {
      var include = function(v) {
        if (v.qualifier instanceof Just) {
          return false;
        }
        ;
        return true;
      };
      return getModules(include)(state2);
    };
    getAllActiveModules = /* @__PURE__ */ getModules(/* @__PURE__ */ $$const(true));
    eqImportType = function(v) {
      return function(v1) {
        if (v instanceof Implicit && v1 instanceof Implicit) {
          return true;
        }
        ;
        if (v instanceof Explicit && v1 instanceof Explicit) {
          return eq(eqArray(eqString))(v.value0)(v1.value0);
        }
        ;
        if (v instanceof Hiding && v1 instanceof Hiding) {
          return eq(eqArray(eqString))(v.value0)(v1.value0);
        }
        ;
        return false;
      };
    };
    moduleEq = {
      eq: function(v) {
        return function(v1) {
          return v.moduleName === v1.moduleName && (eq(eqMaybe(eqString))(v.qualifier)(v1.qualifier) && eqImportType(v.importType)(v1.importType));
        };
      }
    };
    addQualifiedImport = function(state2) {
      return function(port) {
        return function(fileName) {
          return function(text) {
            return function(moduleName) {
              return function(qualifier) {
                var isThisModule = eq(eqMaybe(eqString))(new Just(moduleName))(state2.main);
                var addImport = function(tmpFile) {
                  return qualifiedImport(port)(tmpFile)(new Just(tmpFile))(moduleName)(qualifier);
                };
                var $80 = !isThisModule;
                if ($80) {
                  return map(functorAff)(function(v) {
                    return {
                      state: state2,
                      result: v
                    };
                  })(withTempFile(fileName)(text)(addImport));
                }
                ;
                return pure(applicativeAff)({
                  state: state2,
                  result: UnnecessaryImport.value
                });
              };
            };
          };
        };
      };
    };
    addModuleImport = function(state2) {
      return function(port) {
        return function(fileName) {
          return function(text) {
            return function(moduleName) {
              var shouldAdd = notEq(eqMaybe(eqString))(state2.main)(new Just(moduleName)) && notElem(foldableArray)(moduleEq)(mkImplicit(moduleName))(state2.modules);
              var addImport = function(tmpFile) {
                return implicitImport(port)(tmpFile)(new Just(tmpFile))([])(moduleName);
              };
              if (!shouldAdd) {
                return pure(applicativeAff)({
                  state: state2,
                  result: UnnecessaryImport.value
                });
              }
              ;
              if (shouldAdd) {
                return bind(bindAff)(withTempFile(fileName)(text)(addImport))(function(result2) {
                  return pure(applicativeAff)({
                    state: state2,
                    result: result2
                  });
                });
              }
              ;
              throw new Error("Failed pattern match at IdePurescript.Modules (line 217, column 3 - line 221, column 29): " + [shouldAdd.constructor.name]);
            };
          };
        };
      };
    };
    addExplicitImport = function(state2) {
      return function(port) {
        return function(fileName) {
          return function(text) {
            return function(moduleName) {
              return function(qualifier) {
                return function(identifier) {
                  return function(ns) {
                    var shouldAddMatch = function(v) {
                      return function(v1) {
                        if (v1.qualifier instanceof Nothing && (v1.importType instanceof Implicit && v1.moduleName === v)) {
                          return false;
                        }
                        ;
                        if (v1.qualifier instanceof Nothing && (v1.importType instanceof Hiding && v1.moduleName === v)) {
                          return elem(foldableArray)(eqString)(identifier)(v1.importType.value0);
                        }
                        ;
                        return true;
                      };
                    };
                    var namespaceFilters = maybe([])(function(n) {
                      return [new NamespaceFilter([n])];
                    })(ns);
                    var isThisModule = function() {
                      if (moduleName instanceof Just) {
                        return eq(eqMaybe(eqString))(moduleName)(state2.main);
                      }
                      ;
                      return false;
                    }();
                    var isExplicitPrim = function(v) {
                      if (v.moduleName === "Prim") {
                        if (v.importType instanceof Implicit) {
                          return false;
                        }
                        ;
                        return true;
                      }
                      ;
                      return false;
                    };
                    var isOpenPrim = eq(eqMaybe(eqString))(moduleName)(new Just("Prim")) && !any(foldableArray)(heytingAlgebraBoolean)(isExplicitPrim)(state2.modules);
                    var shouldAdd = !isThisModule && (!isOpenPrim && maybe(true)(function(mn) {
                      return all(foldableArray)(heytingAlgebraBoolean)(shouldAddMatch(mn))(state2.modules);
                    })(moduleName));
                    var filters = maybe([])(function(m) {
                      return [new ModuleFilter([m])];
                    })(moduleName);
                    var addImport = function(tmpFile) {
                      return explicitImport(port)(tmpFile)(new Just(tmpFile))(append(semigroupArray)(filters)(namespaceFilters))(identifier)(qualifier);
                    };
                    if (!shouldAdd) {
                      return pure(applicativeAff)({
                        state: state2,
                        result: UnnecessaryImport.value
                      });
                    }
                    ;
                    if (shouldAdd) {
                      return bind(bindAff)(withTempFile(fileName)(text)(addImport))(function(result2) {
                        var state$prime = function() {
                          if (result2 instanceof UpdatedImports) {
                            return {
                              identifiers: cons2(identifier)(state2.identifiers),
                              identToModule: state2.identToModule,
                              main: state2.main,
                              modules: state2.modules
                            };
                          }
                          ;
                          return state2;
                        }();
                        return pure(applicativeAff)({
                          result: result2,
                          state: state$prime
                        });
                      });
                    }
                    ;
                    throw new Error("Failed pattern match at IdePurescript.Modules (line 239, column 3 - line 248, column 37): " + [shouldAdd.constructor.name]);
                  };
                };
              };
            };
          };
        };
      };
    };
  }
});

// output/Foreign.Index/foreign.js
function unsafeReadPropImpl(f, s, key, value) {
  return value == null ? f : s(value[key]);
}
function unsafeHasOwnProperty(prop, value) {
  return Object.prototype.hasOwnProperty.call(value, prop);
}
function unsafeHasProperty(prop, value) {
  return prop in value;
}
var init_foreign78 = __esm({
  "output/Foreign.Index/foreign.js"() {
  }
});

// output/Foreign.Index/index.js
var unsafeReadProp, readProp, ix, index3, indexableForeign, hasPropertyImpl, hasOwnPropertyImpl, indexString;
var init_Foreign4 = __esm({
  "output/Foreign.Index/index.js"() {
    init_foreign78();
    init_Control4();
    init_Control5();
    init_Control_Monad_Except();
    init_Data2();
    init_Foreign();
    unsafeReadProp = function(dictMonad) {
      return function(k) {
        return function(value) {
          return unsafeReadPropImpl(fail(dictMonad)(new TypeMismatch("object", typeOf(value))), pure(applicativeExceptT(dictMonad)), k, value);
        };
      };
    };
    readProp = function(dictMonad) {
      return unsafeReadProp(dictMonad);
    };
    ix = function(dict) {
      return dict.ix;
    };
    index3 = function(dict) {
      return dict.index;
    };
    indexableForeign = function(dictMonad) {
      return {
        ix: function(dictIndex) {
          return index3(dictIndex);
        }
      };
    };
    hasPropertyImpl = function(v) {
      return function(v1) {
        if (isNull(v1)) {
          return false;
        }
        ;
        if (isUndefined(v1)) {
          return false;
        }
        ;
        if (typeOf(v1) === "object" || typeOf(v1) === "function") {
          return unsafeHasProperty(v, v1);
        }
        ;
        return false;
      };
    };
    hasOwnPropertyImpl = function(v) {
      return function(v1) {
        if (isNull(v1)) {
          return false;
        }
        ;
        if (isUndefined(v1)) {
          return false;
        }
        ;
        if (typeOf(v1) === "object" || typeOf(v1) === "function") {
          return unsafeHasOwnProperty(v, v1);
        }
        ;
        return false;
      };
    };
    indexString = function(dictMonad) {
      return {
        index: flip(readProp(dictMonad)),
        hasProperty: hasPropertyImpl,
        hasOwnProperty: hasOwnPropertyImpl,
        errorAt: ErrorAtProperty.create
      };
    };
  }
});

// output/Foreign.NullOrUndefined/foreign.js
var init_foreign79 = __esm({
  "output/Foreign.NullOrUndefined/foreign.js"() {
  }
});

// output/Foreign.NullOrUndefined/index.js
var readNullOrUndefined;
var init_Foreign5 = __esm({
  "output/Foreign.NullOrUndefined/index.js"() {
    init_foreign79();
    init_Control4();
    init_Control_Monad_Except();
    init_Data4();
    init_Data20();
    init_Data15();
    init_Foreign();
    readNullOrUndefined = function(v) {
      return function(value) {
        if (isNull(value) || isUndefined(value)) {
          return pure(applicativeExceptT(monadIdentity))(Nothing.value);
        }
        ;
        return map(functorExceptT(functorIdentity))(Just.create)(v(value));
      };
    };
  }
});

// output/Data.Char/index.js
var fromCharCode3;
var init_Data49 = __esm({
  "output/Data.Char/index.js"() {
    init_Data42();
    fromCharCode3 = /* @__PURE__ */ toEnum(boundedEnumChar);
  }
});

// output/PureScript.CST.Types/index.js
var ASCII2, Unicode, Nominal, Representational, Phantom, ModuleName, LF, CRLF, SmallInt, BigInt, BigHex, TokLeftParen, TokRightParen, TokLeftBrace, TokRightBrace, TokLeftSquare, TokRightSquare, TokLeftArrow, TokRightArrow, TokRightFatArrow, TokDoubleColon, TokForall, TokEquals, TokPipe, TokTick, TokDot, TokComma, TokUnderscore, TokBackslash, TokAt, TokLowerName, TokUpperName, TokOperator, TokSymbolName, TokSymbolArrow, TokHole, TokChar, TokString, TokRawString, TokInt, TokNumber, TokLayoutStart, TokLayoutSep, TokLayoutEnd, Infix, Infixl, Infixr, Comment, Space, Line, FixityValue, FixityType, RecordPun, RecordField, DataAll, DataEnumerated, ExportValue, ExportOp, ExportType, ExportTypeOp, ExportClass, ExportModule, ExportError, ImportValue, ImportOp, ImportType, ImportTypeOp, ImportClass, ImportError, One, Many, TypeVarKinded, TypeVarName, TypeVar, TypeConstructor, TypeWildcard, TypeHole, TypeString, TypeInt, TypeRow, TypeRecord, TypeForall, TypeKinded, TypeApp, TypeOp, TypeOpName, TypeArrow, TypeArrowName, TypeConstrained, TypeParens, $$TypeError, ForeignValue, ForeignData, ForeignKind, FundepDetermined, FundepDetermines, BinderWildcard, BinderVar, BinderNamed, BinderConstructor, BinderBoolean, BinderChar, BinderString, BinderInt, BinderNumber, BinderArray, BinderRecord, BinderParens, BinderTyped, BinderOp, BinderError, DoLet, DoDiscard, DoBind, DoError, LetBindingSignature, LetBindingName, LetBindingPattern, LetBindingError, Unconditional, Guarded, ExprHole, ExprSection, ExprIdent, ExprConstructor, ExprBoolean, ExprChar, ExprString, ExprInt, ExprNumber, ExprArray, ExprRecord, ExprParens, ExprTyped, ExprInfix, ExprOp, ExprOpName, ExprNegate, ExprRecordAccessor, ExprRecordUpdate, ExprApp, ExprLambda, ExprIf, ExprCase, ExprLet, ExprDo, ExprAdo, ExprError, RecordUpdateLeaf, RecordUpdateBranch, InstanceBindingSignature, InstanceBindingName, DeclData, DeclType2, DeclNewtype, DeclClass, DeclInstanceChain, DeclDerive, DeclKindSignature, DeclSignature, DeclValue2, DeclFixity, DeclForeign, DeclRole, DeclError, eqModuleName;
var init_PureScript_CST = __esm({
  "output/PureScript.CST.Types/index.js"() {
    init_Data8();
    init_Data15();
    init_Data12();
    ASCII2 = /* @__PURE__ */ function() {
      function ASCII3() {
      }
      ;
      ASCII3.value = new ASCII3();
      return ASCII3;
    }();
    Unicode = /* @__PURE__ */ function() {
      function Unicode2() {
      }
      ;
      Unicode2.value = new Unicode2();
      return Unicode2;
    }();
    Nominal = /* @__PURE__ */ function() {
      function Nominal2() {
      }
      ;
      Nominal2.value = new Nominal2();
      return Nominal2;
    }();
    Representational = /* @__PURE__ */ function() {
      function Representational2() {
      }
      ;
      Representational2.value = new Representational2();
      return Representational2;
    }();
    Phantom = /* @__PURE__ */ function() {
      function Phantom2() {
      }
      ;
      Phantom2.value = new Phantom2();
      return Phantom2;
    }();
    ModuleName = function(x) {
      return x;
    };
    LF = /* @__PURE__ */ function() {
      function LF2() {
      }
      ;
      LF2.value = new LF2();
      return LF2;
    }();
    CRLF = /* @__PURE__ */ function() {
      function CRLF2() {
      }
      ;
      CRLF2.value = new CRLF2();
      return CRLF2;
    }();
    SmallInt = /* @__PURE__ */ function() {
      function SmallInt2(value0) {
        this.value0 = value0;
      }
      ;
      SmallInt2.create = function(value0) {
        return new SmallInt2(value0);
      };
      return SmallInt2;
    }();
    BigInt = /* @__PURE__ */ function() {
      function BigInt2(value0) {
        this.value0 = value0;
      }
      ;
      BigInt2.create = function(value0) {
        return new BigInt2(value0);
      };
      return BigInt2;
    }();
    BigHex = /* @__PURE__ */ function() {
      function BigHex2(value0) {
        this.value0 = value0;
      }
      ;
      BigHex2.create = function(value0) {
        return new BigHex2(value0);
      };
      return BigHex2;
    }();
    TokLeftParen = /* @__PURE__ */ function() {
      function TokLeftParen2() {
      }
      ;
      TokLeftParen2.value = new TokLeftParen2();
      return TokLeftParen2;
    }();
    TokRightParen = /* @__PURE__ */ function() {
      function TokRightParen2() {
      }
      ;
      TokRightParen2.value = new TokRightParen2();
      return TokRightParen2;
    }();
    TokLeftBrace = /* @__PURE__ */ function() {
      function TokLeftBrace2() {
      }
      ;
      TokLeftBrace2.value = new TokLeftBrace2();
      return TokLeftBrace2;
    }();
    TokRightBrace = /* @__PURE__ */ function() {
      function TokRightBrace2() {
      }
      ;
      TokRightBrace2.value = new TokRightBrace2();
      return TokRightBrace2;
    }();
    TokLeftSquare = /* @__PURE__ */ function() {
      function TokLeftSquare2() {
      }
      ;
      TokLeftSquare2.value = new TokLeftSquare2();
      return TokLeftSquare2;
    }();
    TokRightSquare = /* @__PURE__ */ function() {
      function TokRightSquare2() {
      }
      ;
      TokRightSquare2.value = new TokRightSquare2();
      return TokRightSquare2;
    }();
    TokLeftArrow = /* @__PURE__ */ function() {
      function TokLeftArrow2(value0) {
        this.value0 = value0;
      }
      ;
      TokLeftArrow2.create = function(value0) {
        return new TokLeftArrow2(value0);
      };
      return TokLeftArrow2;
    }();
    TokRightArrow = /* @__PURE__ */ function() {
      function TokRightArrow2(value0) {
        this.value0 = value0;
      }
      ;
      TokRightArrow2.create = function(value0) {
        return new TokRightArrow2(value0);
      };
      return TokRightArrow2;
    }();
    TokRightFatArrow = /* @__PURE__ */ function() {
      function TokRightFatArrow2(value0) {
        this.value0 = value0;
      }
      ;
      TokRightFatArrow2.create = function(value0) {
        return new TokRightFatArrow2(value0);
      };
      return TokRightFatArrow2;
    }();
    TokDoubleColon = /* @__PURE__ */ function() {
      function TokDoubleColon2(value0) {
        this.value0 = value0;
      }
      ;
      TokDoubleColon2.create = function(value0) {
        return new TokDoubleColon2(value0);
      };
      return TokDoubleColon2;
    }();
    TokForall = /* @__PURE__ */ function() {
      function TokForall2(value0) {
        this.value0 = value0;
      }
      ;
      TokForall2.create = function(value0) {
        return new TokForall2(value0);
      };
      return TokForall2;
    }();
    TokEquals = /* @__PURE__ */ function() {
      function TokEquals2() {
      }
      ;
      TokEquals2.value = new TokEquals2();
      return TokEquals2;
    }();
    TokPipe = /* @__PURE__ */ function() {
      function TokPipe2() {
      }
      ;
      TokPipe2.value = new TokPipe2();
      return TokPipe2;
    }();
    TokTick = /* @__PURE__ */ function() {
      function TokTick2() {
      }
      ;
      TokTick2.value = new TokTick2();
      return TokTick2;
    }();
    TokDot = /* @__PURE__ */ function() {
      function TokDot2() {
      }
      ;
      TokDot2.value = new TokDot2();
      return TokDot2;
    }();
    TokComma = /* @__PURE__ */ function() {
      function TokComma2() {
      }
      ;
      TokComma2.value = new TokComma2();
      return TokComma2;
    }();
    TokUnderscore = /* @__PURE__ */ function() {
      function TokUnderscore2() {
      }
      ;
      TokUnderscore2.value = new TokUnderscore2();
      return TokUnderscore2;
    }();
    TokBackslash = /* @__PURE__ */ function() {
      function TokBackslash2() {
      }
      ;
      TokBackslash2.value = new TokBackslash2();
      return TokBackslash2;
    }();
    TokAt = /* @__PURE__ */ function() {
      function TokAt2() {
      }
      ;
      TokAt2.value = new TokAt2();
      return TokAt2;
    }();
    TokLowerName = /* @__PURE__ */ function() {
      function TokLowerName2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokLowerName2.create = function(value0) {
        return function(value1) {
          return new TokLowerName2(value0, value1);
        };
      };
      return TokLowerName2;
    }();
    TokUpperName = /* @__PURE__ */ function() {
      function TokUpperName2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokUpperName2.create = function(value0) {
        return function(value1) {
          return new TokUpperName2(value0, value1);
        };
      };
      return TokUpperName2;
    }();
    TokOperator = /* @__PURE__ */ function() {
      function TokOperator2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokOperator2.create = function(value0) {
        return function(value1) {
          return new TokOperator2(value0, value1);
        };
      };
      return TokOperator2;
    }();
    TokSymbolName = /* @__PURE__ */ function() {
      function TokSymbolName2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokSymbolName2.create = function(value0) {
        return function(value1) {
          return new TokSymbolName2(value0, value1);
        };
      };
      return TokSymbolName2;
    }();
    TokSymbolArrow = /* @__PURE__ */ function() {
      function TokSymbolArrow2(value0) {
        this.value0 = value0;
      }
      ;
      TokSymbolArrow2.create = function(value0) {
        return new TokSymbolArrow2(value0);
      };
      return TokSymbolArrow2;
    }();
    TokHole = /* @__PURE__ */ function() {
      function TokHole2(value0) {
        this.value0 = value0;
      }
      ;
      TokHole2.create = function(value0) {
        return new TokHole2(value0);
      };
      return TokHole2;
    }();
    TokChar = /* @__PURE__ */ function() {
      function TokChar2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokChar2.create = function(value0) {
        return function(value1) {
          return new TokChar2(value0, value1);
        };
      };
      return TokChar2;
    }();
    TokString = /* @__PURE__ */ function() {
      function TokString2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokString2.create = function(value0) {
        return function(value1) {
          return new TokString2(value0, value1);
        };
      };
      return TokString2;
    }();
    TokRawString = /* @__PURE__ */ function() {
      function TokRawString2(value0) {
        this.value0 = value0;
      }
      ;
      TokRawString2.create = function(value0) {
        return new TokRawString2(value0);
      };
      return TokRawString2;
    }();
    TokInt = /* @__PURE__ */ function() {
      function TokInt2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokInt2.create = function(value0) {
        return function(value1) {
          return new TokInt2(value0, value1);
        };
      };
      return TokInt2;
    }();
    TokNumber = /* @__PURE__ */ function() {
      function TokNumber2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokNumber2.create = function(value0) {
        return function(value1) {
          return new TokNumber2(value0, value1);
        };
      };
      return TokNumber2;
    }();
    TokLayoutStart = /* @__PURE__ */ function() {
      function TokLayoutStart2(value0) {
        this.value0 = value0;
      }
      ;
      TokLayoutStart2.create = function(value0) {
        return new TokLayoutStart2(value0);
      };
      return TokLayoutStart2;
    }();
    TokLayoutSep = /* @__PURE__ */ function() {
      function TokLayoutSep2(value0) {
        this.value0 = value0;
      }
      ;
      TokLayoutSep2.create = function(value0) {
        return new TokLayoutSep2(value0);
      };
      return TokLayoutSep2;
    }();
    TokLayoutEnd = /* @__PURE__ */ function() {
      function TokLayoutEnd2(value0) {
        this.value0 = value0;
      }
      ;
      TokLayoutEnd2.create = function(value0) {
        return new TokLayoutEnd2(value0);
      };
      return TokLayoutEnd2;
    }();
    Infix = /* @__PURE__ */ function() {
      function Infix2() {
      }
      ;
      Infix2.value = new Infix2();
      return Infix2;
    }();
    Infixl = /* @__PURE__ */ function() {
      function Infixl2() {
      }
      ;
      Infixl2.value = new Infixl2();
      return Infixl2;
    }();
    Infixr = /* @__PURE__ */ function() {
      function Infixr2() {
      }
      ;
      Infixr2.value = new Infixr2();
      return Infixr2;
    }();
    Comment = /* @__PURE__ */ function() {
      function Comment2(value0) {
        this.value0 = value0;
      }
      ;
      Comment2.create = function(value0) {
        return new Comment2(value0);
      };
      return Comment2;
    }();
    Space = /* @__PURE__ */ function() {
      function Space2(value0) {
        this.value0 = value0;
      }
      ;
      Space2.create = function(value0) {
        return new Space2(value0);
      };
      return Space2;
    }();
    Line = /* @__PURE__ */ function() {
      function Line2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Line2.create = function(value0) {
        return function(value1) {
          return new Line2(value0, value1);
        };
      };
      return Line2;
    }();
    FixityValue = /* @__PURE__ */ function() {
      function FixityValue2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      FixityValue2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new FixityValue2(value0, value1, value2);
          };
        };
      };
      return FixityValue2;
    }();
    FixityType = /* @__PURE__ */ function() {
      function FixityType2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      FixityType2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new FixityType2(value0, value1, value2, value3);
            };
          };
        };
      };
      return FixityType2;
    }();
    RecordPun = /* @__PURE__ */ function() {
      function RecordPun2(value0) {
        this.value0 = value0;
      }
      ;
      RecordPun2.create = function(value0) {
        return new RecordPun2(value0);
      };
      return RecordPun2;
    }();
    RecordField = /* @__PURE__ */ function() {
      function RecordField2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      RecordField2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new RecordField2(value0, value1, value2);
          };
        };
      };
      return RecordField2;
    }();
    DataAll = /* @__PURE__ */ function() {
      function DataAll2(value0) {
        this.value0 = value0;
      }
      ;
      DataAll2.create = function(value0) {
        return new DataAll2(value0);
      };
      return DataAll2;
    }();
    DataEnumerated = /* @__PURE__ */ function() {
      function DataEnumerated2(value0) {
        this.value0 = value0;
      }
      ;
      DataEnumerated2.create = function(value0) {
        return new DataEnumerated2(value0);
      };
      return DataEnumerated2;
    }();
    ExportValue = /* @__PURE__ */ function() {
      function ExportValue2(value0) {
        this.value0 = value0;
      }
      ;
      ExportValue2.create = function(value0) {
        return new ExportValue2(value0);
      };
      return ExportValue2;
    }();
    ExportOp = /* @__PURE__ */ function() {
      function ExportOp2(value0) {
        this.value0 = value0;
      }
      ;
      ExportOp2.create = function(value0) {
        return new ExportOp2(value0);
      };
      return ExportOp2;
    }();
    ExportType = /* @__PURE__ */ function() {
      function ExportType2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExportType2.create = function(value0) {
        return function(value1) {
          return new ExportType2(value0, value1);
        };
      };
      return ExportType2;
    }();
    ExportTypeOp = /* @__PURE__ */ function() {
      function ExportTypeOp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExportTypeOp2.create = function(value0) {
        return function(value1) {
          return new ExportTypeOp2(value0, value1);
        };
      };
      return ExportTypeOp2;
    }();
    ExportClass = /* @__PURE__ */ function() {
      function ExportClass2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExportClass2.create = function(value0) {
        return function(value1) {
          return new ExportClass2(value0, value1);
        };
      };
      return ExportClass2;
    }();
    ExportModule = /* @__PURE__ */ function() {
      function ExportModule2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExportModule2.create = function(value0) {
        return function(value1) {
          return new ExportModule2(value0, value1);
        };
      };
      return ExportModule2;
    }();
    ExportError = /* @__PURE__ */ function() {
      function ExportError2(value0) {
        this.value0 = value0;
      }
      ;
      ExportError2.create = function(value0) {
        return new ExportError2(value0);
      };
      return ExportError2;
    }();
    ImportValue = /* @__PURE__ */ function() {
      function ImportValue2(value0) {
        this.value0 = value0;
      }
      ;
      ImportValue2.create = function(value0) {
        return new ImportValue2(value0);
      };
      return ImportValue2;
    }();
    ImportOp = /* @__PURE__ */ function() {
      function ImportOp2(value0) {
        this.value0 = value0;
      }
      ;
      ImportOp2.create = function(value0) {
        return new ImportOp2(value0);
      };
      return ImportOp2;
    }();
    ImportType = /* @__PURE__ */ function() {
      function ImportType2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ImportType2.create = function(value0) {
        return function(value1) {
          return new ImportType2(value0, value1);
        };
      };
      return ImportType2;
    }();
    ImportTypeOp = /* @__PURE__ */ function() {
      function ImportTypeOp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ImportTypeOp2.create = function(value0) {
        return function(value1) {
          return new ImportTypeOp2(value0, value1);
        };
      };
      return ImportTypeOp2;
    }();
    ImportClass = /* @__PURE__ */ function() {
      function ImportClass2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ImportClass2.create = function(value0) {
        return function(value1) {
          return new ImportClass2(value0, value1);
        };
      };
      return ImportClass2;
    }();
    ImportError = /* @__PURE__ */ function() {
      function ImportError2(value0) {
        this.value0 = value0;
      }
      ;
      ImportError2.create = function(value0) {
        return new ImportError2(value0);
      };
      return ImportError2;
    }();
    One = /* @__PURE__ */ function() {
      function One2(value0) {
        this.value0 = value0;
      }
      ;
      One2.create = function(value0) {
        return new One2(value0);
      };
      return One2;
    }();
    Many = /* @__PURE__ */ function() {
      function Many2(value0) {
        this.value0 = value0;
      }
      ;
      Many2.create = function(value0) {
        return new Many2(value0);
      };
      return Many2;
    }();
    TypeVarKinded = /* @__PURE__ */ function() {
      function TypeVarKinded2(value0) {
        this.value0 = value0;
      }
      ;
      TypeVarKinded2.create = function(value0) {
        return new TypeVarKinded2(value0);
      };
      return TypeVarKinded2;
    }();
    TypeVarName = /* @__PURE__ */ function() {
      function TypeVarName2(value0) {
        this.value0 = value0;
      }
      ;
      TypeVarName2.create = function(value0) {
        return new TypeVarName2(value0);
      };
      return TypeVarName2;
    }();
    TypeVar = /* @__PURE__ */ function() {
      function TypeVar2(value0) {
        this.value0 = value0;
      }
      ;
      TypeVar2.create = function(value0) {
        return new TypeVar2(value0);
      };
      return TypeVar2;
    }();
    TypeConstructor = /* @__PURE__ */ function() {
      function TypeConstructor2(value0) {
        this.value0 = value0;
      }
      ;
      TypeConstructor2.create = function(value0) {
        return new TypeConstructor2(value0);
      };
      return TypeConstructor2;
    }();
    TypeWildcard = /* @__PURE__ */ function() {
      function TypeWildcard2(value0) {
        this.value0 = value0;
      }
      ;
      TypeWildcard2.create = function(value0) {
        return new TypeWildcard2(value0);
      };
      return TypeWildcard2;
    }();
    TypeHole = /* @__PURE__ */ function() {
      function TypeHole2(value0) {
        this.value0 = value0;
      }
      ;
      TypeHole2.create = function(value0) {
        return new TypeHole2(value0);
      };
      return TypeHole2;
    }();
    TypeString = /* @__PURE__ */ function() {
      function TypeString2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TypeString2.create = function(value0) {
        return function(value1) {
          return new TypeString2(value0, value1);
        };
      };
      return TypeString2;
    }();
    TypeInt = /* @__PURE__ */ function() {
      function TypeInt2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TypeInt2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TypeInt2(value0, value1, value2);
          };
        };
      };
      return TypeInt2;
    }();
    TypeRow = /* @__PURE__ */ function() {
      function TypeRow2(value0) {
        this.value0 = value0;
      }
      ;
      TypeRow2.create = function(value0) {
        return new TypeRow2(value0);
      };
      return TypeRow2;
    }();
    TypeRecord = /* @__PURE__ */ function() {
      function TypeRecord2(value0) {
        this.value0 = value0;
      }
      ;
      TypeRecord2.create = function(value0) {
        return new TypeRecord2(value0);
      };
      return TypeRecord2;
    }();
    TypeForall = /* @__PURE__ */ function() {
      function TypeForall2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      TypeForall2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new TypeForall2(value0, value1, value2, value3);
            };
          };
        };
      };
      return TypeForall2;
    }();
    TypeKinded = /* @__PURE__ */ function() {
      function TypeKinded2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TypeKinded2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TypeKinded2(value0, value1, value2);
          };
        };
      };
      return TypeKinded2;
    }();
    TypeApp = /* @__PURE__ */ function() {
      function TypeApp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TypeApp2.create = function(value0) {
        return function(value1) {
          return new TypeApp2(value0, value1);
        };
      };
      return TypeApp2;
    }();
    TypeOp = /* @__PURE__ */ function() {
      function TypeOp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TypeOp2.create = function(value0) {
        return function(value1) {
          return new TypeOp2(value0, value1);
        };
      };
      return TypeOp2;
    }();
    TypeOpName = /* @__PURE__ */ function() {
      function TypeOpName2(value0) {
        this.value0 = value0;
      }
      ;
      TypeOpName2.create = function(value0) {
        return new TypeOpName2(value0);
      };
      return TypeOpName2;
    }();
    TypeArrow = /* @__PURE__ */ function() {
      function TypeArrow2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TypeArrow2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TypeArrow2(value0, value1, value2);
          };
        };
      };
      return TypeArrow2;
    }();
    TypeArrowName = /* @__PURE__ */ function() {
      function TypeArrowName2(value0) {
        this.value0 = value0;
      }
      ;
      TypeArrowName2.create = function(value0) {
        return new TypeArrowName2(value0);
      };
      return TypeArrowName2;
    }();
    TypeConstrained = /* @__PURE__ */ function() {
      function TypeConstrained2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TypeConstrained2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TypeConstrained2(value0, value1, value2);
          };
        };
      };
      return TypeConstrained2;
    }();
    TypeParens = /* @__PURE__ */ function() {
      function TypeParens2(value0) {
        this.value0 = value0;
      }
      ;
      TypeParens2.create = function(value0) {
        return new TypeParens2(value0);
      };
      return TypeParens2;
    }();
    $$TypeError = /* @__PURE__ */ function() {
      function $$TypeError2(value0) {
        this.value0 = value0;
      }
      ;
      $$TypeError2.create = function(value0) {
        return new $$TypeError2(value0);
      };
      return $$TypeError2;
    }();
    ForeignValue = /* @__PURE__ */ function() {
      function ForeignValue2(value0) {
        this.value0 = value0;
      }
      ;
      ForeignValue2.create = function(value0) {
        return new ForeignValue2(value0);
      };
      return ForeignValue2;
    }();
    ForeignData = /* @__PURE__ */ function() {
      function ForeignData2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ForeignData2.create = function(value0) {
        return function(value1) {
          return new ForeignData2(value0, value1);
        };
      };
      return ForeignData2;
    }();
    ForeignKind = /* @__PURE__ */ function() {
      function ForeignKind2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ForeignKind2.create = function(value0) {
        return function(value1) {
          return new ForeignKind2(value0, value1);
        };
      };
      return ForeignKind2;
    }();
    FundepDetermined = /* @__PURE__ */ function() {
      function FundepDetermined2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      FundepDetermined2.create = function(value0) {
        return function(value1) {
          return new FundepDetermined2(value0, value1);
        };
      };
      return FundepDetermined2;
    }();
    FundepDetermines = /* @__PURE__ */ function() {
      function FundepDetermines2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      FundepDetermines2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new FundepDetermines2(value0, value1, value2);
          };
        };
      };
      return FundepDetermines2;
    }();
    BinderWildcard = /* @__PURE__ */ function() {
      function BinderWildcard2(value0) {
        this.value0 = value0;
      }
      ;
      BinderWildcard2.create = function(value0) {
        return new BinderWildcard2(value0);
      };
      return BinderWildcard2;
    }();
    BinderVar = /* @__PURE__ */ function() {
      function BinderVar2(value0) {
        this.value0 = value0;
      }
      ;
      BinderVar2.create = function(value0) {
        return new BinderVar2(value0);
      };
      return BinderVar2;
    }();
    BinderNamed = /* @__PURE__ */ function() {
      function BinderNamed2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      BinderNamed2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new BinderNamed2(value0, value1, value2);
          };
        };
      };
      return BinderNamed2;
    }();
    BinderConstructor = /* @__PURE__ */ function() {
      function BinderConstructor2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      BinderConstructor2.create = function(value0) {
        return function(value1) {
          return new BinderConstructor2(value0, value1);
        };
      };
      return BinderConstructor2;
    }();
    BinderBoolean = /* @__PURE__ */ function() {
      function BinderBoolean2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      BinderBoolean2.create = function(value0) {
        return function(value1) {
          return new BinderBoolean2(value0, value1);
        };
      };
      return BinderBoolean2;
    }();
    BinderChar = /* @__PURE__ */ function() {
      function BinderChar2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      BinderChar2.create = function(value0) {
        return function(value1) {
          return new BinderChar2(value0, value1);
        };
      };
      return BinderChar2;
    }();
    BinderString = /* @__PURE__ */ function() {
      function BinderString2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      BinderString2.create = function(value0) {
        return function(value1) {
          return new BinderString2(value0, value1);
        };
      };
      return BinderString2;
    }();
    BinderInt = /* @__PURE__ */ function() {
      function BinderInt2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      BinderInt2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new BinderInt2(value0, value1, value2);
          };
        };
      };
      return BinderInt2;
    }();
    BinderNumber = /* @__PURE__ */ function() {
      function BinderNumber2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      BinderNumber2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new BinderNumber2(value0, value1, value2);
          };
        };
      };
      return BinderNumber2;
    }();
    BinderArray = /* @__PURE__ */ function() {
      function BinderArray2(value0) {
        this.value0 = value0;
      }
      ;
      BinderArray2.create = function(value0) {
        return new BinderArray2(value0);
      };
      return BinderArray2;
    }();
    BinderRecord = /* @__PURE__ */ function() {
      function BinderRecord2(value0) {
        this.value0 = value0;
      }
      ;
      BinderRecord2.create = function(value0) {
        return new BinderRecord2(value0);
      };
      return BinderRecord2;
    }();
    BinderParens = /* @__PURE__ */ function() {
      function BinderParens2(value0) {
        this.value0 = value0;
      }
      ;
      BinderParens2.create = function(value0) {
        return new BinderParens2(value0);
      };
      return BinderParens2;
    }();
    BinderTyped = /* @__PURE__ */ function() {
      function BinderTyped2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      BinderTyped2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new BinderTyped2(value0, value1, value2);
          };
        };
      };
      return BinderTyped2;
    }();
    BinderOp = /* @__PURE__ */ function() {
      function BinderOp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      BinderOp2.create = function(value0) {
        return function(value1) {
          return new BinderOp2(value0, value1);
        };
      };
      return BinderOp2;
    }();
    BinderError = /* @__PURE__ */ function() {
      function BinderError2(value0) {
        this.value0 = value0;
      }
      ;
      BinderError2.create = function(value0) {
        return new BinderError2(value0);
      };
      return BinderError2;
    }();
    DoLet = /* @__PURE__ */ function() {
      function DoLet2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DoLet2.create = function(value0) {
        return function(value1) {
          return new DoLet2(value0, value1);
        };
      };
      return DoLet2;
    }();
    DoDiscard = /* @__PURE__ */ function() {
      function DoDiscard2(value0) {
        this.value0 = value0;
      }
      ;
      DoDiscard2.create = function(value0) {
        return new DoDiscard2(value0);
      };
      return DoDiscard2;
    }();
    DoBind = /* @__PURE__ */ function() {
      function DoBind2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      DoBind2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new DoBind2(value0, value1, value2);
          };
        };
      };
      return DoBind2;
    }();
    DoError = /* @__PURE__ */ function() {
      function DoError2(value0) {
        this.value0 = value0;
      }
      ;
      DoError2.create = function(value0) {
        return new DoError2(value0);
      };
      return DoError2;
    }();
    LetBindingSignature = /* @__PURE__ */ function() {
      function LetBindingSignature2(value0) {
        this.value0 = value0;
      }
      ;
      LetBindingSignature2.create = function(value0) {
        return new LetBindingSignature2(value0);
      };
      return LetBindingSignature2;
    }();
    LetBindingName = /* @__PURE__ */ function() {
      function LetBindingName2(value0) {
        this.value0 = value0;
      }
      ;
      LetBindingName2.create = function(value0) {
        return new LetBindingName2(value0);
      };
      return LetBindingName2;
    }();
    LetBindingPattern = /* @__PURE__ */ function() {
      function LetBindingPattern2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      LetBindingPattern2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new LetBindingPattern2(value0, value1, value2);
          };
        };
      };
      return LetBindingPattern2;
    }();
    LetBindingError = /* @__PURE__ */ function() {
      function LetBindingError2(value0) {
        this.value0 = value0;
      }
      ;
      LetBindingError2.create = function(value0) {
        return new LetBindingError2(value0);
      };
      return LetBindingError2;
    }();
    Unconditional = /* @__PURE__ */ function() {
      function Unconditional2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Unconditional2.create = function(value0) {
        return function(value1) {
          return new Unconditional2(value0, value1);
        };
      };
      return Unconditional2;
    }();
    Guarded = /* @__PURE__ */ function() {
      function Guarded2(value0) {
        this.value0 = value0;
      }
      ;
      Guarded2.create = function(value0) {
        return new Guarded2(value0);
      };
      return Guarded2;
    }();
    ExprHole = /* @__PURE__ */ function() {
      function ExprHole2(value0) {
        this.value0 = value0;
      }
      ;
      ExprHole2.create = function(value0) {
        return new ExprHole2(value0);
      };
      return ExprHole2;
    }();
    ExprSection = /* @__PURE__ */ function() {
      function ExprSection2(value0) {
        this.value0 = value0;
      }
      ;
      ExprSection2.create = function(value0) {
        return new ExprSection2(value0);
      };
      return ExprSection2;
    }();
    ExprIdent = /* @__PURE__ */ function() {
      function ExprIdent2(value0) {
        this.value0 = value0;
      }
      ;
      ExprIdent2.create = function(value0) {
        return new ExprIdent2(value0);
      };
      return ExprIdent2;
    }();
    ExprConstructor = /* @__PURE__ */ function() {
      function ExprConstructor2(value0) {
        this.value0 = value0;
      }
      ;
      ExprConstructor2.create = function(value0) {
        return new ExprConstructor2(value0);
      };
      return ExprConstructor2;
    }();
    ExprBoolean = /* @__PURE__ */ function() {
      function ExprBoolean2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprBoolean2.create = function(value0) {
        return function(value1) {
          return new ExprBoolean2(value0, value1);
        };
      };
      return ExprBoolean2;
    }();
    ExprChar = /* @__PURE__ */ function() {
      function ExprChar2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprChar2.create = function(value0) {
        return function(value1) {
          return new ExprChar2(value0, value1);
        };
      };
      return ExprChar2;
    }();
    ExprString = /* @__PURE__ */ function() {
      function ExprString2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprString2.create = function(value0) {
        return function(value1) {
          return new ExprString2(value0, value1);
        };
      };
      return ExprString2;
    }();
    ExprInt = /* @__PURE__ */ function() {
      function ExprInt2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprInt2.create = function(value0) {
        return function(value1) {
          return new ExprInt2(value0, value1);
        };
      };
      return ExprInt2;
    }();
    ExprNumber = /* @__PURE__ */ function() {
      function ExprNumber2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprNumber2.create = function(value0) {
        return function(value1) {
          return new ExprNumber2(value0, value1);
        };
      };
      return ExprNumber2;
    }();
    ExprArray = /* @__PURE__ */ function() {
      function ExprArray2(value0) {
        this.value0 = value0;
      }
      ;
      ExprArray2.create = function(value0) {
        return new ExprArray2(value0);
      };
      return ExprArray2;
    }();
    ExprRecord = /* @__PURE__ */ function() {
      function ExprRecord2(value0) {
        this.value0 = value0;
      }
      ;
      ExprRecord2.create = function(value0) {
        return new ExprRecord2(value0);
      };
      return ExprRecord2;
    }();
    ExprParens = /* @__PURE__ */ function() {
      function ExprParens2(value0) {
        this.value0 = value0;
      }
      ;
      ExprParens2.create = function(value0) {
        return new ExprParens2(value0);
      };
      return ExprParens2;
    }();
    ExprTyped = /* @__PURE__ */ function() {
      function ExprTyped2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      ExprTyped2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new ExprTyped2(value0, value1, value2);
          };
        };
      };
      return ExprTyped2;
    }();
    ExprInfix = /* @__PURE__ */ function() {
      function ExprInfix2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprInfix2.create = function(value0) {
        return function(value1) {
          return new ExprInfix2(value0, value1);
        };
      };
      return ExprInfix2;
    }();
    ExprOp = /* @__PURE__ */ function() {
      function ExprOp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprOp2.create = function(value0) {
        return function(value1) {
          return new ExprOp2(value0, value1);
        };
      };
      return ExprOp2;
    }();
    ExprOpName = /* @__PURE__ */ function() {
      function ExprOpName2(value0) {
        this.value0 = value0;
      }
      ;
      ExprOpName2.create = function(value0) {
        return new ExprOpName2(value0);
      };
      return ExprOpName2;
    }();
    ExprNegate = /* @__PURE__ */ function() {
      function ExprNegate2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprNegate2.create = function(value0) {
        return function(value1) {
          return new ExprNegate2(value0, value1);
        };
      };
      return ExprNegate2;
    }();
    ExprRecordAccessor = /* @__PURE__ */ function() {
      function ExprRecordAccessor2(value0) {
        this.value0 = value0;
      }
      ;
      ExprRecordAccessor2.create = function(value0) {
        return new ExprRecordAccessor2(value0);
      };
      return ExprRecordAccessor2;
    }();
    ExprRecordUpdate = /* @__PURE__ */ function() {
      function ExprRecordUpdate2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprRecordUpdate2.create = function(value0) {
        return function(value1) {
          return new ExprRecordUpdate2(value0, value1);
        };
      };
      return ExprRecordUpdate2;
    }();
    ExprApp = /* @__PURE__ */ function() {
      function ExprApp2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ExprApp2.create = function(value0) {
        return function(value1) {
          return new ExprApp2(value0, value1);
        };
      };
      return ExprApp2;
    }();
    ExprLambda = /* @__PURE__ */ function() {
      function ExprLambda2(value0) {
        this.value0 = value0;
      }
      ;
      ExprLambda2.create = function(value0) {
        return new ExprLambda2(value0);
      };
      return ExprLambda2;
    }();
    ExprIf = /* @__PURE__ */ function() {
      function ExprIf2(value0) {
        this.value0 = value0;
      }
      ;
      ExprIf2.create = function(value0) {
        return new ExprIf2(value0);
      };
      return ExprIf2;
    }();
    ExprCase = /* @__PURE__ */ function() {
      function ExprCase2(value0) {
        this.value0 = value0;
      }
      ;
      ExprCase2.create = function(value0) {
        return new ExprCase2(value0);
      };
      return ExprCase2;
    }();
    ExprLet = /* @__PURE__ */ function() {
      function ExprLet2(value0) {
        this.value0 = value0;
      }
      ;
      ExprLet2.create = function(value0) {
        return new ExprLet2(value0);
      };
      return ExprLet2;
    }();
    ExprDo = /* @__PURE__ */ function() {
      function ExprDo2(value0) {
        this.value0 = value0;
      }
      ;
      ExprDo2.create = function(value0) {
        return new ExprDo2(value0);
      };
      return ExprDo2;
    }();
    ExprAdo = /* @__PURE__ */ function() {
      function ExprAdo2(value0) {
        this.value0 = value0;
      }
      ;
      ExprAdo2.create = function(value0) {
        return new ExprAdo2(value0);
      };
      return ExprAdo2;
    }();
    ExprError = /* @__PURE__ */ function() {
      function ExprError2(value0) {
        this.value0 = value0;
      }
      ;
      ExprError2.create = function(value0) {
        return new ExprError2(value0);
      };
      return ExprError2;
    }();
    RecordUpdateLeaf = /* @__PURE__ */ function() {
      function RecordUpdateLeaf2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      RecordUpdateLeaf2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new RecordUpdateLeaf2(value0, value1, value2);
          };
        };
      };
      return RecordUpdateLeaf2;
    }();
    RecordUpdateBranch = /* @__PURE__ */ function() {
      function RecordUpdateBranch2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      RecordUpdateBranch2.create = function(value0) {
        return function(value1) {
          return new RecordUpdateBranch2(value0, value1);
        };
      };
      return RecordUpdateBranch2;
    }();
    InstanceBindingSignature = /* @__PURE__ */ function() {
      function InstanceBindingSignature2(value0) {
        this.value0 = value0;
      }
      ;
      InstanceBindingSignature2.create = function(value0) {
        return new InstanceBindingSignature2(value0);
      };
      return InstanceBindingSignature2;
    }();
    InstanceBindingName = /* @__PURE__ */ function() {
      function InstanceBindingName2(value0) {
        this.value0 = value0;
      }
      ;
      InstanceBindingName2.create = function(value0) {
        return new InstanceBindingName2(value0);
      };
      return InstanceBindingName2;
    }();
    DeclData = /* @__PURE__ */ function() {
      function DeclData2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DeclData2.create = function(value0) {
        return function(value1) {
          return new DeclData2(value0, value1);
        };
      };
      return DeclData2;
    }();
    DeclType2 = /* @__PURE__ */ function() {
      function DeclType3(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      DeclType3.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new DeclType3(value0, value1, value2);
          };
        };
      };
      return DeclType3;
    }();
    DeclNewtype = /* @__PURE__ */ function() {
      function DeclNewtype2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      DeclNewtype2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new DeclNewtype2(value0, value1, value2, value3);
            };
          };
        };
      };
      return DeclNewtype2;
    }();
    DeclClass = /* @__PURE__ */ function() {
      function DeclClass2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DeclClass2.create = function(value0) {
        return function(value1) {
          return new DeclClass2(value0, value1);
        };
      };
      return DeclClass2;
    }();
    DeclInstanceChain = /* @__PURE__ */ function() {
      function DeclInstanceChain2(value0) {
        this.value0 = value0;
      }
      ;
      DeclInstanceChain2.create = function(value0) {
        return new DeclInstanceChain2(value0);
      };
      return DeclInstanceChain2;
    }();
    DeclDerive = /* @__PURE__ */ function() {
      function DeclDerive2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      DeclDerive2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new DeclDerive2(value0, value1, value2);
          };
        };
      };
      return DeclDerive2;
    }();
    DeclKindSignature = /* @__PURE__ */ function() {
      function DeclKindSignature2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      DeclKindSignature2.create = function(value0) {
        return function(value1) {
          return new DeclKindSignature2(value0, value1);
        };
      };
      return DeclKindSignature2;
    }();
    DeclSignature = /* @__PURE__ */ function() {
      function DeclSignature2(value0) {
        this.value0 = value0;
      }
      ;
      DeclSignature2.create = function(value0) {
        return new DeclSignature2(value0);
      };
      return DeclSignature2;
    }();
    DeclValue2 = /* @__PURE__ */ function() {
      function DeclValue3(value0) {
        this.value0 = value0;
      }
      ;
      DeclValue3.create = function(value0) {
        return new DeclValue3(value0);
      };
      return DeclValue3;
    }();
    DeclFixity = /* @__PURE__ */ function() {
      function DeclFixity2(value0) {
        this.value0 = value0;
      }
      ;
      DeclFixity2.create = function(value0) {
        return new DeclFixity2(value0);
      };
      return DeclFixity2;
    }();
    DeclForeign = /* @__PURE__ */ function() {
      function DeclForeign2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      DeclForeign2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new DeclForeign2(value0, value1, value2);
          };
        };
      };
      return DeclForeign2;
    }();
    DeclRole = /* @__PURE__ */ function() {
      function DeclRole2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      DeclRole2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new DeclRole2(value0, value1, value2, value3);
            };
          };
        };
      };
      return DeclRole2;
    }();
    DeclError = /* @__PURE__ */ function() {
      function DeclError2(value0) {
        this.value0 = value0;
      }
      ;
      DeclError2.create = function(value0) {
        return new DeclError2(value0);
      };
      return DeclError2;
    }();
    eqModuleName = eqString;
  }
});

// output/PureScript.CST.Print/index.js
var ShowLayout, HideLayout, printQualified, printTokenWithOption, printLineFeed, printComment, printSourceTokenWithOption, printSourceToken;
var init_PureScript_CST2 = __esm({
  "output/PureScript.CST.Print/index.js"() {
    init_Data25();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data6();
    init_PureScript_CST();
    ShowLayout = /* @__PURE__ */ function() {
      function ShowLayout2() {
      }
      ;
      ShowLayout2.value = new ShowLayout2();
      return ShowLayout2;
    }();
    HideLayout = /* @__PURE__ */ function() {
      function HideLayout2() {
      }
      ;
      HideLayout2.value = new HideLayout2();
      return HideLayout2;
    }();
    printQualified = function(moduleName) {
      return function(name2) {
        if (moduleName instanceof Nothing) {
          return name2;
        }
        ;
        if (moduleName instanceof Just) {
          return unwrap()(moduleName.value0) + ("." + name2);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Print (line 124, column 34 - line 126, column 38): " + [moduleName.constructor.name]);
      };
    };
    printTokenWithOption = function(option) {
      return function(v) {
        if (v instanceof TokLeftParen) {
          return "(";
        }
        ;
        if (v instanceof TokRightParen) {
          return ")";
        }
        ;
        if (v instanceof TokLeftBrace) {
          return "{";
        }
        ;
        if (v instanceof TokRightBrace) {
          return "}";
        }
        ;
        if (v instanceof TokLeftSquare) {
          return "[";
        }
        ;
        if (v instanceof TokRightSquare) {
          return "]";
        }
        ;
        if (v instanceof TokLeftArrow) {
          if (v.value0 instanceof ASCII2) {
            return "<-";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "\u2190";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 51, column 5 - line 53, column 21): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokRightArrow) {
          if (v.value0 instanceof ASCII2) {
            return "->";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "\u2192";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 55, column 5 - line 57, column 21): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokRightFatArrow) {
          if (v.value0 instanceof ASCII2) {
            return "=>";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "\u21D2";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 59, column 5 - line 61, column 21): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokDoubleColon) {
          if (v.value0 instanceof ASCII2) {
            return "::";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "\u2237";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 63, column 5 - line 65, column 21): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokForall) {
          if (v.value0 instanceof ASCII2) {
            return "forall";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "\u2200";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 67, column 5 - line 69, column 21): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokEquals) {
          return "=";
        }
        ;
        if (v instanceof TokPipe) {
          return "|";
        }
        ;
        if (v instanceof TokTick) {
          return "`";
        }
        ;
        if (v instanceof TokDot) {
          return ".";
        }
        ;
        if (v instanceof TokComma) {
          return ",";
        }
        ;
        if (v instanceof TokUnderscore) {
          return "_";
        }
        ;
        if (v instanceof TokBackslash) {
          return "\\";
        }
        ;
        if (v instanceof TokAt) {
          return "@";
        }
        ;
        if (v instanceof TokLowerName) {
          return printQualified(v.value0)(v.value1);
        }
        ;
        if (v instanceof TokUpperName) {
          return printQualified(v.value0)(v.value1);
        }
        ;
        if (v instanceof TokOperator) {
          return printQualified(v.value0)(v.value1);
        }
        ;
        if (v instanceof TokSymbolName) {
          return printQualified(v.value0)("(" + (v.value1 + ")"));
        }
        ;
        if (v instanceof TokSymbolArrow) {
          if (v.value0 instanceof ASCII2) {
            return "(->)";
          }
          ;
          if (v.value0 instanceof Unicode) {
            return "(\u2192)";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 95, column 5 - line 97, column 23): " + [v.value0.constructor.name]);
        }
        ;
        if (v instanceof TokHole) {
          return "?" + v.value0;
        }
        ;
        if (v instanceof TokChar) {
          return "'" + (v.value0 + "'");
        }
        ;
        if (v instanceof TokString) {
          return '"' + (v.value0 + '"');
        }
        ;
        if (v instanceof TokRawString) {
          return '"""' + (v.value0 + '"""');
        }
        ;
        if (v instanceof TokInt) {
          return v.value0;
        }
        ;
        if (v instanceof TokNumber) {
          return v.value0;
        }
        ;
        if (v instanceof TokLayoutStart) {
          if (option instanceof ShowLayout) {
            return "{";
          }
          ;
          if (option instanceof HideLayout) {
            return "";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 111, column 5 - line 113, column 23): " + [option.constructor.name]);
        }
        ;
        if (v instanceof TokLayoutSep) {
          if (option instanceof ShowLayout) {
            return ";";
          }
          ;
          if (option instanceof HideLayout) {
            return "";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 115, column 5 - line 117, column 23): " + [option.constructor.name]);
        }
        ;
        if (v instanceof TokLayoutEnd) {
          if (option instanceof ShowLayout) {
            return "}";
          }
          ;
          if (option instanceof HideLayout) {
            return "";
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Print (line 119, column 5 - line 121, column 23): " + [option.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Print (line 37, column 31 - line 121, column 23): " + [v.constructor.name]);
      };
    };
    printLineFeed = function(v) {
      if (v instanceof LF) {
        return "\n";
      }
      ;
      if (v instanceof CRLF) {
        return "\r\n";
      }
      ;
      throw new Error("Failed pattern match at PureScript.CST.Print (line 135, column 17 - line 137, column 17): " + [v.constructor.name]);
    };
    printComment = function(k) {
      return function(v) {
        if (v instanceof Comment) {
          return v.value0;
        }
        ;
        if (v instanceof Space) {
          return power(monoidString)(" ")(v.value0);
        }
        ;
        if (v instanceof Line) {
          return power(monoidString)(k(v.value0))(v.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Print (line 129, column 18 - line 132, column 28): " + [v.constructor.name]);
      };
    };
    printSourceTokenWithOption = function(option) {
      return function(tok) {
        return foldMap(foldableArray)(monoidString)(printComment(printLineFeed))(tok.leadingComments) + (printTokenWithOption(option)(tok.value) + foldMap(foldableArray)(monoidString)(printComment(absurd))(tok.trailingComments));
      };
    };
    printSourceToken = /* @__PURE__ */ function() {
      return printSourceTokenWithOption(HideLayout.value);
    }();
  }
});

// output/PureScript.CST.Errors/index.js
var UnexpectedEof, ExpectedEof, UnexpectedToken, LexExpected, LexInvalidCharEscape, LexCharEscapeOutOfRange, LexIntOutOfRange, LexNumberOutOfRange;
var init_PureScript_CST3 = __esm({
  "output/PureScript.CST.Errors/index.js"() {
    init_PureScript_CST2();
    init_PureScript_CST();
    UnexpectedEof = /* @__PURE__ */ function() {
      function UnexpectedEof2() {
      }
      ;
      UnexpectedEof2.value = new UnexpectedEof2();
      return UnexpectedEof2;
    }();
    ExpectedEof = /* @__PURE__ */ function() {
      function ExpectedEof2(value0) {
        this.value0 = value0;
      }
      ;
      ExpectedEof2.create = function(value0) {
        return new ExpectedEof2(value0);
      };
      return ExpectedEof2;
    }();
    UnexpectedToken = /* @__PURE__ */ function() {
      function UnexpectedToken2(value0) {
        this.value0 = value0;
      }
      ;
      UnexpectedToken2.create = function(value0) {
        return new UnexpectedToken2(value0);
      };
      return UnexpectedToken2;
    }();
    LexExpected = /* @__PURE__ */ function() {
      function LexExpected2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      LexExpected2.create = function(value0) {
        return function(value1) {
          return new LexExpected2(value0, value1);
        };
      };
      return LexExpected2;
    }();
    LexInvalidCharEscape = /* @__PURE__ */ function() {
      function LexInvalidCharEscape2(value0) {
        this.value0 = value0;
      }
      ;
      LexInvalidCharEscape2.create = function(value0) {
        return new LexInvalidCharEscape2(value0);
      };
      return LexInvalidCharEscape2;
    }();
    LexCharEscapeOutOfRange = /* @__PURE__ */ function() {
      function LexCharEscapeOutOfRange2(value0) {
        this.value0 = value0;
      }
      ;
      LexCharEscapeOutOfRange2.create = function(value0) {
        return new LexCharEscapeOutOfRange2(value0);
      };
      return LexCharEscapeOutOfRange2;
    }();
    LexIntOutOfRange = /* @__PURE__ */ function() {
      function LexIntOutOfRange2(value0) {
        this.value0 = value0;
      }
      ;
      LexIntOutOfRange2.create = function(value0) {
        return new LexIntOutOfRange2(value0);
      };
      return LexIntOutOfRange2;
    }();
    LexNumberOutOfRange = /* @__PURE__ */ function() {
      function LexNumberOutOfRange2(value0) {
        this.value0 = value0;
      }
      ;
      LexNumberOutOfRange2.create = function(value0) {
        return new LexNumberOutOfRange2(value0);
      };
      return LexNumberOutOfRange2;
    }();
  }
});

// output/PureScript.CST.Layout/index.js
var LytRoot, LytTopDecl, LytTopDeclHead, LytDeclGuard, LytCase, LytCaseBinders, LytCaseGuard, LytLambdaBinders, LytParen, LytBrace, LytSquare, LytIf, LytThen, LytProperty, LytForall, LytTick, LytLet, LytLetStmt, LytWhere, LytOf, LytDo, LytAdo, lytToken, isTopDecl, isIndented, eqLayoutDelim, insertLayout, currentIndent;
var init_PureScript_CST4 = __esm({
  "output/PureScript.CST.Layout/index.js"() {
    init_Data39();
    init_Data();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data_List();
    init_Data15();
    init_Data9();
    init_Data22();
    init_PureScript_CST();
    LytRoot = /* @__PURE__ */ function() {
      function LytRoot2() {
      }
      ;
      LytRoot2.value = new LytRoot2();
      return LytRoot2;
    }();
    LytTopDecl = /* @__PURE__ */ function() {
      function LytTopDecl2() {
      }
      ;
      LytTopDecl2.value = new LytTopDecl2();
      return LytTopDecl2;
    }();
    LytTopDeclHead = /* @__PURE__ */ function() {
      function LytTopDeclHead2() {
      }
      ;
      LytTopDeclHead2.value = new LytTopDeclHead2();
      return LytTopDeclHead2;
    }();
    LytDeclGuard = /* @__PURE__ */ function() {
      function LytDeclGuard2() {
      }
      ;
      LytDeclGuard2.value = new LytDeclGuard2();
      return LytDeclGuard2;
    }();
    LytCase = /* @__PURE__ */ function() {
      function LytCase2() {
      }
      ;
      LytCase2.value = new LytCase2();
      return LytCase2;
    }();
    LytCaseBinders = /* @__PURE__ */ function() {
      function LytCaseBinders2() {
      }
      ;
      LytCaseBinders2.value = new LytCaseBinders2();
      return LytCaseBinders2;
    }();
    LytCaseGuard = /* @__PURE__ */ function() {
      function LytCaseGuard2() {
      }
      ;
      LytCaseGuard2.value = new LytCaseGuard2();
      return LytCaseGuard2;
    }();
    LytLambdaBinders = /* @__PURE__ */ function() {
      function LytLambdaBinders2() {
      }
      ;
      LytLambdaBinders2.value = new LytLambdaBinders2();
      return LytLambdaBinders2;
    }();
    LytParen = /* @__PURE__ */ function() {
      function LytParen2() {
      }
      ;
      LytParen2.value = new LytParen2();
      return LytParen2;
    }();
    LytBrace = /* @__PURE__ */ function() {
      function LytBrace2() {
      }
      ;
      LytBrace2.value = new LytBrace2();
      return LytBrace2;
    }();
    LytSquare = /* @__PURE__ */ function() {
      function LytSquare2() {
      }
      ;
      LytSquare2.value = new LytSquare2();
      return LytSquare2;
    }();
    LytIf = /* @__PURE__ */ function() {
      function LytIf2() {
      }
      ;
      LytIf2.value = new LytIf2();
      return LytIf2;
    }();
    LytThen = /* @__PURE__ */ function() {
      function LytThen2() {
      }
      ;
      LytThen2.value = new LytThen2();
      return LytThen2;
    }();
    LytProperty = /* @__PURE__ */ function() {
      function LytProperty2() {
      }
      ;
      LytProperty2.value = new LytProperty2();
      return LytProperty2;
    }();
    LytForall = /* @__PURE__ */ function() {
      function LytForall2() {
      }
      ;
      LytForall2.value = new LytForall2();
      return LytForall2;
    }();
    LytTick = /* @__PURE__ */ function() {
      function LytTick2() {
      }
      ;
      LytTick2.value = new LytTick2();
      return LytTick2;
    }();
    LytLet = /* @__PURE__ */ function() {
      function LytLet2() {
      }
      ;
      LytLet2.value = new LytLet2();
      return LytLet2;
    }();
    LytLetStmt = /* @__PURE__ */ function() {
      function LytLetStmt2() {
      }
      ;
      LytLetStmt2.value = new LytLetStmt2();
      return LytLetStmt2;
    }();
    LytWhere = /* @__PURE__ */ function() {
      function LytWhere2() {
      }
      ;
      LytWhere2.value = new LytWhere2();
      return LytWhere2;
    }();
    LytOf = /* @__PURE__ */ function() {
      function LytOf2() {
      }
      ;
      LytOf2.value = new LytOf2();
      return LytOf2;
    }();
    LytDo = /* @__PURE__ */ function() {
      function LytDo2() {
      }
      ;
      LytDo2.value = new LytDo2();
      return LytDo2;
    }();
    LytAdo = /* @__PURE__ */ function() {
      function LytAdo2() {
      }
      ;
      LytAdo2.value = new LytAdo2();
      return LytAdo2;
    }();
    lytToken = function(pos) {
      return function(value) {
        return {
          range: {
            start: pos,
            end: pos
          },
          leadingComments: [],
          trailingComments: [],
          value
        };
      };
    };
    isTopDecl = function(tokPos) {
      return function(v) {
        if (v instanceof Cons && (v.value0.value1 instanceof LytWhere && (v.value1 instanceof Cons && (v.value1.value0.value1 instanceof LytRoot && (v.value1.value1 instanceof Nil && tokPos.column === v.value0.value0.column))))) {
          return true;
        }
        ;
        return false;
      };
    };
    isIndented = function(v) {
      if (v instanceof LytLet) {
        return true;
      }
      ;
      if (v instanceof LytLetStmt) {
        return true;
      }
      ;
      if (v instanceof LytWhere) {
        return true;
      }
      ;
      if (v instanceof LytOf) {
        return true;
      }
      ;
      if (v instanceof LytDo) {
        return true;
      }
      ;
      if (v instanceof LytAdo) {
        return true;
      }
      ;
      return false;
    };
    eqLayoutDelim = {
      eq: function(x) {
        return function(y) {
          if (x instanceof LytRoot && y instanceof LytRoot) {
            return true;
          }
          ;
          if (x instanceof LytTopDecl && y instanceof LytTopDecl) {
            return true;
          }
          ;
          if (x instanceof LytTopDeclHead && y instanceof LytTopDeclHead) {
            return true;
          }
          ;
          if (x instanceof LytDeclGuard && y instanceof LytDeclGuard) {
            return true;
          }
          ;
          if (x instanceof LytCase && y instanceof LytCase) {
            return true;
          }
          ;
          if (x instanceof LytCaseBinders && y instanceof LytCaseBinders) {
            return true;
          }
          ;
          if (x instanceof LytCaseGuard && y instanceof LytCaseGuard) {
            return true;
          }
          ;
          if (x instanceof LytLambdaBinders && y instanceof LytLambdaBinders) {
            return true;
          }
          ;
          if (x instanceof LytParen && y instanceof LytParen) {
            return true;
          }
          ;
          if (x instanceof LytBrace && y instanceof LytBrace) {
            return true;
          }
          ;
          if (x instanceof LytSquare && y instanceof LytSquare) {
            return true;
          }
          ;
          if (x instanceof LytIf && y instanceof LytIf) {
            return true;
          }
          ;
          if (x instanceof LytThen && y instanceof LytThen) {
            return true;
          }
          ;
          if (x instanceof LytProperty && y instanceof LytProperty) {
            return true;
          }
          ;
          if (x instanceof LytForall && y instanceof LytForall) {
            return true;
          }
          ;
          if (x instanceof LytTick && y instanceof LytTick) {
            return true;
          }
          ;
          if (x instanceof LytLet && y instanceof LytLet) {
            return true;
          }
          ;
          if (x instanceof LytLetStmt && y instanceof LytLetStmt) {
            return true;
          }
          ;
          if (x instanceof LytWhere && y instanceof LytWhere) {
            return true;
          }
          ;
          if (x instanceof LytOf && y instanceof LytOf) {
            return true;
          }
          ;
          if (x instanceof LytDo && y instanceof LytDo) {
            return true;
          }
          ;
          if (x instanceof LytAdo && y instanceof LytAdo) {
            return true;
          }
          ;
          return false;
        };
      }
    };
    insertLayout = function(v) {
      return function(nextPos) {
        return function(stack) {
          var sepP = function(lytPos) {
            return v.range.start.column === lytPos.column && v.range.start.line !== lytPos.line;
          };
          var pushStack = function(lytPos) {
            return function(lyt) {
              return function(v1) {
                return new Tuple(new Cons(new Tuple(lytPos, lyt), v1.value0), v1.value1);
              };
            };
          };
          var popStack = function(v1) {
            return function(v2) {
              if (v2.value0 instanceof Cons && v1(v2.value0.value0.value1)) {
                return new Tuple(v2.value0.value1, v2.value1);
              }
              ;
              return v2;
            };
          };
          var offsideP = function(lytPos) {
            return function(lyt) {
              return isIndented(lyt) && v.range.start.column < lytPos.column;
            };
          };
          var offsideEndP = function(lytPos) {
            return function(lyt) {
              return isIndented(lyt) && v.range.start.column <= lytPos.column;
            };
          };
          var insertToken = function(token2) {
            return function(v1) {
              return new Tuple(v1.value0, snoc2(v1.value1)(new Tuple(token2, v1.value0)));
            };
          };
          var insertStart = function(lyt) {
            return function(v1) {
              var v2 = find(foldableList)(function($298) {
                return isIndented(snd($298));
              })(v1.value0);
              if (v2 instanceof Just && nextPos.column <= v2.value0.value0.column) {
                return v1;
              }
              ;
              return insertToken(lytToken(nextPos)(new TokLayoutStart(nextPos.column)))(pushStack(nextPos)(lyt)(v1));
            };
          };
          var insertEnd = function(indent) {
            return insertToken(lytToken(v.range.start)(new TokLayoutEnd(indent)));
          };
          var indentedP = $$const(isIndented);
          var indentSepP = function(lytPos) {
            return function(lyt) {
              return isIndented(lyt) && sepP(lytPos);
            };
          };
          var insertSep = function(v1) {
            var sepTok = lytToken(v.range.start)(new TokLayoutSep(v.range.start.column));
            if (v1.value0 instanceof Cons && (v1.value0.value0.value1 instanceof LytTopDecl && sepP(v1.value0.value0.value0))) {
              return insertToken(sepTok)(new Tuple(v1.value0.value1, v1.value1));
            }
            ;
            if (v1.value0 instanceof Cons && (v1.value0.value0.value1 instanceof LytTopDeclHead && sepP(v1.value0.value0.value0))) {
              return insertToken(sepTok)(new Tuple(v1.value0.value1, v1.value1));
            }
            ;
            if (v1.value0 instanceof Cons && indentSepP(v1.value0.value0.value0)(v1.value0.value0.value1)) {
              if (v1.value0.value0.value1 instanceof LytOf) {
                return pushStack(v.range.start)(LytCaseBinders.value)(insertToken(sepTok)(v1));
              }
              ;
              return insertToken(sepTok)(v1);
            }
            ;
            return v1;
          };
          var collapse = function(p) {
            var go = function($copy_v1) {
              return function($copy_acc) {
                var $tco_var_v1 = $copy_v1;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v1, acc) {
                  if (v1 instanceof Cons && p(v1.value0.value0)(v1.value0.value1)) {
                    $tco_var_v1 = v1.value1;
                    $copy_acc = function() {
                      var $111 = isIndented(v1.value0.value1);
                      if ($111) {
                        return snoc2(acc)(new Tuple(lytToken(v.range.start)(new TokLayoutEnd(v1.value0.value0.column)), v1.value1));
                      }
                      ;
                      return acc;
                    }();
                    return;
                  }
                  ;
                  $tco_done = true;
                  return new Tuple(v1, acc);
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                }
                ;
                return $tco_result;
              };
            };
            return uncurry(go);
          };
          var insertDefault = function(state2) {
            return insertToken(v)(insertSep(collapse(offsideP)(state2)));
          };
          var insertKwProperty = function(k) {
            return function(state2) {
              var v1 = insertDefault(state2);
              if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytProperty) {
                return new Tuple(v1.value0.value1, v1.value1);
              }
              ;
              return k(v1);
            };
          };
          var insert6 = function(v1) {
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "data")) {
              var v2 = insertDefault(v1);
              if (isTopDecl(v.range.start)(v2.value0)) {
                return pushStack(v.range.start)(LytTopDecl.value)(v2);
              }
              ;
              return popStack(function(v33) {
                return eq(eqLayoutDelim)(v33)(LytProperty.value);
              })(v2);
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "class")) {
              var v2 = insertDefault(v1);
              if (isTopDecl(v.range.start)(v2.value0)) {
                return pushStack(v.range.start)(LytTopDeclHead.value)(v2);
              }
              ;
              return popStack(function(v33) {
                return eq(eqLayoutDelim)(v33)(LytProperty.value);
              })(v2);
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "where")) {
              var whereP = function(v22) {
                return function(v33) {
                  if (v33 instanceof LytDo) {
                    return true;
                  }
                  ;
                  return offsideEndP(v22)(v33);
                };
              };
              if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytTopDeclHead) {
                return insertStart(LytWhere.value)(insertToken(v)(new Tuple(v1.value0.value1, v1.value1)));
              }
              ;
              if (v1.value0 instanceof Cons && v1.value0.value0.value1 instanceof LytProperty) {
                return insertToken(v)(new Tuple(v1.value0.value1, v1.value1));
              }
              ;
              return insertStart(LytWhere.value)(insertToken(v)(collapse(whereP)(v1)));
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "in")) {
              var inP = function(v22) {
                return function(v33) {
                  if (v33 instanceof LytLet) {
                    return false;
                  }
                  ;
                  if (v33 instanceof LytAdo) {
                    return false;
                  }
                  ;
                  return isIndented(v33);
                };
              };
              var v2 = collapse(inP)(v1);
              if (v2.value0 instanceof Cons && (v2.value0.value0.value1 instanceof LytLetStmt && (v2.value0.value1 instanceof Cons && v2.value0.value1.value0.value1 instanceof LytAdo))) {
                return insertToken(v)(insertEnd(v2.value0.value1.value0.value0.column)(insertEnd(v2.value0.value0.value0.column)(new Tuple(v2.value0.value1.value1, v2.value1))));
              }
              ;
              if (v2.value0 instanceof Cons && isIndented(v2.value0.value0.value1)) {
                return insertToken(v)(insertEnd(v2.value0.value0.value0.column)(new Tuple(v2.value0.value1, v2.value1)));
              }
              ;
              return popStack(function(v33) {
                return eq(eqLayoutDelim)(v33)(LytProperty.value);
              })(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "let")) {
              var next2 = function(v22) {
                if (v22.value0 instanceof Cons && (v22.value0.value0.value1 instanceof LytDo && v22.value0.value0.value0.column === v.range.start.column)) {
                  return insertStart(LytLetStmt.value)(v22);
                }
                ;
                if (v22.value0 instanceof Cons && (v22.value0.value0.value1 instanceof LytAdo && v22.value0.value0.value0.column === v.range.start.column)) {
                  return insertStart(LytLetStmt.value)(v22);
                }
                ;
                return insertStart(LytLet.value)(v22);
              };
              return insertKwProperty(next2)(v1);
            }
            ;
            if (v.value instanceof TokLowerName && v.value.value1 === "do") {
              return insertKwProperty(insertStart(LytDo.value))(v1);
            }
            ;
            if (v.value instanceof TokLowerName && v.value.value1 === "ado") {
              return insertKwProperty(insertStart(LytAdo.value))(v1);
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "case")) {
              return insertKwProperty(pushStack(v.range.start)(LytCase.value))(v1);
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "of")) {
              var v2 = collapse(indentedP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytCase) {
                return pushStack(nextPos)(LytCaseBinders.value)(insertStart(LytOf.value)(insertToken(v)(new Tuple(v2.value0.value1, v2.value1))));
              }
              ;
              return popStack(function(v33) {
                return eq(eqLayoutDelim)(v33)(LytProperty.value);
              })(insertDefault(v2));
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "if")) {
              return insertKwProperty(pushStack(v.range.start)(LytIf.value))(v1);
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "then")) {
              var v2 = collapse(indentedP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytIf) {
                return pushStack(v.range.start)(LytThen.value)(insertToken(v)(new Tuple(v2.value0.value1, v2.value1)));
              }
              ;
              return popStack(function(v33) {
                return eq(eqLayoutDelim)(v33)(LytProperty.value);
              })(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "else")) {
              var v2 = collapse(indentedP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytThen) {
                return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
              }
              ;
              var v32 = collapse(offsideP)(v1);
              if (isTopDecl(v.range.start)(v32.value0)) {
                return insertToken(v)(v32);
              }
              ;
              return popStack(function(v42) {
                return eq(eqLayoutDelim)(v42)(LytProperty.value);
              })(insertToken(v)(insertSep(v32)));
            }
            ;
            if (v.value instanceof TokForall) {
              return insertKwProperty(pushStack(v.range.start)(LytForall.value))(v1);
            }
            ;
            if (v.value instanceof TokBackslash) {
              return pushStack(v.range.start)(LytLambdaBinders.value)(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokRightArrow) {
              var guardP = function(v22) {
                if (v22 instanceof LytCaseBinders) {
                  return true;
                }
                ;
                if (v22 instanceof LytCaseGuard) {
                  return true;
                }
                ;
                if (v22 instanceof LytLambdaBinders) {
                  return true;
                }
                ;
                return false;
              };
              var arrowP = function(v22) {
                return function(v33) {
                  if (v33 instanceof LytDo) {
                    return true;
                  }
                  ;
                  if (v33 instanceof LytOf) {
                    return false;
                  }
                  ;
                  return offsideEndP(v22)(v33);
                };
              };
              return insertToken(v)(popStack(guardP)(collapse(arrowP)(v1)));
            }
            ;
            if (v.value instanceof TokEquals) {
              var equalsP = function(v22) {
                return function(v33) {
                  if (v33 instanceof LytWhere) {
                    return true;
                  }
                  ;
                  if (v33 instanceof LytLet) {
                    return true;
                  }
                  ;
                  if (v33 instanceof LytLetStmt) {
                    return true;
                  }
                  ;
                  return false;
                };
              };
              var v2 = collapse(equalsP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytDeclGuard) {
                return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
              }
              ;
              return insertDefault(v1);
            }
            ;
            if (v.value instanceof TokPipe) {
              var v2 = collapse(offsideEndP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytOf) {
                return insertToken(v)(pushStack(v.range.start)(LytCaseGuard.value)(v2));
              }
              ;
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytLet) {
                return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
              }
              ;
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytLetStmt) {
                return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
              }
              ;
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytWhere) {
                return insertToken(v)(pushStack(v.range.start)(LytDeclGuard.value)(v2));
              }
              ;
              return insertDefault(v1);
            }
            ;
            if (v.value instanceof TokTick) {
              var v2 = collapse(indentedP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytTick) {
                return insertToken(v)(new Tuple(v2.value0.value1, v2.value1));
              }
              ;
              return pushStack(v.range.start)(LytTick.value)(insertToken(v)(insertSep(collapse(offsideEndP)(v1))));
            }
            ;
            if (v.value instanceof TokComma) {
              var v2 = collapse(indentedP)(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytBrace) {
                return pushStack(v.range.start)(LytProperty.value)(insertToken(v)(v2));
              }
              ;
              return insertToken(v)(v2);
            }
            ;
            if (v.value instanceof TokDot) {
              var v2 = insertDefault(v1);
              if (v2.value0 instanceof Cons && v2.value0.value0.value1 instanceof LytForall) {
                return new Tuple(v2.value0.value1, v2.value1);
              }
              ;
              return pushStack(v.range.start)(LytProperty.value)(v2);
            }
            ;
            if (v.value instanceof TokLeftParen) {
              return pushStack(v.range.start)(LytParen.value)(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokLeftBrace) {
              return pushStack(v.range.start)(LytProperty.value)(pushStack(v.range.start)(LytBrace.value)(insertDefault(v1)));
            }
            ;
            if (v.value instanceof TokLeftSquare) {
              return pushStack(v.range.start)(LytSquare.value)(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokRightParen) {
              return insertToken(v)(popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytParen.value);
              })(collapse(indentedP)(v1)));
            }
            ;
            if (v.value instanceof TokRightBrace) {
              return insertToken(v)(popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytBrace.value);
              })(popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytProperty.value);
              })(collapse(indentedP)(v1))));
            }
            ;
            if (v.value instanceof TokRightSquare) {
              return insertToken(v)(popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytSquare.value);
              })(collapse(indentedP)(v1)));
            }
            ;
            if (v.value instanceof TokString) {
              return popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytProperty.value);
              })(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokLowerName && v.value.value0 instanceof Nothing) {
              return popStack(function(v22) {
                return eq(eqLayoutDelim)(v22)(LytProperty.value);
              })(insertDefault(v1));
            }
            ;
            if (v.value instanceof TokOperator) {
              return insertToken(v)(insertSep(collapse(offsideEndP)(v1)));
            }
            ;
            return insertDefault(v1);
          };
          return insert6(new Tuple(stack, []));
        };
      };
    };
    currentIndent = /* @__PURE__ */ function() {
      var go = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
          if (v instanceof Cons) {
            if (isIndented(v.value0.value1)) {
              $tco_done = true;
              return new Just(v.value0.value0);
            }
            ;
            if (otherwise) {
              $copy_v = v.value1;
              return;
            }
            ;
          }
          ;
          $tco_done = true;
          return Nothing.value;
        }
        ;
        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }
        ;
        return $tco_result;
      };
      return go;
    }();
  }
});

// output/PureScript.CST.TokenStream/index.js
var TokenEOF, TokenError, TokenCons, step2, unwindLayout, layoutStack, consTokens;
var init_PureScript_CST5 = __esm({
  "output/PureScript.CST.TokenStream/index.js"() {
    init_Data();
    init_Data25();
    init_Data2();
    init_Data40();
    init_Data_List();
    init_Data23();
    init_Data22();
    init_PureScript_CST4();
    init_PureScript_CST();
    TokenEOF = /* @__PURE__ */ function() {
      function TokenEOF2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokenEOF2.create = function(value0) {
        return function(value1) {
          return new TokenEOF2(value0, value1);
        };
      };
      return TokenEOF2;
    }();
    TokenError = /* @__PURE__ */ function() {
      function TokenError2(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      TokenError2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new TokenError2(value0, value1, value2, value3);
            };
          };
        };
      };
      return TokenError2;
    }();
    TokenCons = /* @__PURE__ */ function() {
      function TokenCons3(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
      }
      ;
      TokenCons3.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return function(value3) {
              return new TokenCons3(value0, value1, value2, value3);
            };
          };
        };
      };
      return TokenCons3;
    }();
    step2 = /* @__PURE__ */ function() {
      var $29 = unwrap();
      return function($30) {
        return force($29($30));
      };
    }();
    unwindLayout = function(pos) {
      return function(eof2) {
        var go = function(stk) {
          return defer2(function(v) {
            if (stk instanceof Nil) {
              return step2(eof2);
            }
            ;
            if (stk instanceof Cons) {
              if (stk.value0.value1 instanceof LytRoot) {
                return step2(eof2);
              }
              ;
              if (isIndented(stk.value0.value1)) {
                return new TokenCons(lytToken(pos)(new TokLayoutEnd(stk.value0.value0.column)), pos, go(stk.value1), stk.value1);
              }
              ;
              if (otherwise) {
                return step2(go(stk.value1));
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.TokenStream (line 59, column 7 - line 66, column 27): " + [stk.value0.value1.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.TokenStream (line 56, column 43 - line 66, column 27): " + [stk.constructor.name]);
          });
        };
        return go;
      };
    };
    layoutStack = function(stream) {
      var v = step2(stream);
      if (v instanceof TokenEOF) {
        return Nil.value;
      }
      ;
      if (v instanceof TokenError) {
        return v.value3;
      }
      ;
      if (v instanceof TokenCons) {
        return v.value3;
      }
      ;
      throw new Error("Failed pattern match at PureScript.CST.TokenStream (line 48, column 22 - line 51, column 29): " + [v.constructor.name]);
    };
    consTokens = function(dictFoldable) {
      var go = function(v) {
        return function(v1) {
          return new Tuple(v.value0.range.start, defer2(function(v2) {
            return new TokenCons(v.value0, v1.value0, v1.value1, v.value1);
          }));
        };
      };
      return flip(foldr(dictFoldable)(go));
    };
  }
});

// output/PureScript.CST.Lexer/index.js
var LexFail, LexSucc, Lex, $$try3, toModuleName, qualLength, optional, mkUnexpected, regex2, satisfy, string, many, functorLex, spaceComment, fail2, char$prime, $$char, bumpText, bumpToken, bumpComment, applyLex, bindLex, applicativeLex, altLex, comment, lineComment, leadingComments, token, trailingComments, lexWithState, lex;
var init_PureScript_CST6 = __esm({
  "output/PureScript.CST.Lexer/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data_Array2();
    init_Data_Array();
    init_Data();
    init_Data49();
    init_Data16();
    init_Data18();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data37();
    init_Data40();
    init_Data_List();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data36();
    init_Data10();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data_String_Regex2();
    init_Data22();
    init_Data3();
    init_Partial2();
    init_PureScript_CST3();
    init_PureScript_CST4();
    init_PureScript_CST5();
    init_PureScript_CST();
    LexFail = /* @__PURE__ */ function() {
      function LexFail2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      LexFail2.create = function(value0) {
        return function(value1) {
          return new LexFail2(value0, value1);
        };
      };
      return LexFail2;
    }();
    LexSucc = /* @__PURE__ */ function() {
      function LexSucc2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      LexSucc2.create = function(value0) {
        return function(value1) {
          return new LexSucc2(value0, value1);
        };
      };
      return LexSucc2;
    }();
    Lex = function(x) {
      return x;
    };
    $$try3 = function(v) {
      return function(str) {
        var v1 = v(str);
        if (v1 instanceof LexFail) {
          return new LexFail(v1.value0, str);
        }
        ;
        if (v1 instanceof LexSucc) {
          return new LexSucc(v1.value0, v1.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 87, column 3 - line 89, column 31): " + [v1.constructor.name]);
      };
    };
    toModuleName = function(v) {
      if (v === "") {
        return Nothing.value;
      }
      ;
      return new Just(dropRight(1)(v));
    };
    qualLength = /* @__PURE__ */ maybe(0)(/* @__PURE__ */ function() {
      var $248 = add(semiringInt)(1);
      var $249 = unwrap();
      return function($250) {
        return $248(length5($249($250)));
      };
    }());
    optional = function(v) {
      return function(str) {
        var v1 = v(str);
        if (v1 instanceof LexFail) {
          if (length3(str) === length3(v1.value1)) {
            return new LexSucc(Nothing.value, str);
          }
          ;
          if (otherwise) {
            return new LexFail(v1.value0, v1.value1);
          }
          ;
        }
        ;
        if (v1 instanceof LexSucc) {
          return new LexSucc(new Just(v1.value0), v1.value1);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 136, column 3 - line 143, column 25): " + [v1.constructor.name]);
      };
    };
    mkUnexpected = function(str) {
      var start = take5(6)(str);
      var len = length5(start);
      var $87 = len === 0;
      if ($87) {
        return "end of file";
      }
      ;
      var $88 = len < 6;
      if ($88) {
        return start;
      }
      ;
      return start + "...";
    };
    regex2 = function(mkErr) {
      return function(regexStr) {
        var matchRegex = unsafeRegex("^(?:" + (regexStr + ")"))(unicode);
        return function(str) {
          var v = match(matchRegex)(str);
          var v1 = function(v2) {
            return new LexFail(function(v32) {
              return mkErr(mkUnexpected(str));
            }, str);
          };
          if (v instanceof Just) {
            var $90 = head3(v.value0);
            if ($90 instanceof Just) {
              return new LexSucc($90.value0, drop2(length3($90.value0))(str));
            }
            ;
            return v1(true);
          }
          ;
          return v1(true);
        };
      };
    };
    satisfy = function(mkErr) {
      return function(p) {
        return function(str) {
          var v = charAt2(0)(str);
          if (v instanceof Just && p(v.value0)) {
            return new LexSucc(v.value0, drop2(1)(str));
          }
          ;
          return new LexFail(function(v1) {
            return mkErr(mkUnexpected(str));
          }, str);
        };
      };
    };
    string = function(mkErr) {
      return function(match2) {
        return function(str) {
          var $95 = take2(length3(match2))(str) === match2;
          if ($95) {
            return new LexSucc(match2, drop2(length3(match2))(str));
          }
          ;
          return new LexFail(function(v) {
            return mkErr(mkUnexpected(str));
          }, str);
        };
      };
    };
    many = function(v) {
      return function(str) {
        return function __do2() {
          var valuesRef = newSTArray();
          var strRef = str;
          var contRef = true;
          var resRef = new LexSucc([], str);
          (function() {
            while (contRef) {
              (function __do3() {
                var str$prime = strRef;
                var v1 = v(str$prime);
                if (v1 instanceof LexFail) {
                  if (length3(str$prime) === length3(v1.value1)) {
                    var values3 = unsafeFreeze(valuesRef)();
                    resRef = new LexSucc(values3, v1.value1);
                    contRef = false;
                    return unit;
                  }
                  ;
                  if (otherwise) {
                    resRef = new LexFail(v1.value0, v1.value1);
                    contRef = false;
                    return unit;
                  }
                  ;
                }
                ;
                if (v1 instanceof LexSucc) {
                  push(v1.value0)(valuesRef)();
                  strRef = v1.value1;
                  return unit;
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Lexer (line 161, column 5 - line 175, column 18): " + [v1.constructor.name]);
              })();
            }
            ;
            return {};
          })();
          return resRef;
        }();
      };
    };
    functorLex = {
      map: function(f) {
        return function(v) {
          return function(str) {
            var v1 = v(str);
            if (v1 instanceof LexFail) {
              return new LexFail(v1.value0, v1.value1);
            }
            ;
            if (v1 instanceof LexSucc) {
              return new LexSucc(f(v1.value0), v1.value1);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 49, column 5 - line 51, column 37): " + [v1.constructor.name]);
          };
        };
      }
    };
    spaceComment = /* @__PURE__ */ function() {
      return map(functorLex)(length3)(regex2(LexExpected.create("spaces"))(" +"));
    }();
    fail2 = function($251) {
      return Lex(LexFail.create($$const($251)));
    };
    char$prime = function(mkErr) {
      return function(res) {
        return function(match2) {
          return function(str) {
            var $109 = singleton4(match2) === take2(1)(str);
            if ($109) {
              return new LexSucc(res, drop2(1)(str));
            }
            ;
            return new LexFail(function(v) {
              return mkErr(mkUnexpected(str));
            }, str);
          };
        };
      };
    };
    $$char = function(mkErr) {
      return function(match2) {
        return function(str) {
          var $110 = singleton4(match2) === take2(1)(str);
          if ($110) {
            return new LexSucc(match2, drop2(1)(str));
          }
          ;
          return new LexFail(function(v) {
            return mkErr(mkUnexpected(str));
          }, str);
        };
      };
    };
    bumpText = function(v) {
      return function(colOffset) {
        return function(str) {
          var go = function($copy_n) {
            return function($copy_ix) {
              var $tco_var_n = $copy_n;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(n, ix2) {
                var v1 = indexOf$prime("\n")(ix2)(str);
                if (v1 instanceof Just) {
                  $tco_var_n = n + 1 | 0;
                  $copy_ix = v1.value0 + 1 | 0;
                  return;
                }
                ;
                if (v1 instanceof Nothing) {
                  if (n === 0) {
                    $tco_done = true;
                    return {
                      line: v.line,
                      column: (v.column + length5(str) | 0) + (colOffset * 2 | 0) | 0
                    };
                  }
                  ;
                  if (otherwise) {
                    $tco_done = true;
                    return {
                      line: v.line + n | 0,
                      column: length5(drop2(ix2)(str)) + colOffset | 0
                    };
                  }
                  ;
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Lexer (line 323, column 13 - line 332, column 12): " + [v1.constructor.name]);
              }
              ;
              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_n, $copy_ix);
              }
              ;
              return $tco_result;
            };
          };
          return go(0)(0);
        };
      };
    };
    bumpToken = function(v) {
      return function(v1) {
        if (v1 instanceof TokLeftParen) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokRightParen) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokLeftBrace) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokRightBrace) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokLeftSquare) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokRightSquare) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokLeftArrow && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokLeftArrow && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokRightArrow && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokRightArrow && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokRightFatArrow && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokRightFatArrow && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokDoubleColon && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokDoubleColon && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokForall && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 6 | 0
          };
        }
        ;
        if (v1 instanceof TokForall && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokEquals) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokPipe) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokTick) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokDot) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokComma) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokUnderscore) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokBackslash) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokAt) {
          return {
            line: v.line,
            column: v.column + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokLowerName) {
          return {
            line: v.line,
            column: (v.column + qualLength(v1.value0) | 0) + length5(v1.value1) | 0
          };
        }
        ;
        if (v1 instanceof TokUpperName) {
          return {
            line: v.line,
            column: (v.column + qualLength(v1.value0) | 0) + length5(v1.value1) | 0
          };
        }
        ;
        if (v1 instanceof TokOperator) {
          return {
            line: v.line,
            column: (v.column + qualLength(v1.value0) | 0) + length5(v1.value1) | 0
          };
        }
        ;
        if (v1 instanceof TokSymbolName) {
          return {
            line: v.line,
            column: ((v.column + qualLength(v1.value0) | 0) + length5(v1.value1) | 0) + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokSymbolArrow && v1.value0 instanceof Unicode) {
          return {
            line: v.line,
            column: v.column + 3 | 0
          };
        }
        ;
        if (v1 instanceof TokSymbolArrow && v1.value0 instanceof ASCII2) {
          return {
            line: v.line,
            column: v.column + 4 | 0
          };
        }
        ;
        if (v1 instanceof TokHole) {
          return {
            line: v.line,
            column: (v.column + length5(v1.value0) | 0) + 1 | 0
          };
        }
        ;
        if (v1 instanceof TokChar) {
          return {
            line: v.line,
            column: (v.column + length5(v1.value0) | 0) + 2 | 0
          };
        }
        ;
        if (v1 instanceof TokInt) {
          return {
            line: v.line,
            column: v.column + length5(v1.value0) | 0
          };
        }
        ;
        if (v1 instanceof TokNumber) {
          return {
            line: v.line,
            column: v.column + length5(v1.value0) | 0
          };
        }
        ;
        if (v1 instanceof TokString) {
          return bumpText(v)(1)(v1.value0);
        }
        ;
        if (v1 instanceof TokRawString) {
          return bumpText(v)(3)(v1.value0);
        }
        ;
        if (v1 instanceof TokLayoutStart) {
          return v;
        }
        ;
        if (v1 instanceof TokLayoutSep) {
          return v;
        }
        ;
        if (v1 instanceof TokLayoutEnd) {
          return v;
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 240, column 34 - line 318, column 8): " + [v1.constructor.name]);
      };
    };
    bumpComment = function(v) {
      return function(v1) {
        if (v1 instanceof Comment) {
          return bumpText(v)(0)(v1.value0);
        }
        ;
        if (v1 instanceof Space) {
          return {
            line: v.line,
            column: v.column + v1.value0 | 0
          };
        }
        ;
        if (v1 instanceof Line) {
          return {
            line: v.line + v1.value1 | 0,
            column: 0
          };
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 335, column 36 - line 341, column 34): " + [v1.constructor.name]);
      };
    };
    applyLex = {
      apply: function(v) {
        return function(v1) {
          return function(str) {
            var v2 = v(str);
            if (v2 instanceof LexFail) {
              return new LexFail(v2.value0, v2.value1);
            }
            ;
            if (v2 instanceof LexSucc) {
              var v32 = v1(v2.value1);
              if (v32 instanceof LexFail) {
                return new LexFail(v32.value0, v32.value1);
              }
              ;
              if (v32 instanceof LexSucc) {
                return new LexSucc(v2.value0(v32.value0), v32.value1);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Lexer (line 58, column 9 - line 61, column 32): " + [v32.constructor.name]);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 55, column 5 - line 61, column 32): " + [v2.constructor.name]);
          };
        };
      },
      Functor0: function() {
        return functorLex;
      }
    };
    bindLex = {
      bind: function(v) {
        return function(k) {
          return function(str) {
            var v1 = v(str);
            if (v1 instanceof LexFail) {
              return new LexFail(v1.value0, v1.value1);
            }
            ;
            if (v1 instanceof LexSucc) {
              var v2 = k(v1.value0);
              return v2(v1.value1);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 68, column 5 - line 72, column 16): " + [v1.constructor.name]);
          };
        };
      },
      Apply0: function() {
        return applyLex;
      }
    };
    applicativeLex = {
      pure: function($252) {
        return Lex(LexSucc.create($252));
      },
      Apply0: function() {
        return applyLex;
      }
    };
    altLex = {
      alt: function(v) {
        return function(v1) {
          return function(str) {
            var v2 = v(str);
            if (v2 instanceof LexFail) {
              if (length3(str) === length3(v2.value1)) {
                return v1(str);
              }
              ;
              if (otherwise) {
                return new LexFail(v2.value0, v2.value1);
              }
              ;
            }
            ;
            if (v2 instanceof LexSucc) {
              return new LexSucc(v2.value0, v2.value1);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 76, column 5 - line 83, column 20): " + [v2.constructor.name]);
          };
        };
      },
      Functor0: function() {
        return functorLex;
      }
    };
    comment = /* @__PURE__ */ function() {
      return alt(altLex)(regex2(LexExpected.create("block comment"))("\\{-(-(?!\\})|[^-]+)*(-\\}|$)"))(regex2(LexExpected.create("line comment"))("--[^\\r\\n]*"));
    }();
    lineComment = /* @__PURE__ */ function() {
      return alt(altLex)(map(functorLex)(function() {
        var $253 = Line.create(LF.value);
        return function($254) {
          return $253(length5($254));
        };
      }())(regex2(LexExpected.create("newline"))("\n+")))(map(functorLex)(function() {
        var $255 = Line.create(CRLF.value);
        return function($256) {
          return $255(function(v) {
            return div(euclideanRingInt)(v)(2);
          }(length5($256)));
        };
      }())(regex2(LexExpected.create("newline"))("(?:\r\n)+")));
    }();
    leadingComments = /* @__PURE__ */ function() {
      return many(alt(altLex)(map(functorLex)(Comment.create)(comment))(alt(altLex)(map(functorLex)(Space.create)(spaceComment))(lineComment)));
    }();
    token = /* @__PURE__ */ function() {
      var tokenTick = char$prime(LexExpected.create("backtick"))(TokTick.value)("`");
      var tokenRightSquare = char$prime(LexExpected.create("right square"))(TokRightSquare.value)("]");
      var tokenRightParen = char$prime(LexExpected.create("right paren"))(TokRightParen.value)(")");
      var tokenRightBrace = char$prime(LexExpected.create("right brace"))(TokRightBrace.value)("}");
      var tokenLeftSquare = char$prime(LexExpected.create("left square"))(TokLeftSquare.value)("[");
      var tokenLeftParen = char$prime(LexExpected.create("left paren"))(TokLeftParen.value)("(");
      var tokenLeftBrace = char$prime(LexExpected.create("left brace"))(TokLeftBrace.value)("{");
      var tokenComma = char$prime(LexExpected.create("comma"))(TokComma.value)(",");
      var stripUnderscores = replaceAll("_")("");
      var stringSpaceEscapeRegex = regex2(LexExpected.create("whitespace escape"))("\\\\[ \\r\\n]+\\\\");
      var stringCharsRegex = regex2(LexExpected.create("string characters"))('[^"\\\\]+');
      var rawStringCharsRegex = regex2(LexExpected.create("raw string characters"))('""""{0,2}([^"]+"{1,2})*[^"]*"""');
      var parseSymbolIdent = regex2(LexExpected.create("symbol"))("(?:[:!#$%&*+./<=>?@\\\\^|~-]|(?!\\p{P})\\p{S})+");
      var parseSymbol2 = map(functorLex)(function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            if (v === "->") {
              return new TokSymbolArrow(ASCII2.value);
            }
            ;
            if (v === "\u2192") {
              return new TokSymbolArrow(Unicode.value);
            }
            ;
            return new TokSymbolName(Nothing.value, v);
          }
          ;
          return new TokSymbolName(v1, v);
        };
      })($$try3(applyFirst(applyLex)(applySecond(applyLex)(tokenLeftParen)(parseSymbolIdent))(tokenRightParen)));
      var parseStringSpaceEscape = map(functorLex)(function(v) {
        return {
          raw: v,
          string: ""
        };
      })(stringSpaceEscapeRegex);
      var parseStringChars = map(functorLex)(function(v) {
        return {
          raw: v,
          string: v
        };
      })(stringCharsRegex);
      var parseRawString = map(functorLex)(function(v) {
        return new TokRawString(dropRight(3)(drop2(3)(v)));
      })(rawStringCharsRegex);
      var parseProper2 = regex2(LexExpected.create("proper name"))("\\p{Lu}[\\p{L}0-9_']*");
      var parseUpper = map(functorLex)(flip(TokUpperName.create))(parseProper2);
      var parseOperator2 = map(functorLex)(function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            if (v === "<-") {
              return new TokLeftArrow(ASCII2.value);
            }
            ;
            if (v === "\u2190") {
              return new TokLeftArrow(Unicode.value);
            }
            ;
            if (v === "->") {
              return new TokRightArrow(ASCII2.value);
            }
            ;
            if (v === "\u2192") {
              return new TokRightArrow(Unicode.value);
            }
            ;
            if (v === "=>") {
              return new TokRightFatArrow(ASCII2.value);
            }
            ;
            if (v === "\u21D2") {
              return new TokRightFatArrow(Unicode.value);
            }
            ;
            if (v === "::") {
              return new TokDoubleColon(ASCII2.value);
            }
            ;
            if (v === "\u2237") {
              return new TokDoubleColon(Unicode.value);
            }
            ;
            if (v === "\u2200") {
              return new TokForall(Unicode.value);
            }
            ;
            if (v === "=") {
              return TokEquals.value;
            }
            ;
            if (v === ".") {
              return TokDot.value;
            }
            ;
            if (v === "\\") {
              return TokBackslash.value;
            }
            ;
            if (v === "|") {
              return TokPipe.value;
            }
            ;
            if (v === "@") {
              return TokAt.value;
            }
            ;
            if (v === "`") {
              return TokTick.value;
            }
            ;
            return new TokOperator(Nothing.value, v);
          }
          ;
          return new TokOperator(v1, v);
        };
      })(parseSymbolIdent);
      var parseModuleNamePrefix = regex2(LexExpected.create("module name"))("(?:(?:\\p{Lu}[\\p{L}0-9_']*)\\.)*");
      var parseIdent2 = regex2(LexExpected.create("ident"))("[\\p{Ll}_][\\p{L}0-9_']*");
      var parseLower = map(functorLex)(function(v) {
        return function(v1) {
          if (v1 instanceof Nothing) {
            if (v === "forall") {
              return new TokForall(ASCII2.value);
            }
            ;
            if (v === "_") {
              return TokUnderscore.value;
            }
            ;
            return new TokLowerName(Nothing.value, v);
          }
          ;
          return new TokLowerName(v1, v);
        };
      })(parseIdent2);
      var parseName = alt(altLex)(parseLower)(alt(altLex)(parseUpper)(alt(altLex)(parseOperator2)(parseSymbol2)));
      var parseModuleName2 = apply(applyLex)(map(functorLex)(function(v) {
        return function(v1) {
          return v1(toModuleName(v));
        };
      })(parseModuleNamePrefix))(parseName);
      var parseExponentSign = alt(altLex)(string(LexExpected.create("negative"))("-"))(string(LexExpected.create("positive"))("+"));
      var intPartRegex = regex2(LexExpected.create("int part"))("(0|[1-9][0-9_]*)");
      var parseExponentPart = apply(applyLex)(map(functorLex)(function(v) {
        return function(v1) {
          return {
            sign: v,
            exponent: v1
          };
        };
      })(optional(parseExponentSign)))(intPartRegex);
      var hexIntRegex = regex2(LexExpected.create("hex int"))("[a-fA-F0-9]+");
      var hexIntPrefix = string(LexExpected.create("hex int prefix"))("0x");
      var parseHexInt = bind(bindLex)(applySecond(applyLex)(hexIntPrefix)(hexIntRegex))(function(raw) {
        var v = fromStringAs(hexadecimal)(raw);
        if (v instanceof Just) {
          return pure(applicativeLex)(new TokInt("0x" + raw, new SmallInt(v.value0)));
        }
        ;
        if (v instanceof Nothing) {
          return pure(applicativeLex)(new TokInt("0x" + raw, new BigHex(raw)));
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 579, column 5 - line 583, column 49): " + [v.constructor.name]);
      });
      var hexEscapeRegex = regex2(LexExpected.create("hex"))("[a-fA-F0-9]{1,6}");
      var parseHexEscape = bind(bindLex)(hexEscapeRegex)(function(esc) {
        var v = bindFlipped(bindMaybe)(fromCharCode3)(fromStringAs(hexadecimal)(esc));
        if (v instanceof Just) {
          return pure(applicativeLex)({
            raw: "\\x" + esc,
            "char": v.value0
          });
        }
        ;
        if (v instanceof Nothing) {
          return fail2(new LexCharEscapeOutOfRange(esc));
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Lexer (line 527, column 5 - line 531, column 43): " + [v.constructor.name]);
      });
      var fractionPartRegex = regex2(LexExpected.create("fraction part"))("[0-9_]+");
      var charSingleQuote = $$char(LexExpected.create("single quote"))("'");
      var charQuote = $$char(LexExpected.create("quote"))('"');
      var charQuestionMark = $$char(LexExpected.create("question mark"))("?");
      var parseHole2 = map(functorLex)(function(v) {
        return new TokHole(v);
      })($$try3(applySecond(applyLex)(charQuestionMark)(alt(altLex)(parseIdent2)(parseProper2))));
      var charExponent = $$char(LexExpected.create("exponent"))("e");
      var parseNumberExponentPart = optional(applySecond(applyLex)(charExponent)(parseExponentPart));
      var charDot = $$char(LexExpected.create("dot"))(".");
      var parseNumberFractionPart = optional($$try3(applySecond(applyLex)(charDot)(fractionPartRegex)));
      var parseNumber2 = bind(bindLex)(intPartRegex)(function(intPart) {
        return bind(bindLex)(parseNumberFractionPart)(function(fractionPart) {
          return bind(bindLex)(parseNumberExponentPart)(function(exponentPart) {
            var $211 = isNothing(fractionPart) && isNothing(exponentPart);
            if ($211) {
              var intVal = stripUnderscores(intPart);
              var v = fromString2(intVal);
              if (v instanceof Just) {
                return pure(applicativeLex)(new TokInt(intPart, new SmallInt(v.value0)));
              }
              ;
              if (v instanceof Nothing) {
                return pure(applicativeLex)(new TokInt(intPart, new BigInt(intVal)));
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Lexer (line 591, column 7 - line 595, column 48): " + [v.constructor.name]);
            }
            ;
            var raw = intPart + (foldMap(foldableMaybe)(monoidString)(function(fr) {
              return "." + fr;
            })(fractionPart) + foldMap(foldableMaybe)(monoidString)(function(ex) {
              return "e" + (fold(foldableMaybe)(monoidString)(ex.sign) + ex.exponent);
            })(exponentPart));
            var v = fromString(stripUnderscores(raw));
            if (v instanceof Just) {
              return pure(applicativeLex)(new TokNumber(raw, v.value0));
            }
            ;
            if (v instanceof Nothing) {
              return fail2(new LexNumberOutOfRange(raw));
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Lexer (line 602, column 7 - line 606, column 41): " + [v.constructor.name]);
          });
        });
      });
      var parseNumericLiteral = alt(altLex)(parseHexInt)(parseNumber2);
      var charBackslash = $$char(LexExpected.create("backslash"))("\\");
      var charAny = satisfy(LexExpected.create("char"))($$const(true));
      var parseEscape = bind(bindLex)(charAny)(function(ch) {
        if (ch === "t") {
          return pure(applicativeLex)({
            raw: "\\t",
            "char": "	"
          });
        }
        ;
        if (ch === "r") {
          return pure(applicativeLex)({
            raw: "\\r",
            "char": "\r"
          });
        }
        ;
        if (ch === "n") {
          return pure(applicativeLex)({
            raw: "\\n",
            "char": "\n"
          });
        }
        ;
        if (ch === '"') {
          return pure(applicativeLex)({
            raw: '\\"',
            "char": '"'
          });
        }
        ;
        if (ch === "'") {
          return pure(applicativeLex)({
            raw: "\\'",
            "char": "'"
          });
        }
        ;
        if (ch === "\\") {
          return pure(applicativeLex)({
            raw: "\\\\",
            "char": "\\"
          });
        }
        ;
        if (ch === "x") {
          return parseHexEscape;
        }
        ;
        return fail2(new LexInvalidCharEscape(singleton4(ch)));
      });
      var parseChar2 = bind(bindLex)(charAny)(function(ch) {
        if (ch === "\\") {
          return parseEscape;
        }
        ;
        if (ch === "'") {
          return fail2(new LexExpected("character", "empty character literal"));
        }
        ;
        return pure(applicativeLex)({
          raw: singleton4(ch),
          "char": ch
        });
      });
      var parseCharLiteral = map(functorLex)(function(v) {
        return new TokChar(v.raw, v["char"]);
      })(applyFirst(applyLex)(applySecond(applyLex)(charSingleQuote)(parseChar2))(charSingleQuote));
      var parseStringEscape = map(functorLex)(function(v) {
        return {
          raw: v.raw,
          string: singleton4(v["char"])
        };
      })(applySecond(applyLex)(charBackslash)(parseEscape));
      var parseStringPart = alt(altLex)(parseStringChars)(alt(altLex)(parseStringSpaceEscape)(parseStringEscape));
      var parseString2 = map(functorLex)(function(v) {
        var v1 = fold(foldableArray)(monoidRecord()(monoidRecordCons({
          reflectSymbol: function() {
            return "raw";
          }
        })(monoidString)()(monoidRecordCons({
          reflectSymbol: function() {
            return "string";
          }
        })(monoidString)()(monoidRecordNil))))(v);
        return new TokString(v1.raw, v1.string);
      })(applyFirst(applyLex)(applySecond(applyLex)(charQuote)(many(parseStringPart)))(charQuote));
      var parseStringLiteral = alt(altLex)(parseRawString)(parseString2);
      return alt(altLex)(parseHole2)(alt(altLex)(parseModuleName2)(alt(altLex)(parseCharLiteral)(alt(altLex)(parseStringLiteral)(alt(altLex)(parseNumericLiteral)(alt(altLex)(tokenLeftParen)(alt(altLex)(tokenRightParen)(alt(altLex)(tokenLeftBrace)(alt(altLex)(tokenRightBrace)(alt(altLex)(tokenLeftSquare)(alt(altLex)(tokenRightSquare)(alt(altLex)(tokenTick)(tokenComma))))))))))));
    }();
    trailingComments = /* @__PURE__ */ function() {
      return many(alt(altLex)(map(functorLex)(Comment.create)(comment))(map(functorLex)(Space.create)(spaceComment)));
    }();
    lexWithState = /* @__PURE__ */ function() {
      var token$prime = apply(applyLex)(apply(applyLex)(map(functorLex)(function(v) {
        return function(v1) {
          return function(v2) {
            return {
              token: v,
              trailing: v1,
              nextLeading: v2
            };
          };
        };
      })(token))(trailingComments))(leadingComments);
      var go = function(stack) {
        return function(startPos) {
          return function(leading) {
            return function(str) {
              return defer2(function(v) {
                var $232 = str === "";
                if ($232) {
                  return step2(unwindLayout(startPos)(defer2(function(v12) {
                    return new TokenEOF(startPos, leading);
                  }))(stack));
                }
                ;
                var v1 = token$prime(str);
                if (v1 instanceof LexFail) {
                  var errPos = bumpText(startPos)(0)(take2(length3(str) - length3(v1.value1) | 0)(str));
                  return new TokenError(errPos, v1.value0(unit), Nothing.value, stack);
                }
                ;
                if (v1 instanceof LexSucc) {
                  var endPos = bumpToken(startPos)(v1.value0.token);
                  var nextStart = foldl(foldableArray)(bumpComment)(foldl(foldableArray)(bumpComment)(endPos)(v1.value0.trailing))(v1.value0.nextLeading);
                  var posToken = {
                    range: {
                      start: startPos,
                      end: endPos
                    },
                    leadingComments: leading,
                    trailingComments: v1.value0.trailing,
                    value: v1.value0.token
                  };
                  var v2 = insertLayout(posToken)(nextStart)(stack);
                  return step2(snd(consTokens(foldableArray)(v2.value1)(new Tuple(nextStart, go(v2.value0)(nextStart)(v1.value0.nextLeading)(v1.value1)))));
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Lexer (line 203, column 7 - line 222, column 63): " + [v1.constructor.name]);
              });
            };
          };
        };
      };
      var init3 = function(initStack) {
        return function(initPos) {
          return function(str) {
            return defer2(function(v) {
              var v1 = leadingComments(str);
              if (v1 instanceof LexFail) {
                return unsafeCrashWith("Leading comments can't fail.");
              }
              ;
              if (v1 instanceof LexSucc) {
                var nextPos = foldl(foldableArray)(bumpComment)(initPos)(v1.value0);
                return step2(go(initStack)(nextPos)(v1.value0)(v1.value1));
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Lexer (line 190, column 5 - line 195, column 51): " + [v1.constructor.name]);
            });
          };
        };
      };
      return init3;
    }();
    lex = /* @__PURE__ */ function() {
      return lexWithState(new Cons(new Tuple({
        line: 0,
        column: 0
      }, LytRoot.value), Nil.value))({
        line: 0,
        column: 0
      });
    }();
  }
});

// output/IdePurescript.Tokens/index.js
var startsWithCapitalLetter, modulePart, identifierAtPoint, identPart, moduleRegex, containsArrow;
var init_IdePurescript6 = __esm({
  "output/IdePurescript.Tokens/index.js"() {
    init_Data4();
    init_Data15();
    init_Data23();
    init_Data_String2();
    init_Data_String4();
    init_Data_String_Regex();
    init_IdePurescript4();
    init_PureScript_CST6();
    init_PureScript_CST5();
    init_PureScript_CST();
    startsWithCapitalLetter = /* @__PURE__ */ test$prime(/* @__PURE__ */ regex("^[A-Z]")(noFlags));
    modulePart = "((?:[A-Z][A-Za-z0-9]*\\.)*(?:[A-Z][A-Za-z0-9]*))";
    identifierAtPoint = function(line) {
      return function(column) {
        var go = function($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
            if (v instanceof TokenCons) {
              var $2 = column < v.value0.range.start.column;
              if ($2) {
                $tco_done = true;
                return Nothing.value;
              }
              ;
              var $3 = column >= v.value0.range.end.column;
              if ($3) {
                $copy_v = step2(v.value2);
                return;
              }
              ;
              var range3 = {
                left: v.value0.range.start.column,
                right: v.value0.range.end.column
              };
              var res = function(mn) {
                return function(word) {
                  return new Just({
                    range: range3,
                    word,
                    qualifier: map(functorMaybe)(un()(ModuleName))(mn)
                  });
                };
              };
              if (v.value0.value instanceof TokLowerName) {
                $tco_done = true;
                return res(v.value0.value.value0)(v.value0.value.value1);
              }
              ;
              if (v.value0.value instanceof TokUpperName) {
                $tco_done = true;
                return res(v.value0.value.value0)(v.value0.value.value1);
              }
              ;
              if (v.value0.value instanceof TokOperator) {
                $tco_done = true;
                return res(v.value0.value.value0)(v.value0.value.value1);
              }
              ;
              if (v.value0.value instanceof TokSymbolName) {
                $tco_done = true;
                return res(v.value0.value.value0)(v.value0.value.value1);
              }
              ;
              $tco_done = true;
              return Nothing.value;
            }
            ;
            $tco_done = true;
            return Nothing.value;
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }
          ;
          return $tco_result;
        };
        return go(step2(lex(line)));
      };
    };
    identPart = "((?:[a-zA-Z_][a-zA-Z0-9_']*)|[:!#$%&*+./<=>?@\\^|~\\\\-]+)";
    moduleRegex = /* @__PURE__ */ function() {
      var modulePrefix = "(?:^|[^A-Za-z_.])(?:" + (modulePart + "\\.)");
      return regex(modulePrefix + ("?" + (identPart + "?$")))(noFlags);
    }();
    containsArrow = function(type$prime2) {
      return contains("->")(type$prime2) || contains("\u2192")(type$prime2);
    };
  }
});

// output/IdePurescript.Completion/index.js
var Module, Type2, DCtor, $$Function, Value, Kind, ModuleSuggestion, IdentSuggestion, QualifierSuggestion, simplifyImportChoice, getModuleSuggestions, explicitImportRegex, declarationTypeToNamespace, getSuggestions;
var init_IdePurescript7 = __esm({
  "output/IdePurescript.Completion/index.js"() {
    init_Control6();
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data8();
    init_Data25();
    init_Data4();
    init_Data21();
    init_Data_Map();
    init_Data15();
    init_Data12();
    init_Data7();
    init_Data48();
    init_Data_String5();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data_String6();
    init_Data29();
    init_Data22();
    init_Effect6();
    init_IdePurescript2();
    init_IdePurescript4();
    init_IdePurescript6();
    init_PscIde();
    Module = /* @__PURE__ */ function() {
      function Module3() {
      }
      ;
      Module3.value = new Module3();
      return Module3;
    }();
    Type2 = /* @__PURE__ */ function() {
      function Type3() {
      }
      ;
      Type3.value = new Type3();
      return Type3;
    }();
    DCtor = /* @__PURE__ */ function() {
      function DCtor2() {
      }
      ;
      DCtor2.value = new DCtor2();
      return DCtor2;
    }();
    $$Function = /* @__PURE__ */ function() {
      function $$Function3() {
      }
      ;
      $$Function3.value = new $$Function3();
      return $$Function3;
    }();
    Value = /* @__PURE__ */ function() {
      function Value3() {
      }
      ;
      Value3.value = new Value3();
      return Value3;
    }();
    Kind = /* @__PURE__ */ function() {
      function Kind2() {
      }
      ;
      Kind2.value = new Kind2();
      return Kind2;
    }();
    ModuleSuggestion = /* @__PURE__ */ function() {
      function ModuleSuggestion2(value0) {
        this.value0 = value0;
      }
      ;
      ModuleSuggestion2.create = function(value0) {
        return new ModuleSuggestion2(value0);
      };
      return ModuleSuggestion2;
    }();
    IdentSuggestion = /* @__PURE__ */ function() {
      function IdentSuggestion2(value0) {
        this.value0 = value0;
      }
      ;
      IdentSuggestion2.create = function(value0) {
        return new IdentSuggestion2(value0);
      };
      return IdentSuggestion2;
    }();
    QualifierSuggestion = /* @__PURE__ */ function() {
      function QualifierSuggestion2(value0) {
        this.value0 = value0;
      }
      ;
      QualifierSuggestion2.create = function(value0) {
        return new QualifierSuggestion2(value0);
      };
      return QualifierSuggestion2;
    }();
    simplifyImportChoice = function(f) {
      return function(before) {
        var isType = function(v) {
          if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclType) {
            return true;
          }
          ;
          return false;
        };
        var isDataConstructor = function(v) {
          if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclDataConstructor) {
            return true;
          }
          ;
          if (v.declarationType instanceof Just && (v.declarationType.value0 instanceof DeclValue && startsWithCapitalLetter(v.identifier))) {
            return true;
          }
          ;
          return false;
        };
        var dctorMatchesType = function(typeName) {
          return function(v) {
            return endsWith("-> " + typeName)(v["type'"]) || (endsWith("\u2192 " + typeName)(v["type'"]) || typeName === v["type'"]);
          };
        };
        var isTheSameButDataConstructor = function(v) {
          return function(v1) {
            return v.identifier === v1.identifier && (v["module'"] === v1["module'"] && (isDataConstructor(v1) && dctorMatchesType(v.identifier)(v1)));
          };
        };
        var go = function(acc) {
          return function(info3) {
            var $39 = isType(f(info3)) && any(foldableArray)(heytingAlgebraBoolean)(function() {
              var $135 = isTheSameButDataConstructor(f(info3));
              return function($136) {
                return $135(f($136));
              };
            }())(before);
            if ($39) {
              return acc;
            }
            ;
            return snoc2(acc)(info3);
          };
        };
        return foldl2(go)([])(before);
      };
    };
    getModuleSuggestions = function(port) {
      return function(prefix) {
        return bind(bindAff)(getAvailableModules(port))(function(list) {
          return pure(applicativeAff)(filter2(function(m) {
            return eq(eqMaybe(eqInt))(indexOf2(prefix)(m))(new Just(0));
          })(list));
        });
      };
    };
    explicitImportRegex = /* @__PURE__ */ function() {
      return regex("^import\\s+" + (modulePart + ("\\s+\\([^)]*?" + (identPart + "$"))))(noFlags);
    }();
    declarationTypeToNamespace = function(v) {
      if (v instanceof DeclValue) {
        return new Just(NSValue.value);
      }
      ;
      if (v instanceof DeclType) {
        return new Just(NSType.value);
      }
      ;
      if (v instanceof DeclTypeSynonym) {
        return new Just(NSType.value);
      }
      ;
      if (v instanceof DeclDataConstructor) {
        return new Just(NSValue.value);
      }
      ;
      if (v instanceof DeclTypeClass) {
        return new Just(NSType.value);
      }
      ;
      if (v instanceof DeclValueOperator) {
        return new Just(NSValue.value);
      }
      ;
      if (v instanceof DeclTypeOperator) {
        return new Just(NSType.value);
      }
      ;
      if (v instanceof DeclModule) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at IdePurescript.Completion (line 297, column 30 - line 305, column 24): " + [v.constructor.name]);
    };
    getSuggestions = function(_notify) {
      return function(port) {
        return function(v) {
          var takeExisting = function(v12) {
            return function(_token) {
              return function(completions) {
                if (v12 instanceof Just) {
                  return completions;
                }
                ;
                if (v12 instanceof Nothing) {
                  var ident = function(v2) {
                    return v2.value1.identifier;
                  };
                  var candidateModules$prime = fromFoldable3(ordString)(foldableArray)(map(functorArray)(function(x) {
                    return new Tuple(x, fromFoldable5(foldableArray)(ordString)(v.moduleInfo.candidateModules(x)));
                  })(nub2(ordString)(map(functorArray)(ident)(completions))));
                  var existingIdents = filter4(ordString)(function() {
                    var $137 = not(heytingAlgebraBoolean);
                    return function($138) {
                      return $137(isEmpty3($138));
                    };
                  }())(fromFoldableWith(ordString)(foldableArray)(union3(ordString))(map(functorArray)(function(v2) {
                    var exportedModules = fromFoldable5(foldableArray)(ordString)(cons2(v2["value1"]["module'"])(v2.value1.exportedFrom));
                    var candidates = fromMaybe(empty6)(lookup(ordString)(v2.value1.identifier)(candidateModules$prime));
                    var matches = intersection(ordString)(candidates)(exportedModules);
                    return new Tuple(v2.value1.identifier, matches);
                  })(completions)));
                  var filterCompletion = function(v2) {
                    var resolvedNS = alt(altMaybe)(bind(bindMaybe)(v2.value1.declarationType)(declarationTypeToNamespace))(new Just(v2.value0));
                    var isDctor = function() {
                      if (resolvedNS instanceof Just && resolvedNS.value0 instanceof NSValue) {
                        return startsWithCapitalLetter(v2.value1.identifier);
                      }
                      ;
                      return false;
                    }();
                    var v32 = lookup(ordString)(v2.value1.identifier)(existingIdents);
                    if (v32 instanceof Nothing) {
                      return true;
                    }
                    ;
                    if (isDctor) {
                      return true;
                    }
                    ;
                    if (v32 instanceof Just) {
                      var exportedModules = fromFoldable5(foldableArray)(ordString)(cons2(v2["value1"]["module'"])(v2.value1.exportedFrom));
                      return !isEmpty3(intersection(ordString)(v32.value0)(exportedModules));
                    }
                    ;
                    throw new Error("Failed pattern match at IdePurescript.Completion (line 228, column 9 - line 239, column 32): " + [v32.constructor.name]);
                  };
                  return filter2(filterCompletion)(completions);
                }
                ;
                throw new Error("Failed pattern match at IdePurescript.Completion (line 191, column 3 - line 191, column 57): " + [v12.constructor.name, _token.constructor.name, completions.constructor.name]);
              };
            };
          };
          var result2 = function(qualifier) {
            return function(prefix2) {
              return function(ns) {
                return function(v12) {
                  var resolvedNS = alt(altMaybe)(bind(bindMaybe)(v12.declarationType)(declarationTypeToNamespace))(ns);
                  var suggestType = function() {
                    if (resolvedNS instanceof Just && resolvedNS.value0 instanceof NSKind) {
                      return Kind.value;
                    }
                    ;
                    if (resolvedNS instanceof Just && resolvedNS.value0 instanceof NSType) {
                      return Type2.value;
                    }
                    ;
                    if (resolvedNS instanceof Just && resolvedNS.value0 instanceof NSValue) {
                      if (startsWithCapitalLetter(v12.identifier)) {
                        return DCtor.value;
                      }
                      ;
                      if (containsArrow(v12["type'"])) {
                        return $$Function.value;
                      }
                      ;
                    }
                    ;
                    if (resolvedNS instanceof Just && resolvedNS.value0 instanceof NSValue) {
                      return Value.value;
                    }
                    ;
                    if (resolvedNS instanceof Nothing) {
                      return Value.value;
                    }
                    ;
                    throw new Error("Failed pattern match at IdePurescript.Completion (line 272, column 7 - line 279, column 25): " + [resolvedNS.constructor.name]);
                  }();
                  var prefixModule = head(sortBy2(function(a) {
                    return function(b) {
                      return compare(ordInt)(length5(a))(length5(b));
                    };
                  })(filter2(function(m) {
                    return startsWith(m + ".")(v12["module'"]);
                  })(v12.exportedFrom)));
                  var preferredModule = head(intersect2(eqString)(v.preferredModules)(v12.exportedFrom));
                  var existingModule = head(intersect2(eqString)(v.moduleInfo.importedModules)(v12.exportedFrom));
                  var exportMod = fromMaybe(v12["module'"])(alt(altMaybe)(preferredModule)(alt(altMaybe)(existingModule)(prefixModule)));
                  return new IdentSuggestion({
                    origMod: v12["module'"],
                    exportMod,
                    identifier: v12.identifier,
                    qualifier,
                    suggestType,
                    prefix: prefix2,
                    valueType: v12["type'"],
                    namespace: ns,
                    exportedFrom: v12.exportedFrom,
                    documentation: v12.documentation
                  });
                };
              };
            };
          };
          var parsed = function() {
            var v12 = match$prime(moduleRegex)(v.line);
            if (v12 instanceof Just && (v12.value0.length === 3 && (v12["value0"][0] instanceof Just && (notEq(eqMaybe(eqString))(v12["value0"][1])(Nothing.value) || notEq(eqMaybe(eqString))(v12["value0"][2])(Nothing.value))))) {
              return new Just({
                mod: v12["value0"][1],
                token: fromMaybe("")(v12["value0"][2])
              });
            }
            ;
            return Nothing.value;
          }();
          var opts = {
            maxResults: v.maxResults,
            groupReexports: v.groupCompletions
          };
          var modResult = function(prefix2) {
            return function(moduleName) {
              return new ModuleSuggestion({
                text: moduleName,
                suggestType: Module.value,
                prefix: prefix2
              });
            };
          };
          var matchingQualifiers = function(v12) {
            return function(v2) {
              if (v12 instanceof Just) {
                return [];
              }
              ;
              if (v12 instanceof Nothing) {
                var convQ = function(v32) {
                  return new QualifierSuggestion({
                    text: v32.qualifier,
                    mod: v32.moduleName
                  });
                };
                return map(functorArray)(convQ)(filter2(function(v32) {
                  return eq(eqMaybe(eqInt))(indexOf2(v2)(v32.qualifier))(new Just(0));
                })(v.qualifiers));
              }
              ;
              throw new Error("Failed pattern match at IdePurescript.Completion (line 169, column 3 - line 169, column 37): " + [v12.constructor.name, v2.constructor.name]);
            };
          };
          var isImport2 = eq(eqMaybe(eqInt))(indexOf2("import ")(v.line))(new Just(0));
          var hasBracket = notEq(eqMaybe(eqInt))(indexOf2("(")(v.line))(Nothing.value);
          var moduleCompletion = isImport2 && !hasBracket;
          var moduleExplicit = isImport2 && hasBracket;
          var getModuleName2 = function(v12) {
            return function(token2) {
              if (v12 === "") {
                return token2;
              }
              ;
              return v12 + ("." + token2);
            };
          };
          var complete2 = function(results) {
            return {
              results,
              isIncomplete: false
            };
          };
          if (moduleExplicit) {
            var v1 = match$prime(explicitImportRegex)(v.line);
            if (v1 instanceof Just && (v1.value0.length === 3 && (v1["value0"][0] instanceof Just && (v1["value0"][1] instanceof Just && v1["value0"][2] instanceof Just)))) {
              var cc = function(ns) {
                return map(functorAff)(Tuple.create(ns))(getCompletion$prime(Nothing.value)([new PrefixFilter(v1["value0"][2].value0), new NamespaceFilter([ns])])(port)(v.moduleInfo.mainModule)(Nothing.value)([v1["value0"][1].value0])(v.moduleInfo.getQualifiedModule)(opts));
              };
              return bind(bindAff)(traverse(traversableArray)(applicativeAff)(cc)([NSValue.value, NSType.value]))(function(completions) {
                return pure(applicativeAff)(complete2(concatMap(function(v2) {
                  return map(functorArray)(result2(Nothing.value)(v1["value0"][2].value0)(new Just(v2.value0)))(v2.value1);
                })(completions)));
              });
            }
            ;
            return pure(applicativeAff)(complete2([]));
          }
          ;
          if (parsed instanceof Just) {
            if (moduleCompletion) {
              var prefix = getModuleName2(fromMaybe("")(parsed.value0.mod))(parsed.value0.token);
              return bind(bindAff)(getModuleSuggestions(port)(prefix))(function(completions) {
                return pure(applicativeAff)(complete2(map(functorArray)(modResult(prefix))(completions)));
              });
            }
            ;
            var cc = function(ns) {
              return map(functorAff)(map(functorArray)(Tuple.create(ns)))(getCompletion$prime(Nothing.value)([new PrefixFilter(parsed.value0.token), new NamespaceFilter([ns])])(port)(v.moduleInfo.mainModule)(parsed.value0.mod)(cons2("Prim")(v.moduleInfo.modules))(v.moduleInfo.getQualifiedModule)(opts));
            };
            return bind(bindAff)(traverse(traversableArray)(applicativeAff)(cc)([NSValue.value, NSType.value]))(function(v12) {
              var isIncomplete = any(foldableArray)(heytingAlgebraBoolean)(function(list) {
                return eq(eqMaybe(eqInt))(new Just(length4(list)))(v.maxResults);
              })(v12);
              var completions$prime = simplifyImportChoice(snd)(concat(v12));
              var results = append(semigroupArray)(matchingQualifiers(parsed.value0.mod)(parsed.value0.token))(map(functorArray)(function(v2) {
                return result2(parsed.value0.mod)(parsed.value0.token)(new Just(v2.value0))(v2.value1);
              })(takeExisting(parsed.value0.mod)(parsed.value0.token)(completions$prime)));
              return pure(applicativeAff)({
                results,
                isIncomplete
              });
            });
          }
          ;
          if (parsed instanceof Nothing) {
            return pure(applicativeAff)(complete2([]));
          }
          ;
          throw new Error("Failed pattern match at IdePurescript.Completion (line 134, column 5 - line 164, column 36): " + [parsed.constructor.name]);
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Commands/index.js
var CommandInfo, typedHoleExplicitCmd, typedHoleCmd, stopPscIdeCmd, startPscIdeCmd, sortImportsCmd, searchCmd, restartPscIdeCmd, replaceSuggestionCmd, replaceAllSuggestionsCmd, getAvailableModulesCmd, fixTypoCmd, cmdName, cleanCmd, caseSplitCmd, c, fixTypo$prime, replaceAllSuggestions, replaceSuggestion, sortImports, typedHole, buildCmd, build, addModuleImportCmd, addCompletionImportCmd, addCompletionImport, addClauseCmd, commands;
var init_LanguageServer_IdePurescript = __esm({
  "output/LanguageServer.IdePurescript.Commands/index.js"() {
    init_Data39();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Foreign();
    CommandInfo = /* @__PURE__ */ function() {
      function CommandInfo2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      CommandInfo2.create = function(value0) {
        return function(value1) {
          return new CommandInfo2(value0, value1);
        };
      };
      return CommandInfo2;
    }();
    typedHoleExplicitCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Insert typed hole suggestion", "typedHole-explicit");
    }();
    typedHoleCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Insert typed hole suggestion", "typedHole");
    }();
    stopPscIdeCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Stop Psc-Ide-Server", "stopPscIde");
    }();
    startPscIdeCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Start Psc-Ide-Server", "startPscIde");
    }();
    sortImportsCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Sort/reformat imports", "sortImports");
    }();
    searchCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Search identifiers", "search");
    }();
    restartPscIdeCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Restart Psc-Ide-Server", "restartPscIde");
    }();
    replaceSuggestionCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Apply Suggestion", "replaceSuggestion");
    }();
    replaceAllSuggestionsCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Replace all suggestions", "replaceAllSuggestions");
    }();
    getAvailableModulesCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Get available modules", "getAvailableModules");
    }();
    fixTypoCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Fix typo/add import", "fixTypo");
    }();
    cmdName = function(v) {
      return "purescript." + v.value1;
    };
    cleanCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Clean compiled output", "clean");
    }();
    caseSplitCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Case split (explicit position)", "caseSplit-explicit");
    }();
    c = function(v) {
      return function(args) {
        return {
          title: v.value0,
          command: cmdName(v),
          "arguments": toNullable(args)
        };
      };
    };
    fixTypo$prime = function(x) {
      return function(uri) {
        return function(row) {
          return function($$char2) {
            return function(tinfo) {
              return c(new CommandInfo(x, "fixTypo"))(new Just([unsafeToForeign(uri), unsafeToForeign(row), unsafeToForeign($$char2), tinfo]));
            };
          };
        };
      };
    };
    replaceAllSuggestions = function(text) {
      return function(uri) {
        return function(replacements) {
          return c(new CommandInfo(text, "replaceAllSuggestions"))(new Just([unsafeToForeign(uri), unsafeToForeign(replacements)]));
        };
      };
    };
    replaceSuggestion = function(title) {
      return function(uri) {
        return function(replacement) {
          return function(fixRange) {
            return c(new CommandInfo(title, "replaceSuggestion"))(new Just([unsafeToForeign(uri), unsafeToForeign(replacement), unsafeToForeign(fixRange)]));
          };
        };
      };
    };
    sortImports = function(uri) {
      return c(sortImportsCmd)(new Just([unsafeToForeign(uri)]));
    };
    typedHole = function(name2) {
      return function(url) {
        return function(range3) {
          return function(options) {
            return c(typedHoleCmd)(new Just(cons2(unsafeToForeign(name2))(cons2(unsafeToForeign(url))(cons2(unsafeToForeign(range3))(map(functorArray)(unsafeToForeign)(options))))));
          };
        };
      };
    };
    buildCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Build", "build");
    }();
    build = /* @__PURE__ */ function() {
      return c(buildCmd)(Nothing.value);
    }();
    addModuleImportCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Add module import", "addModuleImport");
    }();
    addCompletionImportCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Add completion import", "addCompletionImport");
    }();
    addCompletionImport = function(ident) {
      return function(mod2) {
        return function(qual) {
          return function(uri) {
            return function(ns) {
              return c(addCompletionImportCmd)(new Just([unsafeToForeign(ident), unsafeToForeign(toNullable(mod2)), unsafeToForeign(toNullable(qual)), unsafeToForeign(uri), unsafeToForeign(ns)]));
            };
          };
        };
      };
    };
    addClauseCmd = /* @__PURE__ */ function() {
      return new CommandInfo("Add clause (explicit position/cmd)", "addClause-explicit");
    }();
    commands = /* @__PURE__ */ map(functorArray)(cmdName)([addCompletionImportCmd, caseSplitCmd, addClauseCmd, replaceSuggestionCmd, buildCmd, cleanCmd, startPscIdeCmd, stopPscIdeCmd, restartPscIdeCmd, typedHoleExplicitCmd, replaceAllSuggestionsCmd, fixTypoCmd]);
  }
});

// output/LanguageServer.IdePurescript.Config/index.js
var NoFormatter, Purty, PursTidy, Pose, ignoreEmpty, getConfigMaybe, outputDirectory, pscIdePort, getConfig, getInt, getString, logLevel, packagePath, preludeModule, pursExe, srcPath, importsPreferredModules, sourceGlobs, getBoolean, noFsDiagnostics, revertExternsAndCacheDb, fullBuildOnSaveProgress, fullBuildOnSave, formatter, foreignExt, fastRebuild, exportsCodeLens, effectiveOutputDirectory, diagnosticsOnTypeDebounce, diagnosticsOnType, diagnosticsOnOpen, diagnosticsCodegen, declarationTypeCodeLens, codegenTargets, censorCodes, cacheDbRevertTimeout, buildCommand, autocompleteLimit, autocompleteGrouped, autocompleteAddImport, autoStartPscIde, autoCompleteAllModules, addSpagoSources, addPscPackageSources, addNpmPath;
var init_LanguageServer_IdePurescript2 = __esm({
  "output/LanguageServer.IdePurescript.Config/index.js"() {
    init_Control5();
    init_Control_Monad();
    init_Control_Monad_Except();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data20();
    init_Data15();
    init_Data29();
    init_Foreign();
    init_Foreign4();
    init_PscIde();
    init_PscIde3();
    NoFormatter = /* @__PURE__ */ function() {
      function NoFormatter2() {
      }
      ;
      NoFormatter2.value = new NoFormatter2();
      return NoFormatter2;
    }();
    Purty = /* @__PURE__ */ function() {
      function Purty2() {
      }
      ;
      Purty2.value = new Purty2();
      return Purty2;
    }();
    PursTidy = /* @__PURE__ */ function() {
      function PursTidy2() {
      }
      ;
      PursTidy2.value = new PursTidy2();
      return PursTidy2;
    }();
    Pose = /* @__PURE__ */ function() {
      function Pose2() {
      }
      ;
      Pose2.value = new Pose2();
      return Pose2;
    }();
    ignoreEmpty = function(v) {
      if (v instanceof Just && v.value0 === "") {
        return Nothing.value;
      }
      ;
      return v;
    };
    getConfigMaybe = function(readValue) {
      return function(key) {
        return function(settings) {
          var val = bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(settings)("purescript"))(function(ps) {
            return bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(ps)(key))(function(res) {
              return readValue(res);
            });
          });
          return either($$const(Nothing.value))(Just.create)(runExcept(val));
        };
      };
    };
    outputDirectory = /* @__PURE__ */ getConfigMaybe(/* @__PURE__ */ readString(monadIdentity))("outputDirectory");
    pscIdePort = /* @__PURE__ */ getConfigMaybe(/* @__PURE__ */ readInt(monadIdentity))("pscIdePort");
    getConfig = function(readValue) {
      return function(key) {
        return function($$default) {
          return function(settings) {
            return fromMaybe($$default)(getConfigMaybe(readValue)(key)(settings));
          };
        };
      };
    };
    getInt = /* @__PURE__ */ getConfig(/* @__PURE__ */ readInt(monadIdentity));
    getString = /* @__PURE__ */ getConfig(/* @__PURE__ */ readString(monadIdentity));
    logLevel = /* @__PURE__ */ function() {
      var $7 = getString("pscIdelogLevel")("");
      return function($8) {
        return function(v) {
          if (v === "all") {
            return new Just(All.value);
          }
          ;
          if (v === "none") {
            return new Just(None.value);
          }
          ;
          if (v === "debug") {
            return new Just(Debug.value);
          }
          ;
          if (v === "perf") {
            return new Just(Perf.value);
          }
          ;
          return Nothing.value;
        }($7($8));
      };
    }();
    packagePath = /* @__PURE__ */ getString("packagePath")("");
    preludeModule = /* @__PURE__ */ getString("preludeModule")("Prelude");
    pursExe = /* @__PURE__ */ getString("pursExe")("purs");
    srcPath = /* @__PURE__ */ getString("sourcePath")("src");
    importsPreferredModules = /* @__PURE__ */ getConfig(/* @__PURE__ */ composeKleisli(/* @__PURE__ */ bindExceptT(monadIdentity))(/* @__PURE__ */ readArray(monadIdentity))(/* @__PURE__ */ traverse(traversableArray)(/* @__PURE__ */ applicativeExceptT(monadIdentity))(/* @__PURE__ */ readString(monadIdentity))))("importsPreferredModules")([]);
    sourceGlobs = /* @__PURE__ */ getConfig(/* @__PURE__ */ composeKleisli(/* @__PURE__ */ bindExceptT(monadIdentity))(/* @__PURE__ */ readArray(monadIdentity))(/* @__PURE__ */ traverse(traversableArray)(/* @__PURE__ */ applicativeExceptT(monadIdentity))(/* @__PURE__ */ readString(monadIdentity))))("sourceGlobs")([]);
    getBoolean = /* @__PURE__ */ getConfig(/* @__PURE__ */ readBoolean(monadIdentity));
    noFsDiagnostics = /* @__PURE__ */ getBoolean("noFsDiagnostics")(false);
    revertExternsAndCacheDb = /* @__PURE__ */ getBoolean("revertExternsAndCacheDb")(false);
    fullBuildOnSaveProgress = /* @__PURE__ */ getBoolean("fullBuildOnSaveProgress")(true);
    fullBuildOnSave = /* @__PURE__ */ getBoolean("fullBuildOnSave")(false);
    formatter = /* @__PURE__ */ function() {
      var $9 = getString("formatter")("");
      return function($10) {
        return function(v) {
          if (v === "purty") {
            return Purty.value;
          }
          ;
          if (v === "purs-tidy") {
            return PursTidy.value;
          }
          ;
          if (v === "tidy") {
            return PursTidy.value;
          }
          ;
          if (v === "pose") {
            return Pose.value;
          }
          ;
          if (v === "") {
            return NoFormatter.value;
          }
          ;
          return NoFormatter.value;
        }($9($10));
      };
    }();
    foreignExt = /* @__PURE__ */ getString("foreignExt")(".js");
    fastRebuild = /* @__PURE__ */ getBoolean("fastRebuild")(true);
    exportsCodeLens = /* @__PURE__ */ getBoolean("exportsCodeLens")(true);
    effectiveOutputDirectory = /* @__PURE__ */ function() {
      var $11 = fromMaybe("output");
      return function($12) {
        return $11(ignoreEmpty(outputDirectory($12)));
      };
    }();
    diagnosticsOnTypeDebounce = /* @__PURE__ */ getInt("diagnosticsOnTypeDebounce")(100);
    diagnosticsOnType = /* @__PURE__ */ getBoolean("diagnosticsOnType")(false);
    diagnosticsOnOpen = /* @__PURE__ */ getBoolean("diagnosticsOnOpen")(false);
    diagnosticsCodegen = /* @__PURE__ */ getBoolean("diagnosticsCodegen")(false);
    declarationTypeCodeLens = /* @__PURE__ */ getBoolean("declarationTypeCodeLens")(true);
    codegenTargets = /* @__PURE__ */ function() {
      var $13 = map(functorMaybe)(map(functorArray)(Other.create));
      var $14 = getConfigMaybe(composeKleisli(bindExceptT(monadIdentity))(readArray(monadIdentity))(traverse(traversableArray)(applicativeExceptT(monadIdentity))(readString(monadIdentity))))("codegenTargets");
      return function($15) {
        return $13($14($15));
      };
    }();
    censorCodes = /* @__PURE__ */ getConfig(/* @__PURE__ */ composeKleisli(/* @__PURE__ */ bindExceptT(monadIdentity))(/* @__PURE__ */ readArray(monadIdentity))(/* @__PURE__ */ traverse(traversableArray)(/* @__PURE__ */ applicativeExceptT(monadIdentity))(/* @__PURE__ */ readString(monadIdentity))))("censorWarnings")([]);
    cacheDbRevertTimeout = /* @__PURE__ */ getInt("cacheDbRevertTimeout")(2500);
    buildCommand = /* @__PURE__ */ getString("buildCommand")("spago build --purs-args --json-errors");
    autocompleteLimit = /* @__PURE__ */ getConfigMaybe(/* @__PURE__ */ readInt(monadIdentity))("autocompleteLimit");
    autocompleteGrouped = /* @__PURE__ */ getBoolean("autocompleteGrouped")(false);
    autocompleteAddImport = /* @__PURE__ */ getBoolean("autocompleteAddImport")(true);
    autoStartPscIde = /* @__PURE__ */ getBoolean("autoStartPscIde")(true);
    autoCompleteAllModules = /* @__PURE__ */ getBoolean("autocompleteAllModules")(true);
    addSpagoSources = /* @__PURE__ */ getBoolean("addSpagoSources")(true);
    addPscPackageSources = /* @__PURE__ */ getBoolean("addPscPackageSources")(false);
    addNpmPath = /* @__PURE__ */ getBoolean("addNpmPath")(false);
  }
});

// output/LanguageServer.Protocol.DocumentStore/foreign.js
var getDocument, onDidSaveDocument, onDidCloseDocument, onDidChangeContent;
var init_foreign80 = __esm({
  "output/LanguageServer.Protocol.DocumentStore/foreign.js"() {
    getDocument = function(documents) {
      return function(uri) {
        return function() {
          return documents.get(uri);
        };
      };
    };
    onDidSaveDocument = function(documents) {
      return function(f) {
        return function() {
          return documents.onDidSave(function(p) {
            return f(p)();
          });
        };
      };
    };
    onDidCloseDocument = function(documents) {
      return function(f) {
        return function() {
          return documents.onDidClose(function(p) {
            return f(p)();
          });
        };
      };
    };
    onDidChangeContent = function(documents) {
      return function(f) {
        return function() {
          return documents.onDidChangeContent(function(p) {
            return f(p)();
          });
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.DocumentStore/index.js
var init_LanguageServer_Protocol = __esm({
  "output/LanguageServer.Protocol.DocumentStore/index.js"() {
    init_foreign80();
    init_foreign80();
  }
});

// output/LanguageServer.Protocol.Handlers/foreign.js
var import_vscode_jsonrpc, registerHandler, registerHandler0, registerNotificationHandler, onDefinition, onCompletion, onHover, onDocumentSymbol, onWorkspaceSymbol, onReferences, onCodeAction, onCodeLens, onFoldingRanges, onDocumentFormatting, onPrepareRename, onRenameRequest, onDidChangeConfiguration, publishDiagnostics, applyEditImpl, sendDiagnosticsBegin, sendDiagnosticsEnd, sendCleanBegin, sendCleanEnd, onExecuteCommand, onDidChangeWatchedFiles, onShutdown;
var init_foreign81 = __esm({
  "output/LanguageServer.Protocol.Handlers/foreign.js"() {
    import_vscode_jsonrpc = __toModule(require("vscode-jsonrpc"));
    registerHandler = function(registerF) {
      return function(f) {
        return function() {
          return registerF(function(x) {
            return f(x)();
          });
        };
      };
    };
    registerHandler0 = function(registerF) {
      return function(f) {
        return function() {
          return registerF(f);
        };
      };
    };
    registerNotificationHandler = function(registerF) {
      return function(f) {
        return function() {
          return registerF(function(x) {
            return f(x)();
          });
        };
      };
    };
    onDefinition = function(conn) {
      return registerHandler(conn.onDefinition);
    };
    onCompletion = function(conn) {
      return registerHandler(conn.onCompletion);
    };
    onHover = function(conn) {
      return registerHandler(conn.onHover);
    };
    onDocumentSymbol = function(conn) {
      return registerHandler(conn.onDocumentSymbol);
    };
    onWorkspaceSymbol = function(conn) {
      return registerHandler(conn.onWorkspaceSymbol);
    };
    onReferences = function(conn) {
      return registerHandler(conn.onReferences);
    };
    onCodeAction = function(conn) {
      return registerHandler(conn.onCodeAction);
    };
    onCodeLens = function(conn) {
      return registerHandler(conn.onCodeLens);
    };
    onFoldingRanges = function(conn) {
      return registerHandler(conn.onFoldingRanges);
    };
    onDocumentFormatting = function(conn) {
      return registerHandler(conn.onDocumentFormatting);
    };
    onPrepareRename = function(conn) {
      return registerHandler(conn.onPrepareRename);
    };
    onRenameRequest = function(conn) {
      return registerHandler(conn.onRenameRequest);
    };
    onDidChangeConfiguration = function(conn) {
      return registerNotificationHandler(conn.onDidChangeConfiguration);
    };
    publishDiagnostics = function(conn) {
      return function(params) {
        return function() {
          return conn.sendDiagnostics(params);
        };
      };
    };
    applyEditImpl = function(conn) {
      return function(edit) {
        return function() {
          return conn.workspace.applyEdit(edit).then(function(x) {
            return x.applied;
          });
        };
      };
    };
    sendDiagnosticsBegin = function(conn) {
      return function() {
        return conn.sendNotification(new import_vscode_jsonrpc.NotificationType0("textDocument/diagnosticsBegin"));
      };
    };
    sendDiagnosticsEnd = function(conn) {
      return function() {
        return conn.sendNotification(new import_vscode_jsonrpc.NotificationType0("textDocument/diagnosticsEnd"));
      };
    };
    sendCleanBegin = function(conn) {
      return function() {
        return conn.sendNotification(new import_vscode_jsonrpc.NotificationType0("textDocument/cleanBegin"));
      };
    };
    sendCleanEnd = function(conn) {
      return function() {
        return conn.sendNotification(new import_vscode_jsonrpc.NotificationType0("textDocument/cleanEnd"));
      };
    };
    onExecuteCommand = function(conn) {
      return registerHandler(conn.onExecuteCommand);
    };
    onDidChangeWatchedFiles = function(conn) {
      return registerNotificationHandler(conn.onDidChangeWatchedFiles);
    };
    onShutdown = function(conn) {
      return registerHandler0(conn.onShutdown);
    };
  }
});

// output/LanguageServer.Protocol.Handlers/index.js
var applyEdit;
var init_LanguageServer_Protocol2 = __esm({
  "output/LanguageServer.Protocol.Handlers/index.js"() {
    init_foreign81();
    init_Control13();
    init_foreign81();
    applyEdit = function(conn) {
      return function(edit) {
        return toAffE(applyEditImpl(conn)(edit));
      };
    };
  }
});

// output/LanguageServer.Protocol.Types/index.js
var FileSymbolKind, ModuleSymbolKind, NamespaceSymbolKind, PackageSymbolKind, ClassSymbolKind, MethodSymbolKind, PropertySymbolKind, FieldSymbolKind, ConstructorSymbolKind, EnumSymbolKind, InterfaceSymbolKind, FunctionSymbolKind, VariableSymbolKind, ConstantSymbolKind, StringSymbolKind, NumberSymbolKind, BooleanSymbolKind, ArraySymbolKind, Position, Range, CreatedChangeType, ChangedChangeType, DeletedChangeType, DocumentUri, TextDocumentIdentifier, Text, Method, $$Function2, Constructor, Field, Variable, Class, Interface, Module2, Property, Unit, Value2, Enum, Keyword, Snippet, Color, File, Reference, CompletionItem, ordDocumentUri, symbolKindToInt, supportsDocumentChanges, workspaceEdit, showPosition, showRange, showDocumentUri, showDiagnostic, readRange, markupContent, gotoDefinitionResult, fromFileChangeTypeCode, eqPosition, eqRange, positionOrd, ordRange, eqDocumentUri, eqOptionalVersionedTextDo, semigroupWorkspaceEdit, monoidWorkspaceEdit, defaultCompletionItem, completionItemKindToInt, completionItem, codeActionSourceSortImports, codeActionSourceOrganizeImports, codeActionResult, codeActionEmpty;
var init_LanguageServer_Protocol3 = __esm({
  "output/LanguageServer.Protocol.Types/index.js"() {
    init_Control4();
    init_Control5();
    init_Control_Monad_Except();
    init_Data39();
    init_Data_Array2();
    init_Data();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data4();
    init_Data20();
    init_Data15();
    init_Data23();
    init_Data33();
    init_Data41();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data_Semigroup();
    init_Data14();
    init_Data22();
    init_Data32();
    init_Foreign();
    init_Foreign4();
    init_Foreign3();
    init_Unsafe();
    FileSymbolKind = /* @__PURE__ */ function() {
      function FileSymbolKind2() {
      }
      ;
      FileSymbolKind2.value = new FileSymbolKind2();
      return FileSymbolKind2;
    }();
    ModuleSymbolKind = /* @__PURE__ */ function() {
      function ModuleSymbolKind2() {
      }
      ;
      ModuleSymbolKind2.value = new ModuleSymbolKind2();
      return ModuleSymbolKind2;
    }();
    NamespaceSymbolKind = /* @__PURE__ */ function() {
      function NamespaceSymbolKind2() {
      }
      ;
      NamespaceSymbolKind2.value = new NamespaceSymbolKind2();
      return NamespaceSymbolKind2;
    }();
    PackageSymbolKind = /* @__PURE__ */ function() {
      function PackageSymbolKind2() {
      }
      ;
      PackageSymbolKind2.value = new PackageSymbolKind2();
      return PackageSymbolKind2;
    }();
    ClassSymbolKind = /* @__PURE__ */ function() {
      function ClassSymbolKind2() {
      }
      ;
      ClassSymbolKind2.value = new ClassSymbolKind2();
      return ClassSymbolKind2;
    }();
    MethodSymbolKind = /* @__PURE__ */ function() {
      function MethodSymbolKind2() {
      }
      ;
      MethodSymbolKind2.value = new MethodSymbolKind2();
      return MethodSymbolKind2;
    }();
    PropertySymbolKind = /* @__PURE__ */ function() {
      function PropertySymbolKind2() {
      }
      ;
      PropertySymbolKind2.value = new PropertySymbolKind2();
      return PropertySymbolKind2;
    }();
    FieldSymbolKind = /* @__PURE__ */ function() {
      function FieldSymbolKind2() {
      }
      ;
      FieldSymbolKind2.value = new FieldSymbolKind2();
      return FieldSymbolKind2;
    }();
    ConstructorSymbolKind = /* @__PURE__ */ function() {
      function ConstructorSymbolKind2() {
      }
      ;
      ConstructorSymbolKind2.value = new ConstructorSymbolKind2();
      return ConstructorSymbolKind2;
    }();
    EnumSymbolKind = /* @__PURE__ */ function() {
      function EnumSymbolKind2() {
      }
      ;
      EnumSymbolKind2.value = new EnumSymbolKind2();
      return EnumSymbolKind2;
    }();
    InterfaceSymbolKind = /* @__PURE__ */ function() {
      function InterfaceSymbolKind2() {
      }
      ;
      InterfaceSymbolKind2.value = new InterfaceSymbolKind2();
      return InterfaceSymbolKind2;
    }();
    FunctionSymbolKind = /* @__PURE__ */ function() {
      function FunctionSymbolKind2() {
      }
      ;
      FunctionSymbolKind2.value = new FunctionSymbolKind2();
      return FunctionSymbolKind2;
    }();
    VariableSymbolKind = /* @__PURE__ */ function() {
      function VariableSymbolKind2() {
      }
      ;
      VariableSymbolKind2.value = new VariableSymbolKind2();
      return VariableSymbolKind2;
    }();
    ConstantSymbolKind = /* @__PURE__ */ function() {
      function ConstantSymbolKind2() {
      }
      ;
      ConstantSymbolKind2.value = new ConstantSymbolKind2();
      return ConstantSymbolKind2;
    }();
    StringSymbolKind = /* @__PURE__ */ function() {
      function StringSymbolKind2() {
      }
      ;
      StringSymbolKind2.value = new StringSymbolKind2();
      return StringSymbolKind2;
    }();
    NumberSymbolKind = /* @__PURE__ */ function() {
      function NumberSymbolKind2() {
      }
      ;
      NumberSymbolKind2.value = new NumberSymbolKind2();
      return NumberSymbolKind2;
    }();
    BooleanSymbolKind = /* @__PURE__ */ function() {
      function BooleanSymbolKind2() {
      }
      ;
      BooleanSymbolKind2.value = new BooleanSymbolKind2();
      return BooleanSymbolKind2;
    }();
    ArraySymbolKind = /* @__PURE__ */ function() {
      function ArraySymbolKind2() {
      }
      ;
      ArraySymbolKind2.value = new ArraySymbolKind2();
      return ArraySymbolKind2;
    }();
    Position = function(x) {
      return x;
    };
    Range = function(x) {
      return x;
    };
    CreatedChangeType = /* @__PURE__ */ function() {
      function CreatedChangeType2() {
      }
      ;
      CreatedChangeType2.value = new CreatedChangeType2();
      return CreatedChangeType2;
    }();
    ChangedChangeType = /* @__PURE__ */ function() {
      function ChangedChangeType2() {
      }
      ;
      ChangedChangeType2.value = new ChangedChangeType2();
      return ChangedChangeType2;
    }();
    DeletedChangeType = /* @__PURE__ */ function() {
      function DeletedChangeType2() {
      }
      ;
      DeletedChangeType2.value = new DeletedChangeType2();
      return DeletedChangeType2;
    }();
    DocumentUri = function(x) {
      return x;
    };
    TextDocumentIdentifier = function(x) {
      return x;
    };
    Text = /* @__PURE__ */ function() {
      function Text2() {
      }
      ;
      Text2.value = new Text2();
      return Text2;
    }();
    Method = /* @__PURE__ */ function() {
      function Method2() {
      }
      ;
      Method2.value = new Method2();
      return Method2;
    }();
    $$Function2 = /* @__PURE__ */ function() {
      function $$Function3() {
      }
      ;
      $$Function3.value = new $$Function3();
      return $$Function3;
    }();
    Constructor = /* @__PURE__ */ function() {
      function Constructor2() {
      }
      ;
      Constructor2.value = new Constructor2();
      return Constructor2;
    }();
    Field = /* @__PURE__ */ function() {
      function Field2() {
      }
      ;
      Field2.value = new Field2();
      return Field2;
    }();
    Variable = /* @__PURE__ */ function() {
      function Variable2() {
      }
      ;
      Variable2.value = new Variable2();
      return Variable2;
    }();
    Class = /* @__PURE__ */ function() {
      function Class2() {
      }
      ;
      Class2.value = new Class2();
      return Class2;
    }();
    Interface = /* @__PURE__ */ function() {
      function Interface2() {
      }
      ;
      Interface2.value = new Interface2();
      return Interface2;
    }();
    Module2 = /* @__PURE__ */ function() {
      function Module3() {
      }
      ;
      Module3.value = new Module3();
      return Module3;
    }();
    Property = /* @__PURE__ */ function() {
      function Property2() {
      }
      ;
      Property2.value = new Property2();
      return Property2;
    }();
    Unit = /* @__PURE__ */ function() {
      function Unit2() {
      }
      ;
      Unit2.value = new Unit2();
      return Unit2;
    }();
    Value2 = /* @__PURE__ */ function() {
      function Value3() {
      }
      ;
      Value3.value = new Value3();
      return Value3;
    }();
    Enum = /* @__PURE__ */ function() {
      function Enum2() {
      }
      ;
      Enum2.value = new Enum2();
      return Enum2;
    }();
    Keyword = /* @__PURE__ */ function() {
      function Keyword2() {
      }
      ;
      Keyword2.value = new Keyword2();
      return Keyword2;
    }();
    Snippet = /* @__PURE__ */ function() {
      function Snippet2() {
      }
      ;
      Snippet2.value = new Snippet2();
      return Snippet2;
    }();
    Color = /* @__PURE__ */ function() {
      function Color2() {
      }
      ;
      Color2.value = new Color2();
      return Color2;
    }();
    File = /* @__PURE__ */ function() {
      function File2() {
      }
      ;
      File2.value = new File2();
      return File2;
    }();
    Reference = /* @__PURE__ */ function() {
      function Reference2() {
      }
      ;
      Reference2.value = new Reference2();
      return Reference2;
    }();
    CompletionItem = function(x) {
      return x;
    };
    ordDocumentUri = ordString;
    symbolKindToInt = function(v) {
      if (v instanceof FileSymbolKind) {
        return 1;
      }
      ;
      if (v instanceof ModuleSymbolKind) {
        return 2;
      }
      ;
      if (v instanceof NamespaceSymbolKind) {
        return 3;
      }
      ;
      if (v instanceof PackageSymbolKind) {
        return 4;
      }
      ;
      if (v instanceof ClassSymbolKind) {
        return 5;
      }
      ;
      if (v instanceof MethodSymbolKind) {
        return 6;
      }
      ;
      if (v instanceof PropertySymbolKind) {
        return 7;
      }
      ;
      if (v instanceof FieldSymbolKind) {
        return 8;
      }
      ;
      if (v instanceof ConstructorSymbolKind) {
        return 9;
      }
      ;
      if (v instanceof EnumSymbolKind) {
        return 10;
      }
      ;
      if (v instanceof InterfaceSymbolKind) {
        return 11;
      }
      ;
      if (v instanceof FunctionSymbolKind) {
        return 12;
      }
      ;
      if (v instanceof VariableSymbolKind) {
        return 13;
      }
      ;
      if (v instanceof ConstantSymbolKind) {
        return 14;
      }
      ;
      if (v instanceof StringSymbolKind) {
        return 15;
      }
      ;
      if (v instanceof NumberSymbolKind) {
        return 16;
      }
      ;
      if (v instanceof BooleanSymbolKind) {
        return 17;
      }
      ;
      if (v instanceof ArraySymbolKind) {
        return 18;
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.Protocol.Types (line 239, column 19 - line 257, column 24): " + [v.constructor.name]);
    };
    supportsDocumentChanges = function(v) {
      if (v instanceof Nothing) {
        return false;
      }
      ;
      if (v instanceof Just) {
        return fromMaybe(false)(bind(bindMaybe)(bind(bindMaybe)(toMaybe(v.value0.workspace))(function($133) {
          return toMaybe(function(v1) {
            return v1.workspaceEdit;
          }($133));
        }))(function($134) {
          return toMaybe(function(v1) {
            return v1.documentChanges;
          }($134));
        }));
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.Protocol.Types (line 379, column 1 - line 379, column 63): " + [v.constructor.name]);
    };
    workspaceEdit = function(capabilities) {
      return function(edits) {
        var useDocumentChanges = supportsDocumentChanges(capabilities);
        var uri = function(v) {
          return v.textDocument.uri;
        };
        var edit = function(v) {
          return v.edits;
        };
        return {
          documentChanges: toNullable(function() {
            if (useDocumentChanges) {
              return new Just(edits);
            }
            ;
            return Nothing.value;
          }()),
          changes: toNullable(function() {
            if (useDocumentChanges) {
              return Nothing.value;
            }
            ;
            return new Just(fromFoldable4(foldableArray)(map(functorArray)(function(v) {
              return new Tuple(uri(v.value0), concat(cons2(edit(v.value0))(map(functorArray)(edit)(v.value1))));
            })(map(functorArray)(toNonEmpty)(groupBy2(function(a) {
              return function(b) {
                return uri(a) === uri(b);
              };
            })(sortWith(ordString)(uri)(edits))))));
          }())
        };
      };
    };
    showPosition = {
      show: function(v) {
        return "Position(" + (show(showInt)(v.line) + ("," + (show(showInt)(v.character) + ")")));
      }
    };
    showRange = {
      show: function(v) {
        return "Range(" + (show(showPosition)(v.start) + ("," + (show(showPosition)(v.end) + ")")));
      }
    };
    showDocumentUri = {
      show: function(v) {
        return "DocumentUri " + show(showString)(v);
      }
    };
    showDiagnostic = /* @__PURE__ */ showRecord()()(/* @__PURE__ */ showRecordFieldsCons({
      reflectSymbol: function() {
        return "code";
      }
    })(/* @__PURE__ */ showRecordFieldsCons({
      reflectSymbol: function() {
        return "message";
      }
    })(/* @__PURE__ */ showRecordFieldsCons({
      reflectSymbol: function() {
        return "range";
      }
    })(/* @__PURE__ */ showRecordFieldsCons({
      reflectSymbol: function() {
        return "severity";
      }
    })(/* @__PURE__ */ showRecordFieldsCons({
      reflectSymbol: function() {
        return "source";
      }
    })(showRecordFieldsNil)(/* @__PURE__ */ showNullable(showString)))(/* @__PURE__ */ showNullable(showInt)))(showRange))(showString))(/* @__PURE__ */ showNullable(showString)));
    readRange = function(r) {
      var readPosition = function(p) {
        return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(p)("line"))(readInt(monadIdentity)))(function(line) {
          return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(p)("character"))(readInt(monadIdentity)))(function(character) {
            return pure(applicativeExceptT(monadIdentity))({
              line,
              character
            });
          });
        });
      };
      return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(r)("start"))(readPosition))(function(start) {
        return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(r)("end"))(readPosition))(function(end2) {
          return pure(applicativeExceptT(monadIdentity))({
            start,
            end: end2
          });
        });
      });
    };
    markupContent = function(s) {
      return {
        kind: "markdown",
        value: s
      };
    };
    gotoDefinitionResult = /* @__PURE__ */ either(unsafeCoerce2)(unsafeCoerce2);
    fromFileChangeTypeCode = function(v) {
      if (v === 1) {
        return new Just(CreatedChangeType.value);
      }
      ;
      if (v === 2) {
        return new Just(ChangedChangeType.value);
      }
      ;
      if (v === 3) {
        return new Just(DeletedChangeType.value);
      }
      ;
      return Nothing.value;
    };
    eqPosition = {
      eq: function(v) {
        return function(v1) {
          return v.line === v1.line && v.character === v1.character;
        };
      }
    };
    eqRange = {
      eq: function(v) {
        return function(v1) {
          return eq(eqPosition)(v.start)(v1.start) && eq(eqPosition)(v.end)(v1.end);
        };
      }
    };
    positionOrd = {
      compare: function(v) {
        return function(v1) {
          if (v.line < v1.line) {
            return LT.value;
          }
          ;
          if (v.line === v1.line && v.character < v1.character) {
            return LT.value;
          }
          ;
          if (v.line === v1.line && v.character === v1.character) {
            return EQ.value;
          }
          ;
          if (otherwise) {
            return GT.value;
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.Protocol.Types (line 53, column 1 - line 60, column 21): " + [v.constructor.name, v1.constructor.name]);
        };
      },
      Eq0: function() {
        return eqPosition;
      }
    };
    ordRange = {
      compare: function(v) {
        return function(v1) {
          return append(semigroupOrdering)(compare(positionOrd)(v.start)(v1.start))(compare(positionOrd)(v.end)(v1.end));
        };
      },
      Eq0: function() {
        return eqRange;
      }
    };
    eqDocumentUri = eqString;
    eqOptionalVersionedTextDo = {
      eq: function(x) {
        return function(y) {
          return eq(eqDocumentUri)(x.uri)(y.uri) && eq(eqNullable(eqNumber))(x.version)(y.version);
        };
      }
    };
    semigroupWorkspaceEdit = {
      append: function(v) {
        return function(v1) {
          var goStrMap = function(a) {
            return toUnfoldable4(unfoldableArray)(fromMaybe(empty5)(toMaybe(a)));
          };
          var fromNullableArray = function(a) {
            return fromMaybe([])(toMaybe(a));
          };
          var docId = function(v2) {
            return v2.textDocument;
          };
          var combine = function(v2) {
            return function(v32) {
              return {
                textDocument: v2.textDocument,
                edits: append(semigroupArray)(v2.edits)(v32.edits)
              };
            };
          };
          return {
            documentChanges: toNullable(function() {
              var v2 = isNothing(toMaybe(v1.documentChanges));
              var v32 = isNothing(toMaybe(v.documentChanges));
              if (v32 && v2) {
                return Nothing.value;
              }
              ;
              return new Just(map(functorArray)(foldl1(foldable1NonEmpty(foldableArray))(combine))(map(functorArray)(toNonEmpty)(groupBy2(function(d1) {
                return function(d2) {
                  return eq(eqOptionalVersionedTextDo)(docId(d1))(docId(d2));
                };
              })(append(semigroupArray)(fromNullableArray(v.documentChanges))(fromNullableArray(v1.documentChanges))))));
            }()),
            changes: toNullable(function() {
              var v2 = isNothing(toMaybe(v1.changes));
              var v32 = isNothing(toMaybe(v.changes));
              if (v32 && v2) {
                return Nothing.value;
              }
              ;
              return new Just(fromFoldableWith2(foldableArray)(append(semigroupArray))(append(semigroupArray)(goStrMap(v.changes))(goStrMap(v1.changes))));
            }())
          };
        };
      }
    };
    monoidWorkspaceEdit = /* @__PURE__ */ function() {
      return {
        mempty: {
          documentChanges: toNullable(Nothing.value),
          changes: toNullable(Nothing.value)
        },
        Semigroup0: function() {
          return semigroupWorkspaceEdit;
        }
      };
    }();
    defaultCompletionItem = function(label) {
      return {
        label,
        kind: toNullable(Nothing.value),
        detail: toNullable(Nothing.value),
        labelDetails: toNullable(Nothing.value),
        documentation: toNullable(Nothing.value),
        sortText: toNullable(Nothing.value),
        filterText: toNullable(Nothing.value),
        insertText: toNullable(new Just(label)),
        textEdit: toNullable(Nothing.value),
        additionalTextEdits: toNullable(Nothing.value),
        command: toNullable(Nothing.value)
      };
    };
    completionItemKindToInt = function(v) {
      if (v instanceof Text) {
        return 1;
      }
      ;
      if (v instanceof Method) {
        return 2;
      }
      ;
      if (v instanceof $$Function2) {
        return 3;
      }
      ;
      if (v instanceof Constructor) {
        return 4;
      }
      ;
      if (v instanceof Field) {
        return 5;
      }
      ;
      if (v instanceof Variable) {
        return 6;
      }
      ;
      if (v instanceof Class) {
        return 7;
      }
      ;
      if (v instanceof Interface) {
        return 8;
      }
      ;
      if (v instanceof Module2) {
        return 9;
      }
      ;
      if (v instanceof Property) {
        return 10;
      }
      ;
      if (v instanceof Unit) {
        return 11;
      }
      ;
      if (v instanceof Value2) {
        return 12;
      }
      ;
      if (v instanceof Enum) {
        return 13;
      }
      ;
      if (v instanceof Keyword) {
        return 14;
      }
      ;
      if (v instanceof Snippet) {
        return 15;
      }
      ;
      if (v instanceof Color) {
        return 16;
      }
      ;
      if (v instanceof File) {
        return 17;
      }
      ;
      if (v instanceof Reference) {
        return 18;
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.Protocol.Types (line 184, column 27 - line 202, column 18): " + [v.constructor.name]);
    };
    completionItem = function(label) {
      return function(k) {
        return over()()(CompletionItem)(function(v) {
          return {
            kind: toNullable(new Just(completionItemKindToInt(k))),
            additionalTextEdits: v.additionalTextEdits,
            command: v.command,
            detail: v.detail,
            documentation: v.documentation,
            filterText: v.filterText,
            insertText: v.insertText,
            label: v.label,
            labelDetails: v.labelDetails,
            sortText: v.sortText,
            textEdit: v.textEdit
          };
        })(defaultCompletionItem(label));
      };
    };
    codeActionSourceSortImports = "source.sortImports";
    codeActionSourceOrganizeImports = "source.organizeImports";
    codeActionResult = /* @__PURE__ */ either(unsafeCoerce2)(unsafeCoerce2);
    codeActionEmpty = "";
  }
});

// output/LanguageServer.Protocol.Text/index.js
var makeWorkspaceEdit, makeMultiWorkspaceEdit, makeMinimalWorkspaceEdit;
var init_LanguageServer_Protocol4 = __esm({
  "output/LanguageServer.Protocol.Text/index.js"() {
    init_Data39();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Data12();
    init_Data7();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data22();
    init_LanguageServer_Protocol3();
    makeWorkspaceEdit = function(capabilities) {
      return function(uri) {
        return function(version2) {
          return function(range3) {
            return function(newText) {
              var textEdit = {
                range: range3,
                newText
              };
              var docid = {
                uri,
                version: notNull(version2)
              };
              var edit = {
                textDocument: docid,
                edits: [textEdit]
              };
              return workspaceEdit(capabilities)([edit]);
            };
          };
        };
      };
    };
    makeMultiWorkspaceEdit = function(capabilities) {
      return function(multiEdits) {
        return workspaceEdit(capabilities)(mapFlipped(functorArray)(multiEdits)(function(v) {
          return {
            textDocument: {
              uri: v.uri,
              version: toNullable(v.version)
            },
            edits: mapFlipped(functorArray)(v.edits)(function(v1) {
              return {
                range: v1.range,
                newText: v1.newText
              };
            })
          };
        }));
      };
    };
    makeMinimalWorkspaceEdit = function(clientCapabilities) {
      return function(uri) {
        return function(version2) {
          return function(oldText) {
            return function(newText) {
              var splitLines2 = function(t) {
                return either($$const([t]))(function(r) {
                  return split2(r)(t);
                })(regex("\r?\n")(noFlags));
              };
              var range3 = function(text) {
                return function(l1) {
                  return function(l2) {
                    return {
                      start: {
                        line: l1,
                        character: 0
                      },
                      end: {
                        line: length4(text) - l2 | 0,
                        character: 0
                      }
                    };
                  };
                };
              };
              var newLines = splitLines2(newText);
              var oldLines = function() {
                var v = splitLines2(oldText);
                if (notEq(eqMaybe(eqString))(last2(v))(new Just("")) && eq(eqMaybe(eqString))(last2(newLines))(new Just(""))) {
                  return append(semigroupArray)(v)([""]);
                }
                ;
                return v;
              }();
              var oldLen = length4(oldLines);
              var newLen = length4(newLines);
              var lines2 = function(text) {
                return function(l1) {
                  return function(l2) {
                    return slice2(l1)(length4(text) - l2 | 0)(text);
                  };
                };
              };
              var lastDiff = findIndex2(uncurry(notEq(eqString)))(zip(reverse2(oldLines))(reverse2(newLines)));
              var firstDiff = findIndex2(uncurry(notEq(eqString)))(zip(oldLines)(newLines));
              var e = function(a) {
                return function(b) {
                  return new Just(makeWorkspaceEdit(clientCapabilities)(uri)(version2)(a)(b));
                };
              };
              if (firstDiff instanceof Just && (lastDiff instanceof Just && (newLen - lastDiff.value0 | 0) >= firstDiff.value0)) {
                var m$prime = min(ordInt)(lastDiff.value0)(oldLen - firstDiff.value0 | 0);
                return e(range3(oldLines)(firstDiff.value0)(m$prime))(joinWith("\n")(lines2(newLines)(firstDiff.value0)(m$prime)) + function() {
                  var $13 = $$null(newLines);
                  if ($13) {
                    return "";
                  }
                  ;
                  return "\n";
                }());
              }
              ;
              if (firstDiff instanceof Nothing && (lastDiff instanceof Nothing && oldLen === newLen)) {
                return Nothing.value;
              }
              ;
              return e(range3(oldLines)(0)(0))(newText);
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.TextDocument/foreign.js
var getText, getTextAtRange, getUri, getVersion;
var init_foreign82 = __esm({
  "output/LanguageServer.Protocol.TextDocument/foreign.js"() {
    getText = function(document) {
      return function() {
        return document.getText();
      };
    };
    getTextAtRange = function(document) {
      return function(range3) {
        return function() {
          return document.getText(range3);
        };
      };
    };
    getUri = function(document) {
      return document.uri;
    };
    getVersion = function(document) {
      return function() {
        return document.version;
      };
    };
  }
});

// output/LanguageServer.Protocol.TextDocument/index.js
var getTextAtVersion;
var init_LanguageServer_Protocol5 = __esm({
  "output/LanguageServer.Protocol.TextDocument/index.js"() {
    init_foreign82();
    init_foreign82();
    getTextAtVersion = function(doc) {
      return function __do2() {
        var text = getText(doc)();
        var version2 = getVersion(doc)();
        return {
          text,
          version: version2
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.Uri/foreign.js
var import_vscode_uri, uriToFilename, filenameToUri;
var init_foreign83 = __esm({
  "output/LanguageServer.Protocol.Uri/foreign.js"() {
    import_vscode_uri = __toModule(require("vscode-uri"));
    uriToFilename = function(uri) {
      return function() {
        return import_vscode_uri.URI.parse(uri).fsPath;
      };
    };
    filenameToUri = function(filename) {
      return function() {
        return import_vscode_uri.URI.file(filename).toString();
      };
    };
  }
});

// output/LanguageServer.Protocol.Uri/index.js
var init_LanguageServer_Protocol6 = __esm({
  "output/LanguageServer.Protocol.Uri/index.js"() {
    init_foreign83();
    init_foreign83();
  }
});

// output/LanguageServer.Protocol.Window/foreign.js
var __spreadArray, showError2, showWarningWithActionsImpl, createWorkDoneProgressImpl, workDone, workBegin;
var init_foreign84 = __esm({
  "output/LanguageServer.Protocol.Window/foreign.js"() {
    __spreadArray = function(to, from2, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from2.length, ar; i < l; i++) {
          if (ar || !(i in from2)) {
            if (!ar)
              ar = Array.prototype.slice.call(from2, 0, i);
            ar[i] = from2[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from2));
    };
    showError2 = function(conn) {
      return function(s) {
        return function() {
          return conn.window.showErrorMessage(s);
        };
      };
    };
    showWarningWithActionsImpl = function(conn) {
      return function(s) {
        return function(actions) {
          return function() {
            var _a;
            return (_a = conn.window).showWarningMessage.apply(_a, __spreadArray([s], actions, false));
          };
        };
      };
    };
    createWorkDoneProgressImpl = function(conn) {
      return function() {
        return conn.window.createWorkDoneProgress();
      };
    };
    workDone = function(reporter) {
      return function() {
        return reporter.done();
      };
    };
    workBegin = function(reporter) {
      return function(_a) {
        var title = _a.title;
        return function() {
          return reporter.begin(title, void 0, void 0, true);
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.Window/index.js
var createWorkDoneProgress, convertMessageAction, showWarningWithActions;
var init_LanguageServer_Protocol7 = __esm({
  "output/LanguageServer.Protocol.Window/index.js"() {
    init_foreign84();
    init_Control13();
    init_Data4();
    init_Data15();
    init_Data41();
    init_Effect6();
    init_foreign84();
    createWorkDoneProgress = function(conn) {
      return toAffE(createWorkDoneProgressImpl(conn));
    };
    convertMessageAction = function(act) {
      return map(functorMaybe)(function(v) {
        return v.title;
      })(toMaybe(act));
    };
    showWarningWithActions = function(conn) {
      return function(msg) {
        return function(acts) {
          return map(functorAff)(convertMessageAction)(toAffE(showWarningWithActionsImpl(conn)(msg)(map(functorArray)(function(title) {
            return {
              title
            };
          })(acts))));
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Imports/index.js
var showNS, reformatImports, parseNS, getAllModules, addCompletionImportEdit, addModuleImport$prime, addCompletionImport$prime, addCompletionImport2;
var init_LanguageServer_IdePurescript3 = __esm({
  "output/LanguageServer.IdePurescript.Imports/index.js"() {
    init_Control4();
    init_Control5();
    init_Control_Monad();
    init_Data39();
    init_Data16();
    init_Data25();
    init_Data4();
    init_Data21();
    init_Data20();
    init_Data_List();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data41();
    init_Data14();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Foreign();
    init_IdePurescript5();
    init_IdePurescript2();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol4();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_LanguageServer_Protocol7();
    init_PscIde();
    showNS = function(v) {
      if (v instanceof NSValue) {
        return "NSValue";
      }
      ;
      if (v instanceof NSKind) {
        return "NSKind";
      }
      ;
      if (v instanceof NSType) {
        return "NSType";
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 103, column 1 - line 103, column 32): " + [v.constructor.name]);
    };
    reformatImports = function(log4) {
      return function(docs) {
        return function(v) {
          return function(state2) {
            return function(args) {
              var successResult = unsafeToForeign(toNullable(Nothing.value));
              var v1 = map(functorArray)(function() {
                var $154 = readString(monadIdentity);
                return function($155) {
                  return runExcept($154($155));
                };
              }())(args);
              if (state2.port instanceof Just && (v1.length === 1 && v1[0] instanceof Right)) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(v1[0].value0)))(function(maybeDoc) {
                  var v32 = toMaybe(maybeDoc);
                  if (v32 instanceof Nothing) {
                    return pure(applicativeAff)(successResult);
                  }
                  ;
                  if (v32 instanceof Just) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtVersion(v32.value0)))(function(v42) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(v1[0].value0)))(function(fileName) {
                        return bind(bindAff)(reformatModuleImports(log4)(state2.modules)(state2.port.value0)(fileName)(v42.text))(function(res) {
                          return discard(discardUnit)(bindAff)(function() {
                            if (res instanceof Just) {
                              var edit = makeMinimalWorkspaceEdit(state2.clientCapabilities)(v1[0].value0)(v42.version)(v42.text)(res.value0.result);
                              if (state2.conn instanceof Just && edit instanceof Just) {
                                return $$void(functorAff)(applyEdit(state2.conn.value0)(edit.value0));
                              }
                              ;
                              return pure(applicativeAff)(unit);
                            }
                            ;
                            return pure(applicativeAff)(unit);
                          }())(function() {
                            return pure(applicativeAff)(successResult);
                          });
                        });
                      });
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 271, column 7 - line 289, column 29): " + [v32.constructor.name]);
                });
              }
              ;
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log4(Info.value)(show(showArray(showEither(showNonEmptyList(showForeignError))(showString)))(v1))))(function() {
                return pure(applicativeAff)(successResult);
              });
            };
          };
        };
      };
    };
    parseNS = function(v) {
      if (v === "NSValue") {
        return new Just(NSValue.value);
      }
      ;
      if (v === "NSKind") {
        return new Just(NSKind.value);
      }
      ;
      if (v === "NSType") {
        return new Just(NSType.value);
      }
      ;
      return Nothing.value;
    };
    getAllModules = function(log4) {
      return function(v) {
        return function(v1) {
          return function(state2) {
            return function(v2) {
              if (state2.port instanceof Just) {
                return map(functorAff)(unsafeToForeign)(getAvailableModules(state2.port.value0));
              }
              ;
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log4($$Error.value)("Fail case")))(function() {
                return pure(applicativeAff)(unsafeToForeign([]));
              });
            };
          };
        };
      };
    };
    addCompletionImportEdit = function(log4) {
      return function(v) {
        return function(config) {
          return function(v1) {
            return function(v2) {
              return function(v32) {
                return function(version2) {
                  return function(text) {
                    return function(ns) {
                      var noModule = function(f) {
                        return all(foldableArray)(heytingAlgebraBoolean)(function() {
                          var $156 = not(heytingAlgebraFunction(heytingAlgebraBoolean))(f);
                          var $157 = unwrap();
                          return function($158) {
                            return $156($157($158));
                          };
                        }())(v1.modules.modules);
                      };
                      var isSameUnqualified = function(mod$prime) {
                        return function(v42) {
                          if (v42.qualifier instanceof Nothing) {
                            return mod$prime === v42.moduleName;
                          }
                          ;
                          return false;
                        };
                      };
                      var isSameQualified = function(mod$prime) {
                        return function(qual$prime) {
                          return function(v42) {
                            if (v42.qualifier instanceof Just) {
                              return mod$prime === v42.moduleName && qual$prime === v42.qualifier.value0;
                            }
                            ;
                            return false;
                          };
                        };
                      };
                      var prelude = preludeModule(config);
                      if (v1.port instanceof Just) {
                        return bind(bindAff)(function() {
                          if (v2.mod instanceof Just && (v2.qual instanceof Just && noModule(isSameQualified(v2.mod.value0)(v2.qual.value0)))) {
                            return addQualifiedImport(v1.modules)(v1.port.value0)(un()(DocumentUri)(v2.uri))(text)(v2.mod.value0)(v2.qual.value0);
                          }
                          ;
                          if (v2.mod instanceof Just && (v2.qual instanceof Nothing && (v2.mod.value0 === prelude && noModule(isSameUnqualified(prelude))))) {
                            return addModuleImport(v1.modules)(v1.port.value0)(un()(DocumentUri)(v2.uri))(text)(v2.mod.value0);
                          }
                          ;
                          return addExplicitImport(v1.modules)(v1.port.value0)(un()(DocumentUri)(v2.uri))(text)(v2.mod)(v2.qual)(v2.identifier)(ns);
                        }())(function(v42) {
                          if (v42.result instanceof UpdatedImports) {
                            var edit = makeMinimalWorkspaceEdit(v1.clientCapabilities)(v2.uri)(version2)(text)(v42.result.value0);
                            return pure(applicativeAff)(new Right(maybe([])(singleton5)(edit)));
                          }
                          ;
                          if (v42.result instanceof AmbiguousImport) {
                            return liftEffect(monadEffectAff)(function __do2() {
                              liftEffect(monadEffectEffect)(for_(applicativeEffect)(foldableMaybe)(v1.conn)(function(v52) {
                                return showError2(v52)("Could not import " + (text + " because there is more than one option"));
                              }))();
                              log4(Warning.value)("Found ambiguous imports")();
                              return new Left(unsafeToForeign(map(functorArray)(function(v52) {
                                return v52["module'"];
                              })(v42.result.value0)));
                            });
                          }
                          ;
                          if (v42.result instanceof UnnecessaryImport) {
                            return pure(applicativeAff)(new Right([]));
                          }
                          ;
                          if (v42.result instanceof FailedImport) {
                            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(for_(applicativeEffect)(foldableMaybe)(v1.conn)(function(v52) {
                              return showError2(v52)("Failed to import: `" + (v2.identifier + ("`. Error: " + v42.result.value0)));
                            })))(function() {
                              return pure(applicativeAff)(new Right([]));
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 145, column 7 - line 175, column 26): " + [v42.result.constructor.name]);
                        });
                      }
                      ;
                      return pure(applicativeAff)(new Right([]));
                    };
                  };
                };
              };
            };
          };
        };
      };
    };
    addModuleImport$prime = function(log4) {
      return function(docs) {
        return function(config) {
          return function(state2) {
            return function(args) {
              var successResult = unsafeToForeign(toNullable(Nothing.value));
              var v = map(functorArray)(function() {
                var $159 = readString(monadIdentity);
                return function($160) {
                  return runExcept($159($160));
                };
              }())(args);
              if (state2.port instanceof Just && (v.length === 3 && (v[0] instanceof Right && v[2] instanceof Right))) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(v[2].value0)))(function(maybeDoc) {
                  var v2 = toMaybe(maybeDoc);
                  if (v2 instanceof Nothing) {
                    return pure(applicativeAff)(successResult);
                  }
                  ;
                  if (v2 instanceof Just) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtVersion(v2.value0)))(function(v32) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(v[2].value0)))(function(fileName) {
                        return bind(bindAff)(function() {
                          if (v[1] instanceof Right) {
                            return addCompletionImportEdit(log4)(docs)(config)(state2)({
                              identifier: "",
                              qual: hush(v[1]),
                              mod: new Just(v[0].value0),
                              uri: v[2].value0
                            })(v2.value0)(v32.version)(v32.text)(Nothing.value);
                          }
                          ;
                          if (v[1] instanceof Left) {
                            return bind(bindAff)(addModuleImport(state2.modules)(state2.port.value0)(fileName)(v32.text)(v[0].value0))(function(v42) {
                              if (v42.result instanceof UpdatedImports) {
                                return pure(applicativeAff)(new Right(fromFoldable2(foldableMaybe)(makeMinimalWorkspaceEdit(state2.clientCapabilities)(v[2].value0)(v32.version)(v32.text)(v42.result.value0))));
                              }
                              ;
                              return pure(applicativeAff)(new Right([]));
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 207, column 19 - line 230, column 37): " + [v[1].constructor.name]);
                        }())(function(edit) {
                          return discard(discardUnit)(bindAff)(function() {
                            if (state2.conn instanceof Just && edit instanceof Right) {
                              return $$void(functorAff)(applyEdit(state2.conn.value0)(fold2(monoidWorkspaceEdit)(edit.value0)));
                            }
                            ;
                            return pure(applicativeAff)(unit);
                          }())(function() {
                            return pure(applicativeAff)(successResult);
                          });
                        });
                      });
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 202, column 7 - line 235, column 29): " + [v2.constructor.name]);
                });
              }
              ;
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log4(Info.value)(show(showArray(showEither(showNonEmptyList(showForeignError))(showString)))(v))))(function() {
                return pure(applicativeAff)(successResult);
              });
            };
          };
        };
      };
    };
    addCompletionImport$prime = function(existingEdit) {
      return function(log4) {
        return function(docs) {
          return function(config) {
            return function(v) {
              return function(args) {
                var shouldAddImport = autocompleteAddImport(config);
                var v2 = map(functorArray)(function() {
                  var $161 = readString(monadIdentity);
                  return function($162) {
                    return runExcept($161($162));
                  };
                }())(args);
                if (v.conn instanceof Just && (v2.length === 5 && (v2[0] instanceof Right && (v2[3] instanceof Right && (v2[4] instanceof Right && shouldAddImport))))) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(v2[3].value0)))(function(maybeDoc) {
                    var v42 = toMaybe(maybeDoc);
                    if (v42 instanceof Nothing) {
                      return pure(applicativeAff)(unsafeToForeign(toNullable(Nothing.value)));
                    }
                    ;
                    if (v42 instanceof Just) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtVersion(v42.value0)))(function(v52) {
                        return bind(bindAff)(addCompletionImportEdit(log4)(docs)(config)(v)({
                          identifier: v2[0].value0,
                          mod: hush(v2[1]),
                          qual: hush(v2[2]),
                          uri: v2[3].value0
                        })(v42.value0)(v52.version)(v52.text)(parseNS(v2[4].value0)))(function(edit) {
                          if (edit instanceof Right) {
                            return discard(discardUnit)(bindAff)($$void(functorAff)(applyEdit(v.conn.value0)(fold2(monoidWorkspaceEdit)(cons2(existingEdit)(edit.value0)))))(function() {
                              return pure(applicativeAff)(unsafeToForeign(toNullable(Nothing.value)));
                            });
                          }
                          ;
                          if (edit instanceof Left) {
                            return discard(discardUnit)(bindAff)($$void(functorAff)(applyEdit(v.conn.value0)(existingEdit)))(function() {
                              return pure(applicativeAff)(edit.value0);
                            });
                          }
                          ;
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 78, column 13 - line 84, column 25): " + [edit.constructor.name]);
                        });
                      });
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports (line 68, column 9 - line 84, column 25): " + [v42.constructor.name]);
                  });
                }
                ;
                if (v.conn instanceof Just) {
                  return discard(discardUnit)(bindAff)($$void(functorAff)(applyEdit(v.conn.value0)(existingEdit)))(function() {
                    return pure(applicativeAff)(unsafeToForeign(toNullable(Nothing.value)));
                  });
                }
                ;
                return pure(applicativeAff)(unsafeToForeign(toNullable(Nothing.value)));
              };
            };
          };
        };
      };
    };
    addCompletionImport2 = /* @__PURE__ */ addCompletionImport$prime(/* @__PURE__ */ mempty(monoidWorkspaceEdit));
  }
});

// output/LanguageServer.Protocol.Console/foreign.js
var log3, info2, warn2, error3;
var init_foreign85 = __esm({
  "output/LanguageServer.Protocol.Console/foreign.js"() {
    log3 = function(conn) {
      return function(s) {
        return function() {
          return conn.console.log(s);
        };
      };
    };
    info2 = function(conn) {
      return function(s) {
        return function() {
          return conn.console.info(s);
        };
      };
    };
    warn2 = function(conn) {
      return function(s) {
        return function() {
          return conn.console.warn(s);
        };
      };
    };
    error3 = function(conn) {
      return function(s) {
        return function() {
          return conn.console.error(s);
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.Console/index.js
var init_LanguageServer_Protocol8 = __esm({
  "output/LanguageServer.Protocol.Console/index.js"() {
    init_foreign85();
    init_foreign85();
  }
});

// output/LanguageServer.IdePurescript.Assist/index.js
var lineRange, lineRange$prime, fillTypedHole, encodeTypoResult, fixTypoActions, decodeTypoResult, fixTypo, caseSplit2, addClause2;
var init_LanguageServer_IdePurescript4 = __esm({
  "output/LanguageServer.IdePurescript.Assist/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad();
    init_Control_Monad_Except();
    init_Data39();
    init_Data13();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data20();
    init_Data_List();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data41();
    init_Data7();
    init_Data14();
    init_Data_String3();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Foreign();
    init_Foreign4();
    init_Foreign5();
    init_IdePurescript7();
    init_IdePurescript2();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_IdePurescript3();
    init_LanguageServer_Protocol8();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol4();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_PscIde2();
    init_PscIde();
    lineRange = function(pos) {
      return {
        start: over()()(Position)(function(v) {
          return {
            character: 0,
            line: v.line
          };
        })(pos),
        end: over()()(Position)(function(v) {
          return {
            character: top(boundedInt),
            line: v.line
          };
        })(pos)
      };
    };
    lineRange$prime = function(line) {
      return function(character) {
        return lineRange({
          line,
          character
        });
      };
    };
    fillTypedHole = function(logFn) {
      return function(docs) {
        return function(settings) {
          return function(state2) {
            return function(args) {
              var readTypeInfo = function(obj) {
                return unsafeFromForeign(obj);
              };
              var v = function(v1) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(maybe(pure(applicativeEffect)(unit))(flip(log3)("fail match"))(state2.conn)))(function() {
                  return pure(applicativeAff)(unit);
                });
              };
              if (state2.port instanceof Just && (state2.conn instanceof Just && args.length === 4)) {
                var $36 = runExcept(readRange(args[2]));
                if ($36 instanceof Right) {
                  var $37 = runExcept(readString(monadIdentity)(args[1]));
                  if ($37 instanceof Right) {
                    var $38 = readTypeInfo(args[3]);
                    return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($37.value0)))(function(doc) {
                      return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtVersion(doc1)))(function(v1) {
                          var edit = makeWorkspaceEdit(state2.clientCapabilities)($37.value0)(v1.version)($36.value0)($38.identifier);
                          return bind(bindAff)(map(functorAff)(either($$const([]))(identity(categoryFn)))(addCompletionImportEdit(logFn)(docs)(settings)(state2)({
                            identifier: $38.identifier,
                            mod: new Just($38["module'"]),
                            qual: Nothing.value,
                            uri: $37.value0
                          })(doc1)(v1.version)(v1.text)(Nothing.value)))(function(edit$prime) {
                            var edit2 = append(semigroupWorkspaceEdit)(edit)(fold2(monoidWorkspaceEdit)(edit$prime));
                            return bind(bindAff)(applyEdit(state2.conn.value0)(edit2))(function(applyRes) {
                              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log3(state2.conn.value0)("Applied: " + show(showBoolean)(applyRes))))(function() {
                                return bind(bindAff)(addCompletionImport2(logFn)(docs)(settings)(state2)([unsafeToForeign($38.identifier), unsafeToForeign($38["module'"]), unsafeToForeign(Nothing.value), unsafeToForeign($37.value0)]))(function() {
                                  return pure(applicativeAff)(unit);
                                });
                              });
                            });
                          });
                        });
                      });
                    });
                  }
                  ;
                  return v(true);
                }
                ;
                return v(true);
              }
              ;
              return v(true);
            };
          };
        };
      };
    };
    encodeTypoResult = function(v) {
      return unsafeToForeign({
        qualifier: toNullable(v.qualifier),
        declarationType: v.declarationType,
        identifier: v.identifier,
        mod: v.mod
      });
    };
    fixTypoActions = function(docs) {
      return function(v) {
        return function(v1) {
          return function(docUri) {
            return function(line) {
              return function($$char2) {
                var renderDeclarationType = function(type$prime2) {
                  return function(identifier) {
                    return function(v2) {
                      if (v2 instanceof Nothing) {
                        return " : ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclTypeOperator) {
                        return " type-level operator: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclType) {
                        return " type: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclTypeSynonym) {
                        return " type synonym: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclDataConstructor) {
                        return " data constructor: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclTypeClass) {
                        return " type class: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclValueOperator) {
                        return " operator: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclModule) {
                        return " module: ";
                      }
                      ;
                      if (v2 instanceof Just && v2.value0 instanceof DeclValue) {
                        var $70 = startsWithCapitalLetter(identifier);
                        if ($70) {
                          return " data constructor: ";
                        }
                        ;
                        var $71 = containsArrow(type$prime2);
                        if ($71) {
                          return " function: ";
                        }
                        ;
                        return " value: ";
                      }
                      ;
                      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Assist (line 199, column 44 - line 214, column 19): " + [v2.constructor.name]);
                    };
                  };
                };
                if (v1.port instanceof Just && v1.conn instanceof Just) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(docUri)))(function(doc) {
                    return maybe(pure(applicativeAff)([]))(function(doc1) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(lineRange$prime(line)($$char2))))(function(lineText) {
                        var v2 = identifierAtPoint(lineText)($$char2);
                        if (v2 instanceof Just) {
                          return bind(bindAff)(suggestTypos(v1.port.value0)(v2.value0.word)(2)(v1.modules.main)(defaultCompletionOptions))(function(res) {
                            return pure(applicativeAff)(function() {
                              if (res instanceof Left) {
                                return [];
                              }
                              ;
                              if (res instanceof Right) {
                                return take3(10)(mapFlipped(functorArray)(simplifyImportChoice(identity(categoryFn))(res.value0))(function(v32) {
                                  return fixTypo$prime(function() {
                                    var decTypeString = renderDeclarationType(v32["type'"])(v32.identifier)(v32.declarationType);
                                    var $79 = v32.identifier === v2.value0.word;
                                    if ($79) {
                                      return "Import" + (decTypeString + (v32.identifier + (" (" + (v32["module'"] + ")"))));
                                    }
                                    ;
                                    return "Replace with " + (v32.identifier + (" (" + (v32["module'"] + ")")));
                                  }())(docUri)(line)($$char2)(encodeTypoResult({
                                    identifier: v32.identifier,
                                    qualifier: v2.value0.qualifier,
                                    mod: v32["module'"],
                                    declarationType: maybe("")(declarationTypeToString)(v32.declarationType)
                                  }));
                                }));
                              }
                              ;
                              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Assist (line 160, column 17 - line 195, column 32): " + [res.constructor.name]);
                            }());
                          });
                        }
                        ;
                        if (v2 instanceof Nothing) {
                          return pure(applicativeAff)([]);
                        }
                        ;
                        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Assist (line 155, column 9 - line 196, column 29): " + [v2.constructor.name]);
                      });
                    })(toMaybe(doc));
                  });
                }
                ;
                return pure(applicativeAff)([]);
              };
            };
          };
        };
      };
    };
    decodeTypoResult = function(obj) {
      return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(obj)("identifier"))(readString(monadIdentity)))(function(identifier) {
        return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(obj)("mod"))(readString(monadIdentity)))(function(mod2) {
          return bind(bindExceptT(monadIdentity))(map(functorExceptT(functorIdentity))(fromMaybe(""))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(obj)("declarationType"))(readNullOrUndefined(readString(monadIdentity)))))(function(declarationType) {
            return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(obj)("qualifier"))(readNullOrUndefined(readString(monadIdentity))))(function(qualifier) {
              return pure(applicativeExceptT(monadIdentity))({
                identifier,
                qualifier,
                mod: mod2,
                declarationType
              });
            });
          });
        });
      });
    };
    fixTypo = function(log4) {
      return function(docs) {
        return function(settings) {
          return function(v) {
            return function(args) {
              var replace3 = function(uri) {
                return function(version2) {
                  return function(line) {
                    return function(v1) {
                      return function(word) {
                        return function(qualifier) {
                          return function(mod2) {
                            return function(declarationType) {
                              var range3 = {
                                start: {
                                  line,
                                  character: v1.left
                                },
                                end: {
                                  line,
                                  character: v1.right
                                }
                              };
                              var namespace = bindFlipped(bindMaybe)(declarationTypeToNamespace)(declarationTypeFromString(declarationType));
                              var edit = makeWorkspaceEdit(v.clientCapabilities)(uri)(version2)(range3)(maybe("")(function(v2) {
                                return v2 + ".";
                              })(qualifier) + word);
                              return addCompletionImport$prime(edit)(log4)(docs)(settings)(v)([unsafeToForeign(word), unsafeToForeign(mod2), unsafeToForeign(toNullable(qualifier)), unsafeToForeign(uri), unsafeToForeign(maybe("")(showNS)(namespace))]);
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
              return map(functorAff)(unsafeToForeign)(function() {
                var v1 = index2(args)(2);
                var v2 = index2(args)(1);
                var v32 = index2(args)(0);
                var v6 = function(v7) {
                  return pure(applicativeAff)(unit);
                };
                if (v.port instanceof Just && (v.conn instanceof Just && (v32 instanceof Just && (v2 instanceof Just && v1 instanceof Just)))) {
                  var $113 = runExcept(readString(monadIdentity)(v32.value0));
                  if ($113 instanceof Right) {
                    var $114 = runExcept(readInt(monadIdentity)(v2.value0));
                    if ($114 instanceof Right) {
                      var $115 = runExcept(readInt(monadIdentity)(v1.value0));
                      if ($115 instanceof Right) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($113.value0)))(function(doc) {
                          return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                            return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(lineRange$prime($114.value0)($115.value0))))(function(lineText) {
                              return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(doc1)))(function(version2) {
                                var v7 = map(functorMaybe)(function($191) {
                                  return runExcept(decodeTypoResult($191));
                                })(index2(args)(3));
                                var v8 = identifierAtPoint(lineText)($115.value0);
                                if (v8 instanceof Just && (v7 instanceof Just && v7.value0 instanceof Right)) {
                                  return $$void(functorAff)(replace3($113.value0)(version2)($114.value0)(v8.value0.range)(v7.value0.value0.identifier)(v7.value0.value0.qualifier)(v7.value0.value0.mod)(v7.value0.value0.declarationType));
                                }
                                ;
                                return pure(applicativeAff)(unit);
                              });
                            });
                          });
                        });
                      }
                      ;
                      return v6(true);
                    }
                    ;
                    return v6(true);
                  }
                  ;
                  return v6(true);
                }
                ;
                return v6(true);
              }());
            };
          };
        };
      };
    };
    caseSplit2 = function(docs) {
      return function(v) {
        return function(state2) {
          return function(args) {
            var v1 = function(v2) {
              if (state2.conn instanceof Just && args.length === 4) {
                return liftEffect(monadEffectAff)(log3(state2.conn.value0)(show(showArray(showString))([show(showEither(showNonEmptyList(showForeignError))(showString))(runExcept(readString(monadIdentity)(args[0]))), show(showEither(showNonEmptyList(showForeignError))(showInt))(runExcept(readInt(monadIdentity)(args[1]))), show(showEither(showNonEmptyList(showForeignError))(showInt))(runExcept(readInt(monadIdentity)(args[2]))), show(showEither(showNonEmptyList(showForeignError))(showString))(runExcept(readString(monadIdentity)(args[3])))])));
              }
              ;
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(maybe(pure(applicativeEffect)(unit))(flip(log3)("fail match"))(state2.conn)))(function() {
                return pure(applicativeAff)(unit);
              });
            };
            if (state2.port instanceof Just && (state2.conn instanceof Just && args.length === 4)) {
              var $149 = runExcept(readString(monadIdentity)(args[0]));
              if ($149 instanceof Right) {
                var $150 = runExcept(readInt(monadIdentity)(args[1]));
                if ($150 instanceof Right) {
                  var $151 = runExcept(readInt(monadIdentity)(args[2]));
                  if ($151 instanceof Right) {
                    var $152 = runExcept(readString(monadIdentity)(args[3]));
                    if ($152 instanceof Right) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($149.value0)))(function(doc) {
                        return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                          return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(lineRange$prime($150.value0)($151.value0))))(function(lineText) {
                            return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(doc1)))(function(version2) {
                              var v2 = identifierAtPoint(lineText)($151.value0);
                              if (v2 instanceof Just) {
                                return bind(bindAff)(eitherToErr(caseSplit(state2.port.value0)(lineText)(v2.value0.range.left)(v2.value0.range.right)(false)($152.value0)))(function(lines2) {
                                  var edit = makeWorkspaceEdit(state2.clientCapabilities)($149.value0)(version2)(lineRange$prime($150.value0)($151.value0))(intercalate3(monoidString)("\n")(map(functorArray)(trim)(lines2)));
                                  return $$void(functorAff)(applyEdit(state2.conn.value0)(edit));
                                });
                              }
                              ;
                              return liftEffect(monadEffectAff)(log3(state2.conn.value0)("fail identifier"));
                            });
                          });
                        });
                      });
                    }
                    ;
                    return v1(true);
                  }
                  ;
                  return v1(true);
                }
                ;
                return v1(true);
              }
              ;
              return v1(true);
            }
            ;
            return v1(true);
          };
        };
      };
    };
    addClause2 = function(docs) {
      return function(v) {
        return function(state2) {
          return function(args) {
            var v1 = function(v2) {
              return pure(applicativeAff)(unit);
            };
            if (state2.port instanceof Just && (state2.conn instanceof Just && args.length === 3)) {
              var $175 = runExcept(readString(monadIdentity)(args[0]));
              if ($175 instanceof Right) {
                var $176 = runExcept(readInt(monadIdentity)(args[1]));
                if ($176 instanceof Right) {
                  var $177 = runExcept(readInt(monadIdentity)(args[2]));
                  if ($177 instanceof Right) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($175.value0)))(function(doc) {
                      return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(lineRange$prime($176.value0)($177.value0))))(function(lineText) {
                          return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(doc1)))(function(version2) {
                            var v2 = identifierAtPoint(lineText)($177.value0);
                            if (v2 instanceof Just) {
                              return bind(bindAff)(eitherToErr(addClause(state2.port.value0)(lineText)(false)))(function(lines2) {
                                var edit = makeWorkspaceEdit(state2.clientCapabilities)($175.value0)(version2)(lineRange$prime($176.value0)($177.value0))(intercalate3(monoidString)("\n")(map(functorArray)(trim)(lines2)));
                                return $$void(functorAff)(applyEdit(state2.conn.value0)(edit));
                              });
                            }
                            ;
                            return pure(applicativeAff)(unit);
                          });
                        });
                      });
                    });
                  }
                  ;
                  return v1(true);
                }
                ;
                return v1(true);
              }
              ;
              return v1(true);
            }
            ;
            return v1(true);
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Build/foreign.js
function parseShellQuote(str) {
  return require("shell-quote").parse(str);
}
function getOsTmpDir() {
  return require("os").tmpdir();
}
function getHash(str) {
  return require("crypto").createHash("sha256").update(str).digest("hex");
}
var copyFile;
var init_foreign86 = __esm({
  "output/LanguageServer.IdePurescript.Build/foreign.js"() {
    copyFile = (src) => (dest) => {
      return () => {
        return require("fs").promises.copyFile(src, dest);
      };
    };
  }
});

// output/Data.Map/index.js
var semigroupSemigroupMap, monoidSemigroupMap, keys3;
var init_Data50 = __esm({
  "output/Data.Map/index.js"() {
    init_Data4();
    init_Data_Map();
    init_Data7();
    init_Data48();
    init_Data_Map();
    semigroupSemigroupMap = function(dictOrd) {
      return function(dictSemigroup) {
        return {
          append: function(v) {
            return function(v1) {
              return unionWith(dictOrd)(append(dictSemigroup))(v)(v1);
            };
          }
        };
      };
    };
    monoidSemigroupMap = function(dictOrd) {
      return function(dictSemigroup) {
        return {
          mempty: empty2,
          Semigroup0: function() {
            return semigroupSemigroupMap(dictOrd)(dictSemigroup);
          }
        };
      };
    };
    keys3 = /* @__PURE__ */ function() {
      var $20 = $$void(functorMap);
      return function($21) {
        return fromMap($20($21));
      };
    }();
  }
});

// output/Data.String.Pattern/index.js
var Pattern;
var init_Data_String7 = __esm({
  "output/Data.String.Pattern/index.js"() {
    init_Data12();
    init_Data14();
    Pattern = function(x) {
      return x;
    };
  }
});

// output/Effect.Timer/foreign.js
function setTimeoutImpl(ms) {
  return function(fn) {
    return function() {
      return setTimeout(fn, ms);
    };
  };
}
function clearTimeoutImpl(id2) {
  return function() {
    clearTimeout(id2);
  };
}
var init_foreign87 = __esm({
  "output/Effect.Timer/foreign.js"() {
  }
});

// output/Effect.Timer/index.js
var setTimeout2, clearTimeout2;
var init_Effect11 = __esm({
  "output/Effect.Timer/index.js"() {
    init_foreign87();
    init_Data12();
    setTimeout2 = setTimeoutImpl;
    clearTimeout2 = clearTimeoutImpl;
  }
});

// output/IdePurescript.PscErrors/index.js
var decodePscResult, parsePscOutput;
var init_IdePurescript8 = __esm({
  "output/IdePurescript.PscErrors/index.js"() {
    init_Control4();
    init_Control5();
    init_Data_Argonaut_Decode3();
    init_Data_Argonaut_Decode4();
    init_Data_Argonaut_Decode();
    init_Data_Argonaut2();
    init_Data24();
    init_Data16();
    init_Data14();
    init_PscIde();
    decodePscResult = {
      decodeJson: function(json) {
        return bind(bindEither)(decodeJson(decodeForeignObject2(decodeJsonJson))(json))(function(o) {
          return bind(bindEither)(getField2(decodeArray2(decodeRebuildError))(o)("warnings"))(function(warnings) {
            return bind(bindEither)(getField2(decodeArray2(decodeRebuildError))(o)("errors"))(function(errors) {
              return pure(applicativeEither)({
                warnings,
                errors
              });
            });
          });
        });
      }
    };
    parsePscOutput = /* @__PURE__ */ composeKleisliFlipped(bindEither)(/* @__PURE__ */ function() {
      var $0 = lmap(bifunctorEither)(show(showJsonDecodeError));
      var $1 = decodeJson(decodePscResult);
      return function($2) {
        return $0($1($2));
      };
    }())(jsonParser);
  }
});

// output/IdePurescript.Build/index.js
var Command, rebuild2, getPathProp, spawn3, spawnWithVersion, build2;
var init_IdePurescript9 = __esm({
  "output/IdePurescript.Build/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad_Error();
    init_Data39();
    init_Data24();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data_String5();
    init_Data_String3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_Effect3();
    init_Foreign3();
    init_IdePurescript();
    init_IdePurescript8();
    init_IdePurescript3();
    init_Node6();
    init_Node_Buffer();
    init_Node7();
    init_Node5();
    init_Node3();
    init_Node9();
    init_PscIde2();
    Command = /* @__PURE__ */ function() {
      function Command2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Command2.create = function(value0) {
        return function(value1) {
          return new Command2(value0, value1);
        };
      };
      return Command2;
    }();
    rebuild2 = function(port) {
      return function(file) {
        return function(actualFile) {
          return function(targets) {
            var onResult = function() {
              var unwrap2 = function(v) {
                return v;
              };
              var $61 = either(function(errors) {
                return {
                  errors: {
                    errors,
                    warnings: []
                  },
                  success: true
                };
              })(function(warnings) {
                return {
                  errors: {
                    errors: [],
                    warnings
                  },
                  success: true
                };
              });
              var $62 = bimap(bifunctorEither)(unwrap2)(unwrap2);
              return function($63) {
                return $61($62($63));
              };
            }();
            return bind(bindAff)(rebuild(port)(file)(actualFile)(targets))(function(res) {
              return either(function() {
                var $64 = throwError(monadThrowAff);
                return function($65) {
                  return $64(error($65));
                };
              }())(function() {
                var $66 = pure(applicativeAff);
                return function($67) {
                  return $66(onResult($67));
                };
              }())(res);
            });
          };
        };
      };
    };
    getPathProp = function(env) {
      var $15 = member2("PATH")(env);
      if ($15) {
        return "PATH";
      }
      ;
      return "Path";
    };
    spawn3 = function(v) {
      return function __do2() {
        var v1 = function() {
          if (v.useNpmDir) {
            var pathVar = getPathVar(v.useNpmDir)(v.directory)();
            var env = getEnv();
            return {
              env: new Just(insert2(getPathProp(env))(either(identity(categoryFn))(identity(categoryFn))(pathVar))(env)),
              path: either($$const(Nothing.value))(Just.create)(pathVar)
            };
          }
          ;
          return {
            env: Nothing.value,
            path: Nothing.value
          };
        }();
        var cmd$prime = map(functorEffect)(function() {
          var $68 = fromMaybe(v.command.value0);
          return function($69) {
            return $68(head($69));
          };
        }())(whichSync({
          path: v1.path,
          pathExt: Nothing.value
        })(v.command.value0))();
        return spawn2(cmd$prime)(v.command.value1)({
          cwd: new Just(v.directory),
          stdio: defaultSpawnOptions.stdio,
          env: v1.env,
          detached: defaultSpawnOptions.detached,
          uid: defaultSpawnOptions.uid,
          gid: defaultSpawnOptions.gid
        })();
      };
    };
    spawnWithVersion = function(v) {
      return bind(bindAff)(liftEffect(monadEffectAff)(getPathVar(v.useNpmDir)(v.directory)))(function(pathVar) {
        return bind(bindAff)(findBins(pathVar)(v.command.value0))(function(cmdBins) {
          return bind(bindAff)(liftEffect(monadEffectAff)(function() {
            var v1 = uncons2(cmdBins);
            if (v1 instanceof Just) {
              return function __do2() {
                var env = liftEffect(monadEffectEffect)(getEnv)();
                var childEnv = insert2(getPathProp(env))(either(identity(categoryFn))(identity(categoryFn))(pathVar))(env);
                return map(functorEffect)(Just.create)(spawn2(v1.value0.head.value0)(v.command.value1)({
                  cwd: new Just(v.directory),
                  stdio: defaultSpawnOptions.stdio,
                  env: new Just(childEnv),
                  detached: defaultSpawnOptions.detached,
                  uid: defaultSpawnOptions.uid,
                  gid: defaultSpawnOptions.gid
                }))();
              };
            }
            ;
            return pure(applicativeEffect)(Nothing.value);
          }()))(function(cp) {
            return pure(applicativeAff)({
              cmdBins,
              cp
            });
          });
        });
      });
    };
    build2 = function(logCb) {
      return function(v) {
        return bind(bindAff)(spawnWithVersion(v))(function(v1) {
          return makeAff(function(cb) {
            var succ2 = function($70) {
              return cb(Right.create($70));
            };
            var err = function($71) {
              return cb(Left.create($71));
            };
            return function __do2() {
              logCb(Info.value)("Resolved build command (1st is used): ")();
              traverse_(applicativeEffect)(foldableArray)(function(v2) {
                return logCb(Info.value)(v2.value0 + maybe("")(function(v32) {
                  return ": " + v32;
                })(v2.value1));
              })(v1.cmdBins)();
              (function() {
                if (v1.cp instanceof Nothing) {
                  return succ2(new Left("Didn't find command in PATH: " + v.command.value0))();
                }
                ;
                if (v1.cp instanceof Just) {
                  logCb(Info.value)("Running build command: " + intercalate3(monoidString)(" ")(cons2(v.command.value0)(v.command.value1)))();
                  onError(v1.cp.value0)(function($72) {
                    return cb(Left.create(toStandardError($72)));
                  })();
                  var errOutput = $$new([])();
                  var outOutput = $$new([])();
                  var res = function(r) {
                    return function(s) {
                      return modify_(function(v2) {
                        return snoc2(v2)(s);
                      })(r);
                    };
                  };
                  catchException(err)(onData(stderr(v1.cp.value0))(res(errOutput)))();
                  catchException(err)(onData(stdout(v1.cp.value0))(res(outOutput)))();
                  return onClose(v1.cp.value0)(function(exit2) {
                    if (exit2 instanceof Normally && (exit2.value0 === 0 || exit2.value0 === 1)) {
                      return function __do3() {
                        var pursError = bind(bindEffect)(bind(bindEffect)(read(errOutput))(concat3(mutableBufferEffect)))(toString2(mutableBufferEffect)(UTF8.value))();
                        var pursOutput = bind(bindEffect)(bind(bindEffect)(read(outOutput))(concat3(mutableBufferEffect)))(toString2(mutableBufferEffect)(UTF8.value))();
                        var lines2 = split("\n")(pursError + pursOutput);
                        var v2 = partition2(function(s) {
                          return eq(eqMaybe(eqInt))(indexOf2('{"')(s))(new Just(0));
                        })(lines2);
                        logCb(Info.value)(joinWith("\n")(v2.no))();
                        var v32 = map(functorArray)(parsePscOutput)(v2.yes);
                        if (v32.length === 1 && v32[0] instanceof Left) {
                          return succ2(new Left("Couldn't parse build output: " + v32[0].value0))();
                        }
                        ;
                        if (v32.length === 1 && v32[0] instanceof Right) {
                          return succ2(new Right({
                            errors: v32[0].value0,
                            success: exit2.value0 === 0
                          }))();
                        }
                        ;
                        if (v32.length === 0) {
                          return succ2(new Left("Problem running build: " + function() {
                            var $51 = length5(pursError) > 0;
                            if ($51) {
                              return take5(500)(pursError);
                            }
                            ;
                            return "didn't find JSON output";
                          }()))();
                        }
                        ;
                        return succ2(new Left("Found multiple lines of JSON output, don't know what to do"))();
                      };
                    }
                    ;
                    return succ2(new Left("Build process exited abnormally"));
                  })();
                }
                ;
                throw new Error("Failed pattern match at IdePurescript.Build (line 111, column 9 - line 155, column 16): " + [v1.cp.constructor.name]);
              })();
              return mempty(monoidCanceler);
            };
          });
        });
      };
    };
  }
});

// output/LanguageServer.IdePurescript.FileTypes/index.js
var PureScriptFile, JavaScriptFile, UnsupportedFile, uriExtensionIs, uriToRelevantFileType, jsUriToMayPsUri;
var init_LanguageServer_IdePurescript5 = __esm({
  "output/LanguageServer.IdePurescript.FileTypes/index.js"() {
    init_Data();
    init_Data4();
    init_Data15();
    init_Data_String5();
    init_Data_String2();
    init_LanguageServer_Protocol3();
    PureScriptFile = /* @__PURE__ */ function() {
      function PureScriptFile2() {
      }
      ;
      PureScriptFile2.value = new PureScriptFile2();
      return PureScriptFile2;
    }();
    JavaScriptFile = /* @__PURE__ */ function() {
      function JavaScriptFile2() {
      }
      ;
      JavaScriptFile2.value = new JavaScriptFile2();
      return JavaScriptFile2;
    }();
    UnsupportedFile = /* @__PURE__ */ function() {
      function UnsupportedFile2() {
      }
      ;
      UnsupportedFile2.value = new UnsupportedFile2();
      return UnsupportedFile2;
    }();
    uriExtensionIs = function(v) {
      return function(ext) {
        var ext$prime = "." + ext;
        var v1 = splitAt2(length5(v) - length5(ext$prime) | 0)(v);
        return ext$prime === v1.after;
      };
    };
    uriToRelevantFileType = function(uri) {
      var extIs = uriExtensionIs(uri);
      var f = function() {
        if (extIs("purs")) {
          return PureScriptFile.value;
        }
        ;
        if (extIs("js")) {
          return JavaScriptFile.value;
        }
        ;
        if (otherwise) {
          return UnsupportedFile.value;
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.FileTypes (line 30, column 3 - line 33, column 34): " + []);
      }();
      return f;
    };
    jsUriToMayPsUri = function(v) {
      return mapFlipped(functorMaybe)(mapFlipped(functorMaybe)(stripSuffix(".js")(v))(function(v1) {
        return v1 + ".purs";
      }))(DocumentUri);
    };
  }
});

// output/LanguageServer.IdePurescript.Server/index.js
var retry, loadAll, getPackagerPaths, getEnvPursIdeSources, startServer$prime2;
var init_LanguageServer_IdePurescript6 = __esm({
  "output/LanguageServer.IdePurescript.Server/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data14();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data_String_Regex2();
    init_Data_String6();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_IdePurescript();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript2();
    init_Node6();
    init_Node_Buffer();
    init_Node7();
    init_Node5();
    init_Node3();
    init_PscIde2();
    retry = function(v) {
      return function(v1) {
        return function(a) {
          if (v1 > 0) {
            return bind(bindAff)(attempt(a))(function(res) {
              if (res instanceof Right) {
                return pure(applicativeAff)(res.value0);
              }
              ;
              if (res instanceof Left) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(v(Info.value)("Retrying starting server after 500ms: " + show(showError)(res.value0))))(function() {
                  return discard(discardUnit)(bindAff)(delay(500))(function() {
                    return retry(v)(v1 - 1 | 0)(a);
                  });
                });
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Server (line 42, column 7 - line 48, column 35): " + [res.constructor.name]);
            });
          }
          ;
          return a;
        };
      };
    };
    loadAll = function(port) {
      return map(functorAff)(either(Left.create)($$const(new Right(unit))))(load(port)([])([]));
    };
    getPackagerPaths = function(enabled) {
      return function(binName) {
        return function(settings) {
          return function(root) {
            var $13 = !enabled(settings);
            if ($13) {
              return pure(applicativeAff)([]);
            }
            ;
            return bind(bindAff)(liftEffect(monadEffectAff)(getPathVar(addNpmPath(settings))(root)))(function(pathVar) {
              return bind(bindAff)(findBins(pathVar)(binName))(function(serverBins) {
                var v = head(serverBins);
                if (v instanceof Just) {
                  return makeAff(function(cb) {
                    return function __do2() {
                      $$void(functorEffect)(execFile2(v.value0.value0)(["sources"])({
                        cwd: new Just(root),
                        env: defaultExecOptions.env,
                        encoding: defaultExecOptions.encoding,
                        shell: defaultExecOptions.shell,
                        timeout: defaultExecOptions.timeout,
                        maxBuffer: defaultExecOptions.maxBuffer,
                        killSignal: defaultExecOptions.killSignal,
                        uid: defaultExecOptions.uid,
                        gid: defaultExecOptions.gid
                      })(function(v1) {
                        return function __do3() {
                          var text = toString2(mutableBufferEffect)(UTF8.value)(v1.stdout)();
                          return cb(pure(applicativeEither)(lines(text)))();
                        };
                      }))();
                      return mempty(monoidCanceler);
                    };
                  });
                }
                ;
                return pure(applicativeAff)([]);
              });
            });
          };
        };
      };
    };
    getEnvPursIdeSources = function(dictMonadEffect) {
      return liftEffect(dictMonadEffect)(lookupEnv("PURS_IDE_SOURCES"));
    };
    startServer$prime2 = function(settings) {
      return function(root) {
        return function(cb) {
          return function(logCb) {
            var getGlob = function(fn) {
              return function(v) {
                if (!$$null2(v)) {
                  return [v + "/**/*.purs"];
                }
                ;
                return [];
              }(fn(settings));
            };
            var globs = append(semigroupArray)(getGlob(srcPath))(append(semigroupArray)(getGlob(packagePath))(sourceGlobs(settings)));
            var exe = pursExe(settings);
            return bind(bindAff)(getEnvPursIdeSources(monadEffectAff))(function(envIdeSources) {
              return bind(bindAff)(function() {
                if (envIdeSources instanceof Just) {
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)("Using sources from PURS_IDE_SOURCES")))(function() {
                    return pure(applicativeAff)(split2(unsafeRegex("[\\r\\n\\s]+")(noFlags))(envIdeSources.value0));
                  });
                }
                ;
                if (envIdeSources instanceof Nothing) {
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)("Using sources from psc-package/spago packages (PURS_IDE_SOURCES not set)")))(function() {
                    return bind(bindAff)(getPackagerPaths(addPscPackageSources)("psc-package")(settings)(root))(function(pscpGlob) {
                      return bind(bindAff)(getPackagerPaths(addSpagoSources)("spago")(settings)(root))(function(spagoGlob) {
                        return pure(applicativeAff)(append(semigroupArray)(pscpGlob)(spagoGlob));
                      });
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Server (line 62, column 19 - line 73, column 35): " + [envIdeSources.constructor.name]);
              }())(function(packageGlobs) {
                return startServer$prime({
                  exe,
                  combinedExe: true,
                  glob: filter2(function() {
                    var $23 = not(heytingAlgebraBoolean);
                    return function($24) {
                      return $23($$null2($24));
                    };
                  }())(append(semigroupArray)(globs)(packageGlobs)),
                  logLevel: logLevel(settings),
                  outputDirectory: new Just(effectiveOutputDirectory(settings)),
                  port: pscIdePort(settings)
                })(root)(addNpmPath(settings))(cb)(logCb);
              });
            });
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Types/index.js
var FullBuild, FastRebuild, DiagnosticsRebuild, ServerState;
var init_LanguageServer_IdePurescript7 = __esm({
  "output/LanguageServer.IdePurescript.Types/index.js"() {
    FullBuild = /* @__PURE__ */ function() {
      function FullBuild2() {
      }
      ;
      FullBuild2.value = new FullBuild2();
      return FullBuild2;
    }();
    FastRebuild = /* @__PURE__ */ function() {
      function FastRebuild2(value0) {
        this.value0 = value0;
      }
      ;
      FastRebuild2.create = function(value0) {
        return new FastRebuild2(value0);
      };
      return FastRebuild2;
    }();
    DiagnosticsRebuild = /* @__PURE__ */ function() {
      function DiagnosticsRebuild2(value0) {
        this.value0 = value0;
      }
      ;
      DiagnosticsRebuild2.create = function(value0) {
        return new DiagnosticsRebuild2(value0);
      };
      return DiagnosticsRebuild2;
    }();
    ServerState = function(x) {
      return x;
    };
  }
});

// output/PureScript.CST.Parser.Monad/index.js
var $runtime_lazy6, More, Done2, ParseFail, ParseSucc, lazyParser, functorParser, applyParser, bindParser, applicativeParser, altParser, $$try4, take6, runParser$prime, recover, optional2, many2, lookAhead, initialParserState, fromParserResult, runParser, eof;
var init_PureScript_CST_Parser = __esm({
  "output/PureScript.CST.Parser.Monad/index.js"() {
    init_Control6();
    init_Control4();
    init_Data39();
    init_Data16();
    init_Data4();
    init_Data40();
    init_Data38();
    init_Data_List();
    init_Data15();
    init_Data22();
    init_Data32();
    init_Data3();
    init_PureScript_CST3();
    init_PureScript_CST5();
    $runtime_lazy6 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    More = /* @__PURE__ */ function() {
      function More2(value0) {
        this.value0 = value0;
      }
      ;
      More2.create = function(value0) {
        return new More2(value0);
      };
      return More2;
    }();
    Done2 = /* @__PURE__ */ function() {
      function Done3(value0) {
        this.value0 = value0;
      }
      ;
      Done3.create = function(value0) {
        return new Done3(value0);
      };
      return Done3;
    }();
    ParseFail = /* @__PURE__ */ function() {
      function ParseFail2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ParseFail2.create = function(value0) {
        return function(value1) {
          return new ParseFail2(value0, value1);
        };
      };
      return ParseFail2;
    }();
    ParseSucc = /* @__PURE__ */ function() {
      function ParseSucc2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ParseSucc2.create = function(value0) {
        return function(value1) {
          return new ParseSucc2(value0, value1);
        };
      };
      return ParseSucc2;
    }();
    lazyParser = {
      defer: function(k) {
        var parser = defer2(k);
        return function(state2, more, resume2, done) {
          var v = force(parser);
          return v(state2, more, resume2, done);
        };
      }
    };
    functorParser = {
      map: function(f) {
        return function(v) {
          return function(state1, more, resume2, done) {
            return v(state1, more, resume2, function(state2, a) {
              return done(state2, f(a));
            });
          };
        };
      }
    };
    applyParser = {
      apply: function(v) {
        return function(v1) {
          return function(state1, more, resume2, done) {
            return v(state1, more, resume2, function(state2, f) {
              return more(function(v2) {
                return v1(state2, more, resume2, function(state3, a) {
                  return done(state3, f(a));
                });
              });
            });
          };
        };
      },
      Functor0: function() {
        return functorParser;
      }
    };
    bindParser = {
      bind: function(v) {
        return function(k) {
          return function(state1, more, resume2, done) {
            return v(state1, more, resume2, function(state2, a) {
              return more(function(v1) {
                var v2 = k(a);
                return v2(state2, more, resume2, done);
              });
            });
          };
        };
      },
      Apply0: function() {
        return applyParser;
      }
    };
    applicativeParser = {
      pure: function(a) {
        return function(state1, v, v1, done) {
          return done(state1, a);
        };
      },
      Apply0: function() {
        return applyParser;
      }
    };
    altParser = {
      alt: function(v) {
        return function(v1) {
          return function(state1, more, resume2, done) {
            var state2 = function() {
              if (state1.consumed) {
                return {
                  consumed: false,
                  errors: state1.errors,
                  stream: state1.stream
                };
              }
              ;
              return state1;
            }();
            return v(state2, more, function(state3, error4) {
              if (state3.consumed) {
                return resume2(state3, error4);
              }
              ;
              return v1(state1, more, resume2, done);
            }, done);
          };
        };
      },
      Functor0: function() {
        return functorParser;
      }
    };
    $$try4 = function(v) {
      return function(state1, more, resume2, done) {
        return v(state1, more, function(state2, error4) {
          return resume2({
            consumed: state1.consumed,
            errors: state2.errors,
            stream: state2.stream
          }, error4);
        }, done);
      };
    };
    take6 = function(k) {
      return function(state2, v, resume2, done) {
        var v1 = step2(state2.stream);
        if (v1 instanceof TokenError) {
          return resume2(state2, {
            error: v1.value1,
            position: v1.value0
          });
        }
        ;
        if (v1 instanceof TokenEOF) {
          return resume2(state2, {
            error: UnexpectedEof.value,
            position: v1.value0
          });
        }
        ;
        if (v1 instanceof TokenCons) {
          var v2 = k(v1.value0);
          if (v2 instanceof Left) {
            return resume2(state2, {
              error: v2.value0,
              position: v1.value0.range.start
            });
          }
          ;
          if (v2 instanceof Right) {
            return done({
              consumed: true,
              stream: v1.value2,
              errors: state2.errors
            }, v2.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 172, column 11 - line 182, column 18): " + [v2.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 166, column 7 - line 182, column 18): " + [v1.constructor.name]);
      };
    };
    runParser$prime = function(state1) {
      return function(v) {
        var run3 = function($copy_v1) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v1) {
            if (v1 instanceof More) {
              $copy_v1 = v1.value0(unit);
              return;
            }
            ;
            if (v1 instanceof Done2) {
              $tco_done = true;
              return v1.value0;
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 241, column 9 - line 243, column 16): " + [v1.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v1);
          }
          ;
          return $tco_result;
        };
        return run3(v(state1, More.create, function(state2, error4) {
          return new Done2(new ParseFail(error4, state2));
        }, function(state2, value) {
          return new Done2(new ParseSucc(value, state2));
        }));
      };
    };
    recover = function(k) {
      return function(v) {
        return function(state1, more, resume2, done) {
          return v({
            consumed: false,
            errors: state1.errors,
            stream: state1.stream
          }, more, function(state2, error4) {
            var v1 = k(error4)(state1.stream);
            if (v1 instanceof Nothing) {
              return resume2({
                consumed: state1.consumed,
                errors: state2.errors,
                stream: state2.stream
              }, error4);
            }
            ;
            if (v1 instanceof Just) {
              return done({
                consumed: true,
                errors: snoc2(state2.errors)(error4),
                stream: v1.value0.value1
              }, v1.value0.value0);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 149, column 13 - line 158, column 20): " + [v1.constructor.name]);
          }, done);
        };
      };
    };
    optional2 = function(p) {
      return alt(altParser)(map(functorParser)(Just.create)(p))(pure(applicativeParser)(Nothing.value));
    };
    many2 = function(v) {
      return function(state1, more, resume2, done) {
        var $lazy_go = $runtime_lazy6("go", "PureScript.CST.Parser.Monad", function() {
          return function(acc, state2) {
            var state2$prime = function() {
              if (state2.consumed) {
                return {
                  consumed: false,
                  errors: state2.errors,
                  stream: state2.stream
                };
              }
              ;
              return state2;
            }();
            return v(state2$prime, more, function(state3, error4) {
              if (state3.consumed) {
                return resume2(state3, error4);
              }
              ;
              return done(state2, reverse2(toUnfoldable(unfoldableArray)(acc)));
            }, function(state3, value) {
              return $lazy_go(225)(new Cons(value, acc), state3);
            });
          };
        });
        var go = $lazy_go(212);
        return go(Nil.value, state1);
      };
    };
    lookAhead = function(v) {
      return function(state1, more, resume2, done) {
        return v(state1, more, function(v1, error4) {
          return resume2(state1, error4);
        }, function(v1, value) {
          return done(state1, value);
        });
      };
    };
    initialParserState = function(stream) {
      return {
        consumed: false,
        errors: [],
        stream
      };
    };
    fromParserResult = function(v) {
      if (v instanceof ParseFail) {
        return new Left(v.value0);
      }
      ;
      if (v instanceof ParseSucc) {
        return new Right(new Tuple(v.value0, v.value1.errors));
      }
      ;
      throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 253, column 20 - line 257, column 29): " + [v.constructor.name]);
    };
    runParser = function(stream) {
      var $104 = runParser$prime(initialParserState(stream));
      return function($105) {
        return fromParserResult($104($105));
      };
    };
    eof = function(state2, v, resume2, done) {
      var v1 = step2(state2.stream);
      if (v1 instanceof TokenError) {
        return resume2(state2, {
          error: v1.value1,
          position: v1.value0
        });
      }
      ;
      if (v1 instanceof TokenEOF) {
        return done({
          consumed: true,
          stream: state2.stream,
          errors: state2.errors
        }, new Tuple(v1.value0, v1.value1));
      }
      ;
      if (v1 instanceof TokenCons) {
        return resume2(state2, {
          error: new ExpectedEof(v1.value0.value),
          position: v1.value0.range.start
        });
      }
      ;
      throw new Error("Failed pattern match at PureScript.CST.Parser.Monad (line 188, column 7 - line 197, column 14): " + [v1.constructor.name]);
    };
  }
});

// output/PureScript.CST.Parser/index.js
var $runtime_lazy7, wrapped, separated, reservedKeywords, recoverTokensWhile, recoverIndent, recoverLetBinding, recoverDoStatement, recoverDecl, parseSmallInt, many1, expectMap, parseBoolean, parseChar, parseHole, parseIdent, $$parseInt, parseLabel, parseModuleName, parseNumber, parseOperator, parseProper, parseQualifiedIdent, parseQualifiedIdentOrProper, parseQualifiedOperator, parseQualifiedProper, parseQualifiedSymbol, parseString, parseSymbol, expect, tokAt, tokBackslash, tokComma, tokDot, parseRecordAccessor, tokDoubleColon, parseInstanceName, tokEquals, tokForall, tokKeyOperator, parseBinderNegative, parseRecordLabeled, parseTypeNegative, tokKeySymbol, tokKeyword, parseFixityKeyword, parseFixityOp, parseDeclFixity, parseForeignKind, parseRole, parseDeclRole, tokLayoutEnd, tokLayoutSep, parseInstanceChainSeparator, tokLayoutStart, layout, layoutNonEmpty, tokLeftArrow, tokLeftBrace, tokLeftFatArrow, tokLeftParen, tokLeftSquare, tokPipe, tokQualifiedKeyword, tokRightArrow, parseFundep, tokRightBrace, tokRightFatArrow, tokRightParen, parens, parseEmptyRow, tokRightSquare, tokSymbolArrow, tokTick, tokUnderscore, delimited, parseDataMembers, parseExport, parseImport, parseImportDecl, parseModuleImportDecls, parseModuleHeader, braces, parseTypeParen, parseRowTailParen, parseRowParen, parseKindedVar, $lazy_parseForall, $lazy_parseRow, $lazy_parseRowLabel, $lazy_parseType, $lazy_parseType1, $lazy_parseType2, $lazy_parseType3, $lazy_parseType4, $lazy_parseType5, $lazy_parseTypeAtom, $lazy_parseTypeParens, $lazy_parseTypeVarBinding, $lazy_parseTypeVarKinded, parseType, parseType3, parseType5, parseTypeAtom, parseTypeVarBinding, parseDataCtor, $lazy_parseBinder, $lazy_parseBinder1, $lazy_parseBinder2, $lazy_parseBinderAtom, $lazy_parseBinderConstructor, $lazy_parseIdentBinder, parseBinder, parseBinder1, parseBinderAtom, parseClassConstraints, parseDeclDerive, parseClassMember, parseDeclClassSignature, parseDeclKindSignature, parseDeclSignature, parseForeignData, parseForeignValue, parseDeclForeign, parseInstanceBindingSignature, parseLetBindingSignature, parseRecordUpdates, parseRecordUpdateLeaf, parseRecordUpdateBranch, parseLetBindingName, parseGuarded, parseBadSingleCaseWhere, parseBadSingleCaseGuarded, $lazy_parseAdo, $lazy_parseBadSingleCaseBranch, $lazy_parseCase, $lazy_parseCaseBranches, $lazy_parseDo, $lazy_parseDoStatement, $lazy_parseExpr, $lazy_parseExpr1, $lazy_parseExpr2, $lazy_parseExpr3, $lazy_parseExpr4, $lazy_parseExpr5, $lazy_parseExpr6, $lazy_parseExpr7, $lazy_parseExprAtom, $lazy_parseIdentBinding, $lazy_parseIf, $lazy_parseLambda, $lazy_parseLetBinding, $lazy_parseLetIn, $lazy_parseRecordUpdate, $lazy_parseTickExpr, $lazy_parseTickExpr1, $lazy_parseWhere, parseDeclValue1, parseDeclValue, parseInstanceBindingName, parseInstanceBinding, parseInstance, parseDeclInstanceChain, parseDeclClass1, parseDeclClass, parseDeclData1, parseDeclData, parseDeclNewtype1, parseDeclNewtype, parseDeclType2, parseDeclType1, parseDeclType, parseDecl, parseModuleDecls, parseModuleBody, parseModule;
var init_PureScript_CST7 = __esm({
  "output/PureScript.CST.Parser/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control8();
    init_Data39();
    init_Data_Array2();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data12();
    init_Data48();
    init_Data22();
    init_PureScript_CST3();
    init_PureScript_CST4();
    init_PureScript_CST_Parser();
    init_PureScript_CST5();
    init_PureScript_CST();
    $runtime_lazy7 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    wrapped = function(openTok) {
      return function(closeTok) {
        return function(valueParser) {
          return bind(bindParser)(openTok)(function(open2) {
            return bind(bindParser)(valueParser)(function(value) {
              return bind(bindParser)(closeTok)(function(close2) {
                return pure(applicativeParser)({
                  open: open2,
                  value,
                  close: close2
                });
              });
            });
          });
        };
      };
    };
    separated = function(sepParser) {
      return function(valueParser) {
        return apply(applyParser)(map(functorParser)(function(v) {
          return function(v1) {
            return {
              head: v,
              tail: v1
            };
          };
        })(valueParser))(many2(apply(applyParser)(map(functorParser)(Tuple.create)(sepParser))(valueParser)));
      };
    };
    reservedKeywords = /* @__PURE__ */ fromFoldable5(foldableArray)(ordString)(["ado", "case", "class", "data", "derive", "do", "else", "false", "foreign", "if", "import", "in", "infix", "infixl", "infixr", "instance", "let", "module", "newtype", "of", "then", "true", "type", "where"]);
    recoverTokensWhile = function(p) {
      return function(initStream) {
        var indent = maybe(0)(function(v) {
          return v.column;
        })(currentIndent(layoutStack(initStream)));
        var go = function($copy_acc) {
          return function($copy_stream) {
            var $tco_var_acc = $copy_acc;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(acc, stream) {
              var v = step2(stream);
              if (v instanceof TokenError) {
                $tco_done = true;
                return new Tuple(acc, stream);
              }
              ;
              if (v instanceof TokenEOF) {
                $tco_done = true;
                return new Tuple(acc, stream);
              }
              ;
              if (v instanceof TokenCons) {
                var $115 = p(v.value0)(indent);
                if ($115) {
                  $tco_var_acc = snoc2(acc)(v.value0);
                  $copy_stream = v.value2;
                  return;
                }
                ;
                $tco_done = true;
                return new Tuple(acc, stream);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 1175, column 19 - line 1184, column 25): " + [v.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_acc, $copy_stream);
            }
            ;
            return $tco_result;
          };
        };
        return go([])(initStream);
      };
    };
    recoverIndent = function(mkNode) {
      return recover(function(v) {
        return function(stream) {
          var v1 = recoverTokensWhile(function(tok) {
            return function(indent) {
              if (tok.value instanceof TokLayoutEnd) {
                return tok.value.value0 > indent;
              }
              ;
              if (tok.value instanceof TokLayoutSep) {
                return tok.value.value0 > indent;
              }
              ;
              return true;
            };
          })(stream);
          var $125 = $$null(v1.value0);
          if ($125) {
            return Nothing.value;
          }
          ;
          return new Just(new Tuple(mkNode({
            position: v.position,
            error: v.error,
            tokens: v1.value0
          }), v1.value1));
        };
      });
    };
    recoverLetBinding = /* @__PURE__ */ function() {
      return recoverIndent(LetBindingError.create);
    }();
    recoverDoStatement = /* @__PURE__ */ function() {
      return recoverIndent(DoError.create);
    }();
    recoverDecl = /* @__PURE__ */ function() {
      return recoverIndent(DeclError.create);
    }();
    parseSmallInt = /* @__PURE__ */ take6(function(v) {
      if (v.value instanceof TokInt && v.value.value1 instanceof SmallInt) {
        return new Right(new Tuple(v, v.value.value1.value0));
      }
      ;
      if (v.value instanceof TokInt) {
        return new Left(new LexIntOutOfRange(v.value.value0));
      }
      ;
      return new Left(new UnexpectedToken(v.value));
    });
    many1 = function(parser) {
      return apply(applyParser)(map(functorParser)(cons$prime)(parser))(many2(parser));
    };
    expectMap = function(k) {
      return take6(function(tok) {
        var v = k(tok);
        if (v instanceof Just) {
          return new Right(v.value0);
        }
        ;
        if (v instanceof Nothing) {
          return new Left(new UnexpectedToken(tok.value));
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Parser (line 46, column 3 - line 50, column 39): " + [v.constructor.name]);
      });
    };
    parseBoolean = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "true")) {
        return new Just(new Tuple(v, true));
      }
      ;
      if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && v.value.value1 === "false")) {
        return new Just(new Tuple(v, false));
      }
      ;
      return Nothing.value;
    });
    parseChar = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokChar) {
        return new Just(new Tuple(v, v.value.value1));
      }
      ;
      return Nothing.value;
    });
    parseHole = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokHole) {
        return new Just({
          token: v,
          name: v.value.value0
        });
      }
      ;
      return Nothing.value;
    });
    parseIdent = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokLowerName && (v.value.value0 instanceof Nothing && !member3(ordString)(v.value.value1)(reservedKeywords))) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    $$parseInt = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokInt) {
        return new Just(new Tuple(v, v.value.value1));
      }
      ;
      return Nothing.value;
    });
    parseLabel = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokRawString) {
        return new Just({
          token: v,
          name: v.value.value0
        });
      }
      ;
      if (v.value instanceof TokString) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      if (v.value instanceof TokLowerName && v.value.value0 instanceof Nothing) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseModuleName = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokUpperName && v.value.value0 instanceof Just) {
        return new Just({
          token: v,
          name: v.value.value0.value0 + ("." + v.value.value1)
        });
      }
      ;
      if (v.value instanceof TokUpperName && v.value.value0 instanceof Nothing) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseNumber = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokNumber) {
        return new Just(new Tuple(v, v.value.value1));
      }
      ;
      return Nothing.value;
    });
    parseOperator = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokOperator && v.value.value0 instanceof Nothing) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseProper = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokUpperName && v.value.value0 instanceof Nothing) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseQualifiedIdent = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokLowerName && !member3(ordString)(v.value.value1)(reservedKeywords)) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseQualifiedIdentOrProper = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokLowerName) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: new Left(v.value.value1)
        });
      }
      ;
      if (v.value instanceof TokUpperName) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: new Right(v.value.value1)
        });
      }
      ;
      return Nothing.value;
    });
    parseQualifiedOperator = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokOperator) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseQualifiedProper = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokUpperName) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseQualifiedSymbol = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokSymbolName) {
        return new Just({
          token: v,
          module: v.value.value0,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    parseString = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokString) {
        return new Just(new Tuple(v, v.value.value1));
      }
      ;
      if (v.value instanceof TokRawString) {
        return new Just(new Tuple(v, v.value.value0));
      }
      ;
      return Nothing.value;
    });
    parseSymbol = /* @__PURE__ */ expectMap(function(v) {
      if (v.value instanceof TokSymbolName && v.value.value0 instanceof Nothing) {
        return new Just({
          token: v,
          name: v.value.value1
        });
      }
      ;
      return Nothing.value;
    });
    expect = function(pred2) {
      return expectMap(function(tok) {
        var $224 = pred2(tok.value);
        if ($224) {
          return new Just(tok);
        }
        ;
        return Nothing.value;
      });
    };
    tokAt = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokAt) {
        return true;
      }
      ;
      return false;
    });
    tokBackslash = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokBackslash) {
        return true;
      }
      ;
      return false;
    });
    tokComma = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokComma) {
        return true;
      }
      ;
      return false;
    });
    tokDot = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokDot) {
        return true;
      }
      ;
      return false;
    });
    parseRecordAccessor = function(expr) {
      return bind(bindParser)(tokDot)(function(dot) {
        return bind(bindParser)(separated(tokDot)(parseLabel))(function(path2) {
          return pure(applicativeParser)(new ExprRecordAccessor({
            expr,
            dot,
            path: path2
          }));
        });
      });
    };
    tokDoubleColon = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokDoubleColon) {
        return true;
      }
      ;
      return false;
    });
    parseInstanceName = /* @__PURE__ */ function() {
      return apply(applyParser)(map(functorParser)(Tuple.create)(parseIdent))(tokDoubleColon);
    }();
    tokEquals = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokEquals) {
        return true;
      }
      ;
      return false;
    });
    tokForall = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokForall) {
        return true;
      }
      ;
      return false;
    });
    tokKeyOperator = function(sym) {
      return expect(function(v) {
        if (v instanceof TokOperator && v.value0 instanceof Nothing) {
          return sym === v.value1;
        }
        ;
        return false;
      });
    };
    parseBinderNegative = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyOperator("-"))(function(negative) {
      return alt(altParser)(map(functorParser)(uncurry(BinderInt.create(new Just(negative))))($$parseInt))(map(functorParser)(uncurry(BinderNumber.create(new Just(negative))))(parseNumber));
    });
    parseRecordLabeled = function(valueParser) {
      var parseRecordField = apply(applyParser)(map(functorParser)(uncurry(RecordField.create))($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseLabel))(tokKeyOperator(":")))))(valueParser);
      return alt(altParser)(parseRecordField)(map(functorParser)(RecordPun.create)(parseIdent));
    };
    parseTypeNegative = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyOperator("-"))(function(negative) {
      return map(functorParser)(uncurry(TypeInt.create(new Just(negative))))($$parseInt);
    });
    tokKeySymbol = function(sym) {
      return expect(function(v) {
        if (v instanceof TokSymbolName && v.value0 instanceof Nothing) {
          return sym === v.value1;
        }
        ;
        return false;
      });
    };
    tokKeyword = function(kw) {
      return expect(function(v) {
        if (v instanceof TokLowerName && v.value0 instanceof Nothing) {
          return kw === v.value1;
        }
        ;
        return false;
      });
    };
    parseFixityKeyword = /* @__PURE__ */ function() {
      return alt(altParser)(map(functorParser)(flip(Tuple.create)(Infix.value))(tokKeyword("infix")))(alt(altParser)(map(functorParser)(flip(Tuple.create)(Infixl.value))(tokKeyword("infixl")))(map(functorParser)(flip(Tuple.create)(Infixr.value))(tokKeyword("infixr"))));
    }();
    parseFixityOp = /* @__PURE__ */ function() {
      return alt(altParser)(apply(applyParser)(apply(applyParser)(apply(applyParser)(map(functorParser)(FixityType.create)(tokKeyword("type")))(parseQualifiedProper))(tokKeyword("as")))(parseOperator))(apply(applyParser)(apply(applyParser)(map(functorParser)(FixityValue.create)(parseQualifiedIdentOrProper))(tokKeyword("as")))(parseOperator));
    }();
    parseDeclFixity = /* @__PURE__ */ bind(bindParser)(parseFixityKeyword)(function(keyword) {
      return bind(bindParser)(parseSmallInt)(function(prec) {
        return bind(bindParser)(parseFixityOp)(function(operator) {
          return pure(applicativeParser)(new DeclFixity({
            keyword,
            prec,
            operator
          }));
        });
      });
    });
    parseForeignKind = /* @__PURE__ */ function() {
      return $$try4(apply(applyParser)(map(functorParser)(ForeignKind.create)(tokKeyword("kind")))(parseProper));
    }();
    parseRole = /* @__PURE__ */ function() {
      return alt(altParser)(map(functorParser)(flip(Tuple.create)(Representational.value))(tokKeyword("representational")))(alt(altParser)(map(functorParser)(flip(Tuple.create)(Nominal.value))(tokKeyword("nominal")))(map(functorParser)(flip(Tuple.create)(Phantom.value))(tokKeyword("phantom"))));
    }();
    parseDeclRole = function(keyword1) {
      return bind(bindParser)(tokKeyword("role"))(function(keyword2) {
        return bind(bindParser)(parseProper)(function(name2) {
          return bind(bindParser)(many1(parseRole))(function(roles) {
            return pure(applicativeParser)(new DeclRole(keyword1, keyword2, name2, roles));
          });
        });
      });
    };
    tokLayoutEnd = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLayoutEnd) {
        return true;
      }
      ;
      return false;
    });
    tokLayoutSep = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLayoutSep) {
        return true;
      }
      ;
      return false;
    });
    parseInstanceChainSeparator = /* @__PURE__ */ applyFirst(applyParser)(/* @__PURE__ */ tokKeyword("else"))(/* @__PURE__ */ optional2(tokLayoutSep));
    tokLayoutStart = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLayoutStart) {
        return true;
      }
      ;
      return false;
    });
    layout = function(valueParser) {
      var tail2 = many2(applySecond(applyParser)(tokLayoutSep)(valueParser));
      var go = function(head4) {
        return map(functorParser)(cons2(head4))(tail2);
      };
      var values3 = alt(altParser)(bindFlipped(bindParser)(go)(valueParser))(pure(applicativeParser)([]));
      return applyFirst(applyParser)(applySecond(applyParser)(tokLayoutStart)(values3))(tokLayoutEnd);
    };
    layoutNonEmpty = function(valueParser) {
      return apply(applyParser)(map(functorParser)(function(v) {
        return function(v1) {
          return cons$prime(v)(v1);
        };
      })(applySecond(applyParser)(tokLayoutStart)(valueParser)))(applyFirst(applyParser)(many2(applySecond(applyParser)(tokLayoutSep)(valueParser)))(tokLayoutEnd));
    };
    tokLeftArrow = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLeftArrow) {
        return true;
      }
      ;
      return false;
    });
    tokLeftBrace = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLeftBrace) {
        return true;
      }
      ;
      return false;
    });
    tokLeftFatArrow = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokOperator && v.value0 instanceof Nothing) {
        return v.value1 === "<=" || v.value1 === "\u21D0";
      }
      ;
      return false;
    });
    tokLeftParen = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLeftParen) {
        return true;
      }
      ;
      return false;
    });
    tokLeftSquare = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokLeftSquare) {
        return true;
      }
      ;
      return false;
    });
    tokPipe = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokPipe) {
        return true;
      }
      ;
      return false;
    });
    tokQualifiedKeyword = function(kw) {
      return expect(function(v) {
        if (v instanceof TokLowerName) {
          return kw === v.value1;
        }
        ;
        return false;
      });
    };
    tokRightArrow = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokRightArrow) {
        return true;
      }
      ;
      return false;
    });
    parseFundep = /* @__PURE__ */ function() {
      return alt(altParser)(apply(applyParser)(map(functorParser)(FundepDetermined.create)(tokRightArrow))(many1(parseIdent)))(apply(applyParser)(apply(applyParser)(map(functorParser)(FundepDetermines.create)(many1(parseIdent)))(tokRightArrow))(many1(parseIdent)));
    }();
    tokRightBrace = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokRightBrace) {
        return true;
      }
      ;
      return false;
    });
    tokRightFatArrow = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokRightFatArrow) {
        return true;
      }
      ;
      return false;
    });
    tokRightParen = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokRightParen) {
        return true;
      }
      ;
      return false;
    });
    parens = /* @__PURE__ */ wrapped(tokLeftParen)(tokRightParen);
    parseEmptyRow = function(open2) {
      return bind(bindParser)(tokRightParen)(function(close2) {
        return pure(applicativeParser)(new TypeRow({
          open: open2,
          value: {
            labels: Nothing.value,
            tail: Nothing.value
          },
          close: close2
        }));
      });
    };
    tokRightSquare = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokRightSquare) {
        return true;
      }
      ;
      return false;
    });
    tokSymbolArrow = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokSymbolArrow) {
        return true;
      }
      ;
      return false;
    });
    tokTick = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokTick) {
        return true;
      }
      ;
      return false;
    });
    tokUnderscore = /* @__PURE__ */ expect(function(v) {
      if (v instanceof TokUnderscore) {
        return true;
      }
      ;
      return false;
    });
    delimited = function(openTok) {
      return function(closeTok) {
        return function(sepTok) {
          return function(valueParser) {
            var parseNonEmpty = function(open2) {
              return apply(applyParser)(map(functorParser)(function(v) {
                return function(v1) {
                  return {
                    open: open2,
                    value: new Just(v),
                    close: v1
                  };
                };
              })(separated(sepTok)(valueParser)))(closeTok);
            };
            var parseEmpty = function(open2) {
              return map(functorParser)(function(v) {
                return {
                  open: open2,
                  value: Nothing.value,
                  close: v
                };
              })(closeTok);
            };
            return bind(bindParser)(openTok)(function(open2) {
              return alt(altParser)(parseEmpty(open2))(parseNonEmpty(open2));
            });
          };
        };
      };
    };
    parseDataMembers = /* @__PURE__ */ function() {
      return alt(altParser)(map(functorParser)(DataAll.create)(tokKeySymbol("..")))(map(functorParser)(DataEnumerated.create)(delimited(tokLeftParen)(tokRightParen)(tokComma)(parseProper)));
    }();
    parseExport = /* @__PURE__ */ function() {
      return alt(altParser)(apply(applyParser)(map(functorParser)(ExportTypeOp.create)(tokKeyword("type")))(parseSymbol))(alt(altParser)(apply(applyParser)(map(functorParser)(ExportClass.create)(tokKeyword("class")))(parseProper))(alt(altParser)(apply(applyParser)(map(functorParser)(ExportModule.create)(tokKeyword("module")))(parseModuleName))(alt(altParser)(map(functorParser)(ExportOp.create)(parseSymbol))(alt(altParser)(map(functorParser)(ExportValue.create)(parseIdent))(apply(applyParser)(map(functorParser)(ExportType.create)(parseProper))(optional2(parseDataMembers)))))));
    }();
    parseImport = /* @__PURE__ */ function() {
      return alt(altParser)(map(functorParser)(ImportOp.create)(parseSymbol))(alt(altParser)(apply(applyParser)(map(functorParser)(ImportType.create)(parseProper))(optional2(parseDataMembers)))(alt(altParser)(apply(applyParser)(map(functorParser)(ImportTypeOp.create)(tokKeyword("type")))(parseSymbol))(alt(altParser)(apply(applyParser)(map(functorParser)(ImportClass.create)(tokKeyword("class")))(parseProper))(map(functorParser)(ImportValue.create)(parseIdent)))));
    }();
    parseImportDecl = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("import"))(function(keyword) {
      return bind(bindParser)(parseModuleName)(function(module_) {
        return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(optional2(tokKeyword("hiding"))))(parens(separated(tokComma)(parseImport)))))(function(names) {
          return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokKeyword("as")))(parseModuleName)))(function(qualified) {
            return pure(applicativeParser)({
              keyword,
              module: module_,
              names,
              qualified
            });
          });
        });
      });
    });
    parseModuleImportDecls = /* @__PURE__ */ many2(/* @__PURE__ */ applyFirst(applyParser)(parseImportDecl)(/* @__PURE__ */ alt(altParser)(tokLayoutSep)(/* @__PURE__ */ lookAhead(tokLayoutEnd))));
    parseModuleHeader = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("module"))(function(keyword) {
      return bind(bindParser)(parseModuleName)(function(name2) {
        return bind(bindParser)(optional2(parens(separated(tokComma)(parseExport))))(function(exports2) {
          return bind(bindParser)(tokKeyword("where"))(function(where_) {
            return bind(bindParser)(applySecond(applyParser)(tokLayoutStart)(parseModuleImportDecls))(function(imports) {
              return pure(applicativeParser)({
                keyword,
                name: name2,
                exports: exports2,
                where: where_,
                imports
              });
            });
          });
        });
      });
    });
    braces = /* @__PURE__ */ wrapped(tokLeftBrace)(tokRightBrace);
    parseTypeParen = function(open2) {
      return bind(bindParser)($lazy_parseType(515))(function(value) {
        return bind(bindParser)(tokRightParen)(function(close2) {
          return pure(applicativeParser)(new TypeParens({
            open: open2,
            value,
            close: close2
          }));
        });
      });
    };
    parseRowTailParen = function(open2) {
      return bind(bindParser)(apply(applyParser)(map(functorParser)(Tuple.create)(tokPipe))($lazy_parseType(485)))(function(tail2) {
        return bind(bindParser)(tokRightParen)(function(close2) {
          return pure(applicativeParser)(new TypeRow({
            open: open2,
            value: {
              labels: Nothing.value,
              tail: new Just(tail2)
            },
            close: close2
          }));
        });
      });
    };
    parseRowParen = function(open2) {
      return bind(bindParser)($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseLabel))(tokDoubleColon)))(function(v) {
        return bind(bindParser)($lazy_parseType(467))(function(value) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)(tokComma))($lazy_parseRowLabel(468))))(function(rest) {
            return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokPipe))($lazy_parseType(469))))(function(tail2) {
              return bind(bindParser)(tokRightParen)(function(close2) {
                return pure(applicativeParser)(new TypeRow({
                  open: open2,
                  value: {
                    labels: new Just({
                      head: {
                        label: v.value0,
                        separator: v.value1,
                        value
                      },
                      tail: rest
                    }),
                    tail: tail2
                  },
                  close: close2
                }));
              });
            });
          });
        });
      });
    };
    parseKindedVar = function(open2) {
      return bind(bindParser)($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parens(map(functorParser)(TypeVar.create)(parseIdent))))(tokDoubleColon)))(function(v) {
        return bind(bindParser)($lazy_parseType(505))(function(kind) {
          return bind(bindParser)(tokRightParen)(function(close2) {
            return pure(applicativeParser)(new TypeParens({
              open: open2,
              value: new TypeKinded(new TypeParens(v.value0), v.value1, kind),
              close: close2
            }));
          });
        });
      });
    };
    $lazy_parseForall = /* @__PURE__ */ $runtime_lazy7("parseForall", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return apply(applyParser)(apply(applyParser)(apply(applyParser)(map(functorParser)(TypeForall.create)(tokForall))(many1($lazy_parseTypeVarBinding(536))))(tokDot))($lazy_parseType1(538));
      });
    });
    $lazy_parseRow = /* @__PURE__ */ $runtime_lazy7("parseRow", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)(optional2(separated(tokComma)($lazy_parseRowLabel(521))))(function(labels) {
          return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokPipe))($lazy_parseType(522))))(function(tail2) {
            return pure(applicativeParser)({
              labels,
              tail: tail2
            });
          });
        });
      });
    });
    $lazy_parseRowLabel = /* @__PURE__ */ $runtime_lazy7("parseRowLabel", "PureScript.CST.Parser", function() {
      return bind(bindParser)(parseLabel)(function(label) {
        return bind(bindParser)(tokDoubleColon)(function(separator) {
          return bind(bindParser)($lazy_parseType(529))(function(value) {
            return pure(applicativeParser)({
              label,
              separator,
              value
            });
          });
        });
      });
    });
    $lazy_parseType = /* @__PURE__ */ $runtime_lazy7("parseType", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseType1(401))(function(ty) {
          return alt(altParser)(apply(applyParser)(map(functorParser)(TypeKinded.create(ty))(tokDoubleColon))($lazy_parseType(402)))(pure(applicativeParser)(ty));
        });
      });
    });
    $lazy_parseType1 = /* @__PURE__ */ $runtime_lazy7("parseType1", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)($lazy_parseForall(407))($lazy_parseType2(408));
      });
    });
    $lazy_parseType2 = /* @__PURE__ */ $runtime_lazy7("parseType2", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseType3(412))(function(ty) {
          return alt(altParser)(apply(applyParser)(map(functorParser)(TypeArrow.create(ty))(tokRightArrow))($lazy_parseType1(413)))(alt(altParser)(apply(applyParser)(map(functorParser)(TypeConstrained.create(ty))(tokRightFatArrow))($lazy_parseType1(414)))(pure(applicativeParser)(ty)));
        });
      });
    });
    $lazy_parseType3 = /* @__PURE__ */ $runtime_lazy7("parseType3", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseType4(419))(function(ty) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)(parseQualifiedOperator))($lazy_parseType4(420))))(function(ops) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(ops);
              if (v1 instanceof Nothing) {
                return ty;
              }
              ;
              if (v1 instanceof Just) {
                return new TypeOp(ty, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 421, column 8 - line 423, column 28): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseType4 = /* @__PURE__ */ $runtime_lazy7("parseType4", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(parseTypeNegative)($lazy_parseType5(427));
      });
    });
    $lazy_parseType5 = /* @__PURE__ */ $runtime_lazy7("parseType5", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseTypeAtom(431))(function(ty) {
          return bind(bindParser)(many2($lazy_parseTypeAtom(432)))(function(args) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(args);
              if (v1 instanceof Nothing) {
                return ty;
              }
              ;
              if (v1 instanceof Just) {
                return new TypeApp(ty, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 433, column 8 - line 435, column 29): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseTypeAtom = /* @__PURE__ */ $runtime_lazy7("parseTypeAtom", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(map(functorParser)(TypeVar.create)(parseIdent))(alt(altParser)(map(functorParser)(TypeConstructor.create)(parseQualifiedProper))(alt(altParser)(map(functorParser)(uncurry(TypeString.create))(parseString))(alt(altParser)(map(functorParser)(uncurry(TypeInt.create(Nothing.value)))($$parseInt))(alt(altParser)($lazy_parseTypeParens(443))(alt(altParser)(map(functorParser)(TypeRecord.create)(braces($lazy_parseRow(444))))(alt(altParser)(map(functorParser)(TypeOpName.create)(parseQualifiedSymbol))(alt(altParser)(map(functorParser)(TypeHole.create)(parseHole))(alt(altParser)(map(functorParser)(TypeWildcard.create)(tokUnderscore))(map(functorParser)(TypeArrowName.create)(tokSymbolArrow))))))))));
      });
    });
    $lazy_parseTypeParens = /* @__PURE__ */ $runtime_lazy7("parseTypeParens", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokLeftParen)(function(open2) {
        return alt(altParser)(parseRowParen(open2))(alt(altParser)(parseRowTailParen(open2))(alt(altParser)(parseKindedVar(open2))(alt(altParser)(parseTypeParen(open2))(parseEmptyRow(open2)))));
      });
    });
    $lazy_parseTypeVarBinding = /* @__PURE__ */ $runtime_lazy7("parseTypeVarBinding", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)($lazy_parseTypeVarKinded(542))(map(functorParser)(TypeVarName.create)(parseIdent));
      });
    });
    $lazy_parseTypeVarKinded = /* @__PURE__ */ $runtime_lazy7("parseTypeVarKinded", "PureScript.CST.Parser", function() {
      return map(functorParser)(TypeVarKinded.create)(parens(bind(bindParser)(parseIdent)(function(label) {
        return bind(bindParser)(tokDoubleColon)(function(separator) {
          return bind(bindParser)($lazy_parseType(549))(function(value) {
            return pure(applicativeParser)({
              label,
              separator,
              value
            });
          });
        });
      })));
    });
    parseType = /* @__PURE__ */ $lazy_parseType(399);
    parseType3 = /* @__PURE__ */ $lazy_parseType3(417);
    parseType5 = /* @__PURE__ */ $lazy_parseType5(429);
    parseTypeAtom = /* @__PURE__ */ $lazy_parseTypeAtom(437);
    parseTypeVarBinding = /* @__PURE__ */ $lazy_parseTypeVarBinding(540);
    parseDataCtor = /* @__PURE__ */ apply(applyParser)(/* @__PURE__ */ map(functorParser)(function(v) {
      return function(v1) {
        return {
          name: v,
          fields: v1
        };
      };
    })(parseProper))(/* @__PURE__ */ many2(parseTypeAtom));
    $lazy_parseBinder = /* @__PURE__ */ $runtime_lazy7("parseBinder", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseBinder1(806))(function(binder) {
          return alt(altParser)(apply(applyParser)(map(functorParser)(BinderTyped.create(binder))(tokDoubleColon))(parseType))(pure(applicativeParser)(binder));
        });
      });
    });
    $lazy_parseBinder1 = /* @__PURE__ */ $runtime_lazy7("parseBinder1", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseBinder2(812))(function(binder) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)(parseQualifiedOperator))($lazy_parseBinder2(813))))(function(ops) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(ops);
              if (v1 instanceof Nothing) {
                return binder;
              }
              ;
              if (v1 instanceof Just) {
                return new BinderOp(binder, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 814, column 8 - line 816, column 34): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseBinder2 = /* @__PURE__ */ $runtime_lazy7("parseBinder2", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(parseBinderNegative)(alt(altParser)($lazy_parseBinderConstructor(821))($lazy_parseBinderAtom(822)));
      });
    });
    $lazy_parseBinderAtom = /* @__PURE__ */ $runtime_lazy7("parseBinderAtom", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)($lazy_parseIdentBinder(838))(alt(altParser)(map(functorParser)(flip(BinderConstructor.create)([]))(parseQualifiedProper))(alt(altParser)(map(functorParser)(BinderWildcard.create)(tokUnderscore))(alt(altParser)(map(functorParser)(uncurry(BinderString.create))(parseString))(alt(altParser)(map(functorParser)(uncurry(BinderChar.create))(parseChar))(alt(altParser)(map(functorParser)(uncurry(BinderBoolean.create))(parseBoolean))(alt(altParser)(map(functorParser)(uncurry(BinderInt.create(Nothing.value)))($$parseInt))(alt(altParser)(map(functorParser)(uncurry(BinderNumber.create(Nothing.value)))(parseNumber))(alt(altParser)(map(functorParser)(BinderArray.create)(delimited(tokLeftSquare)(tokRightSquare)(tokComma)($lazy_parseBinder(846))))(alt(altParser)(map(functorParser)(BinderRecord.create)(delimited(tokLeftBrace)(tokRightBrace)(tokComma)(parseRecordLabeled($lazy_parseBinder(847)))))(map(functorParser)(BinderParens.create)(parens($lazy_parseBinder(848)))))))))))));
      });
    });
    $lazy_parseBinderConstructor = /* @__PURE__ */ $runtime_lazy7("parseBinderConstructor", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)(parseQualifiedProper)(function(name2) {
          return bind(bindParser)(many2($lazy_parseBinderAtom(833)))(function(apps) {
            return pure(applicativeParser)(new BinderConstructor(name2, apps));
          });
        });
      });
    });
    $lazy_parseIdentBinder = /* @__PURE__ */ $runtime_lazy7("parseIdentBinder", "PureScript.CST.Parser", function() {
      return bind(bindParser)(parseIdent)(function(ident) {
        return alt(altParser)(apply(applyParser)(map(functorParser)(BinderNamed.create(ident))(tokAt))($lazy_parseBinderAtom(853)))(pure(applicativeParser)(new BinderVar(ident)));
      });
    });
    parseBinder = /* @__PURE__ */ $lazy_parseBinder(804);
    parseBinder1 = /* @__PURE__ */ $lazy_parseBinder1(810);
    parseBinderAtom = /* @__PURE__ */ $lazy_parseBinderAtom(836);
    parseClassConstraints = function(parseOneConstraint) {
      return alt(altParser)(map(functorParser)(Many.create)(parens(separated(tokComma)(parseType))))(map(functorParser)(One.create)(parseOneConstraint));
    };
    parseDeclDerive = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("derive"))(function(derive_) {
      return bind(bindParser)(optional2(tokKeyword("newtype")))(function(newtype_) {
        return bind(bindParser)(tokKeyword("instance"))(function(keyword) {
          return bind(bindParser)(optional2(parseInstanceName))(function(name2) {
            return bind(bindParser)(optional2($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseClassConstraints(parseType3)))(tokRightFatArrow))))(function(constraints) {
              return bind(bindParser)(parseQualifiedProper)(function(className) {
                return bind(bindParser)(many2(parseTypeAtom))(function(types) {
                  return pure(applicativeParser)(new DeclDerive(derive_, newtype_, {
                    keyword,
                    name: name2,
                    constraints,
                    className,
                    types
                  }));
                });
              });
            });
          });
        });
      });
    });
    parseClassMember = /* @__PURE__ */ bind(bindParser)(parseIdent)(function(label) {
      return bind(bindParser)(tokDoubleColon)(function(separator) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)({
            label,
            separator,
            value
          });
        });
      });
    });
    parseDeclClassSignature = function(keyword) {
      return bind(bindParser)($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseProper))(tokDoubleColon)))(function(v) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)(new DeclKindSignature(keyword, {
            label: v.value0,
            separator: v.value1,
            value
          }));
        });
      });
    };
    parseDeclKindSignature = function(keyword) {
      return function(label) {
        return bind(bindParser)(tokDoubleColon)(function(separator) {
          return bind(bindParser)(parseType)(function(value) {
            return pure(applicativeParser)(new DeclKindSignature(keyword, {
              label,
              separator,
              value
            }));
          });
        });
      };
    };
    parseDeclSignature = function(label) {
      return bind(bindParser)(tokDoubleColon)(function(separator) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)(new DeclSignature({
            label,
            separator,
            value
          }));
        });
      });
    };
    parseForeignData = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("data"))(function(keyword) {
      return bind(bindParser)(parseProper)(function(label) {
        return bind(bindParser)(tokDoubleColon)(function(separator) {
          return bind(bindParser)(parseType)(function(value) {
            return pure(applicativeParser)(new ForeignData(keyword, {
              label,
              separator,
              value
            }));
          });
        });
      });
    });
    parseForeignValue = /* @__PURE__ */ bind(bindParser)(parseIdent)(function(label) {
      return bind(bindParser)(tokDoubleColon)(function(separator) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)(new ForeignValue({
            label,
            separator,
            value
          }));
        });
      });
    });
    parseDeclForeign = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("foreign"))(function(keyword1) {
      return bind(bindParser)(tokKeyword("import"))(function(keyword2) {
        return bind(bindParser)(alt(altParser)(parseForeignData)(alt(altParser)(parseForeignKind)(parseForeignValue)))(function(foreign_) {
          return pure(applicativeParser)(new DeclForeign(keyword1, keyword2, foreign_));
        });
      });
    });
    parseInstanceBindingSignature = function(label) {
      return bind(bindParser)(tokDoubleColon)(function(separator) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)(new InstanceBindingSignature({
            label,
            separator,
            value
          }));
        });
      });
    };
    parseLetBindingSignature = function(label) {
      return bind(bindParser)(tokDoubleColon)(function(separator) {
        return bind(bindParser)(parseType)(function(value) {
          return pure(applicativeParser)(new LetBindingSignature({
            label,
            separator,
            value
          }));
        });
      });
    };
    parseRecordUpdates = function(expr) {
      return bind(bindParser)($$try4(applyFirst(applyParser)(tokLeftBrace)(lookAhead(applySecond(applyParser)(parseLabel)(alt(altParser)(tokEquals)(tokLeftBrace))))))(function(open2) {
        return bind(bindParser)(separated(tokComma)($lazy_parseRecordUpdate(690)))(function(value) {
          return bind(bindParser)(tokRightBrace)(function(close2) {
            return pure(applicativeParser)(new ExprRecordUpdate(expr, {
              open: open2,
              value,
              close: close2
            }));
          });
        });
      });
    };
    parseRecordUpdateLeaf = function(label) {
      return apply(applyParser)(map(functorParser)(RecordUpdateLeaf.create(label))(tokEquals))($lazy_parseExpr(704));
    };
    parseRecordUpdateBranch = function(label) {
      return map(functorParser)(RecordUpdateBranch.create(label))(braces(separated(tokComma)($lazy_parseRecordUpdate(709))));
    };
    parseLetBindingName = function(name2) {
      return bind(bindParser)(many2(parseBinderAtom))(function(binders) {
        return bind(bindParser)(parseGuarded(tokEquals))(function(guarded) {
          return pure(applicativeParser)(new LetBindingName({
            name: name2,
            binders,
            guarded
          }));
        });
      });
    };
    parseGuarded = function(sepParser) {
      var parsePatternGuard = apply(applyParser)(map(functorParser)(function(v) {
        return function(v1) {
          return {
            binder: v,
            expr: v1
          };
        };
      })(optional2($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseBinder))(tokLeftArrow)))))($lazy_parseExpr(795));
      var parseGuardedExpr = apply(applyParser)(apply(applyParser)(apply(applyParser)(map(functorParser)(function(v) {
        return function(v1) {
          return function(v2) {
            return function(v32) {
              return {
                bar: v,
                patterns: v1,
                separator: v2,
                where: v32
              };
            };
          };
        };
      })(tokPipe))(separated(tokComma)(parsePatternGuard)))(sepParser))($lazy_parseWhere(789));
      return alt(altParser)(apply(applyParser)(map(functorParser)(Unconditional.create)(sepParser))($lazy_parseWhere(781)))(map(functorParser)(Guarded.create)(many1(parseGuardedExpr)));
    };
    parseBadSingleCaseWhere = function(binder) {
      return bind(bindParser)(tokRightArrow)(function(arrow) {
        return bind(bindParser)(applySecond(applyParser)(tokLayoutEnd)($lazy_parseWhere(659)))(function(body) {
          return pure(applicativeParser)(singleton9(new Tuple({
            head: binder,
            tail: []
          }, new Unconditional(arrow, body))));
        });
      });
    };
    parseBadSingleCaseGuarded = function(binder) {
      return bind(bindParser)(applySecond(applyParser)(tokLayoutEnd)(parseGuarded(tokRightArrow)))(function(body) {
        return pure(applicativeParser)(singleton9(new Tuple({
          head: binder,
          tail: []
        }, body)));
      });
    };
    $lazy_parseAdo = /* @__PURE__ */ $runtime_lazy7("parseAdo", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokQualifiedKeyword("ado"))(function(keyword) {
        return bind(bindParser)(layout(recoverDoStatement($lazy_parseDoStatement(676))))(function(statements) {
          return bind(bindParser)(tokKeyword("in"))(function(in_) {
            return bind(bindParser)($lazy_parseExpr(678))(function(result2) {
              return pure(applicativeParser)(new ExprAdo({
                keyword,
                statements,
                "in": in_,
                result: result2
              }));
            });
          });
        });
      });
    });
    $lazy_parseBadSingleCaseBranch = /* @__PURE__ */ $runtime_lazy7("parseBadSingleCaseBranch", "PureScript.CST.Parser", function() {
      return bind(bindParser)(applySecond(applyParser)(tokLayoutStart)(parseBinder1))(function(binder) {
        return alt(altParser)(parseBadSingleCaseWhere(binder))(parseBadSingleCaseGuarded(binder));
      });
    });
    $lazy_parseCase = /* @__PURE__ */ $runtime_lazy7("parseCase", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokKeyword("case"))(function(keyword) {
        return bind(bindParser)(separated(tokComma)($lazy_parseExpr(641)))(function(head4) {
          return bind(bindParser)(tokKeyword("of"))(function(of_) {
            return bind(bindParser)(alt(altParser)($$try4($lazy_parseBadSingleCaseBranch(643)))($lazy_parseCaseBranches(643)))(function(branches) {
              return pure(applicativeParser)(new ExprCase({
                keyword,
                head: head4,
                of: of_,
                branches
              }));
            });
          });
        });
      });
    });
    $lazy_parseCaseBranches = /* @__PURE__ */ $runtime_lazy7("parseCaseBranches", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return layoutNonEmpty(apply(applyParser)(map(functorParser)(Tuple.create)(separated(tokComma)(parseBinder1)))(parseGuarded(tokRightArrow)));
      });
    });
    $lazy_parseDo = /* @__PURE__ */ $runtime_lazy7("parseDo", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokQualifiedKeyword("do"))(function(keyword) {
        return bind(bindParser)(layoutNonEmpty(recoverDoStatement($lazy_parseDoStatement(670))))(function(statements) {
          return pure(applicativeParser)(new ExprDo({
            keyword,
            statements
          }));
        });
      });
    });
    $lazy_parseDoStatement = /* @__PURE__ */ $runtime_lazy7("parseDoStatement", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(apply(applyParser)(map(functorParser)(DoLet.create)(tokKeyword("let")))(layoutNonEmpty(recoverLetBinding($lazy_parseLetBinding(752)))))(alt(altParser)(apply(applyParser)(map(functorParser)(uncurry(DoBind.create))($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseBinder))(tokLeftArrow))))($lazy_parseExpr(753)))(map(functorParser)(DoDiscard.create)($lazy_parseExpr(754))));
      });
    });
    $lazy_parseExpr = /* @__PURE__ */ $runtime_lazy7("parseExpr", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr1(554))(function(expr) {
          return alt(altParser)(apply(applyParser)(map(functorParser)(ExprTyped.create(expr))(tokDoubleColon))(parseType))(pure(applicativeParser)(expr));
        });
      });
    });
    $lazy_parseExpr1 = /* @__PURE__ */ $runtime_lazy7("parseExpr1", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr2(560))(function(expr) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)(parseQualifiedOperator))($lazy_parseExpr2(561))))(function(ops) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(ops);
              if (v1 instanceof Nothing) {
                return expr;
              }
              ;
              if (v1 instanceof Just) {
                return new ExprOp(expr, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 562, column 8 - line 564, column 30): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseExpr2 = /* @__PURE__ */ $runtime_lazy7("parseExpr2", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr3(568))(function(expr) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)($lazy_parseTickExpr(569)))($lazy_parseExpr3(569))))(function(ops) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(ops);
              if (v1 instanceof Nothing) {
                return expr;
              }
              ;
              if (v1 instanceof Just) {
                return new ExprInfix(expr, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 570, column 8 - line 572, column 33): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseExpr3 = /* @__PURE__ */ $runtime_lazy7("parseExpr3", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(apply(applyParser)(map(functorParser)(ExprNegate.create)(tokKeyOperator("-")))($lazy_parseExpr3(591)))($lazy_parseExpr4(592));
      });
    });
    $lazy_parseExpr4 = /* @__PURE__ */ $runtime_lazy7("parseExpr4", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr5(596))(function(expr) {
          return bind(bindParser)(many2($lazy_parseExpr5(597)))(function(args) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(args);
              if (v1 instanceof Nothing) {
                return expr;
              }
              ;
              if (v1 instanceof Just) {
                return new ExprApp(expr, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 598, column 8 - line 600, column 31): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseExpr5 = /* @__PURE__ */ $runtime_lazy7("parseExpr5", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)($lazy_parseIf(604))(alt(altParser)($lazy_parseLetIn(605))(alt(altParser)($lazy_parseLambda(606))(alt(altParser)($lazy_parseCase(607))(alt(altParser)($lazy_parseDo(608))(alt(altParser)($lazy_parseAdo(609))($lazy_parseExpr6(610)))))));
      });
    });
    $lazy_parseExpr6 = /* @__PURE__ */ $runtime_lazy7("parseExpr6", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr7(683))(function(expr) {
          return alt(altParser)(parseRecordUpdates(expr))(pure(applicativeParser)(expr));
        });
      });
    });
    $lazy_parseExpr7 = /* @__PURE__ */ $runtime_lazy7("parseExpr7", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExprAtom(713))(function(expr) {
          return alt(altParser)(parseRecordAccessor(expr))(pure(applicativeParser)(expr));
        });
      });
    });
    $lazy_parseExprAtom = /* @__PURE__ */ $runtime_lazy7("parseExprAtom", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)(map(functorParser)(ExprIdent.create)(parseQualifiedIdent))(alt(altParser)(map(functorParser)(ExprConstructor.create)(parseQualifiedProper))(alt(altParser)(map(functorParser)(ExprOpName.create)(parseQualifiedSymbol))(alt(altParser)(map(functorParser)(ExprSection.create)(tokUnderscore))(alt(altParser)(map(functorParser)(ExprHole.create)(parseHole))(alt(altParser)(map(functorParser)(uncurry(ExprString.create))(parseString))(alt(altParser)(map(functorParser)(uncurry(ExprChar.create))(parseChar))(alt(altParser)(map(functorParser)(uncurry(ExprBoolean.create))(parseBoolean))(alt(altParser)(map(functorParser)(uncurry(ExprInt.create))($$parseInt))(alt(altParser)(map(functorParser)(uncurry(ExprNumber.create))(parseNumber))(alt(altParser)(map(functorParser)(ExprArray.create)(delimited(tokLeftSquare)(tokRightSquare)(tokComma)($lazy_parseExpr(735))))(alt(altParser)(map(functorParser)(ExprRecord.create)(delimited(tokLeftBrace)(tokRightBrace)(tokComma)(parseRecordLabeled($lazy_parseExpr(736)))))(map(functorParser)(ExprParens.create)(parens($lazy_parseExpr(737)))))))))))))));
      });
    });
    $lazy_parseIdentBinding = /* @__PURE__ */ $runtime_lazy7("parseIdentBinding", "PureScript.CST.Parser", function() {
      return bind(bindParser)(parseIdent)(function(ident) {
        return alt(altParser)(parseLetBindingSignature(ident))(parseLetBindingName(ident));
      });
    });
    $lazy_parseIf = /* @__PURE__ */ $runtime_lazy7("parseIf", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokKeyword("if"))(function(keyword) {
        return bind(bindParser)($lazy_parseExpr(615))(function(cond) {
          return bind(bindParser)(tokKeyword("then"))(function(then_) {
            return bind(bindParser)($lazy_parseExpr(617))(function(true_) {
              return bind(bindParser)(tokKeyword("else"))(function(else_) {
                return bind(bindParser)($lazy_parseExpr(619))(function(false_) {
                  return pure(applicativeParser)(new ExprIf({
                    keyword,
                    cond,
                    then: then_,
                    "true": true_,
                    "else": else_,
                    "false": false_
                  }));
                });
              });
            });
          });
        });
      });
    });
    $lazy_parseLambda = /* @__PURE__ */ $runtime_lazy7("parseLambda", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokBackslash)(function(symbol) {
        return bind(bindParser)(many1(parseBinderAtom))(function(binders) {
          return bind(bindParser)(tokRightArrow)(function(arrow) {
            return bind(bindParser)($lazy_parseExpr(635))(function(body) {
              return pure(applicativeParser)(new ExprLambda({
                symbol,
                binders,
                arrow,
                body
              }));
            });
          });
        });
      });
    });
    $lazy_parseLetBinding = /* @__PURE__ */ $runtime_lazy7("parseLetBinding", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return alt(altParser)($$try4($lazy_parseIdentBinding(758)))(apply(applyParser)(apply(applyParser)(map(functorParser)(LetBindingPattern.create)(parseBinder1))(tokEquals))($lazy_parseWhere(759)));
      });
    });
    $lazy_parseLetIn = /* @__PURE__ */ $runtime_lazy7("parseLetIn", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokKeyword("let"))(function(keyword) {
        return bind(bindParser)(layoutNonEmpty(recoverLetBinding($lazy_parseLetBinding(625))))(function(bindings) {
          return bind(bindParser)(tokKeyword("in"))(function(in_) {
            return bind(bindParser)($lazy_parseExpr(627))(function(body) {
              return pure(applicativeParser)(new ExprLet({
                keyword,
                bindings,
                "in": in_,
                body
              }));
            });
          });
        });
      });
    });
    $lazy_parseRecordUpdate = /* @__PURE__ */ $runtime_lazy7("parseRecordUpdate", "PureScript.CST.Parser", function() {
      return bind(bindParser)(parseLabel)(function(label) {
        return alt(altParser)(parseRecordUpdateLeaf(label))(parseRecordUpdateBranch(label));
      });
    });
    $lazy_parseTickExpr = /* @__PURE__ */ $runtime_lazy7("parseTickExpr", "PureScript.CST.Parser", function() {
      return bind(bindParser)(tokTick)(function(open2) {
        return bind(bindParser)($lazy_parseTickExpr1(577))(function(value) {
          return bind(bindParser)(tokTick)(function(close2) {
            return pure(applicativeParser)({
              open: open2,
              value,
              close: close2
            });
          });
        });
      });
    });
    $lazy_parseTickExpr1 = /* @__PURE__ */ $runtime_lazy7("parseTickExpr1", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr3(583))(function(expr) {
          return bind(bindParser)(many2(apply(applyParser)(map(functorParser)(Tuple.create)(parseQualifiedOperator))($lazy_parseExpr3(584))))(function(ops) {
            return pure(applicativeParser)(function() {
              var v1 = fromArray4(ops);
              if (v1 instanceof Nothing) {
                return expr;
              }
              ;
              if (v1 instanceof Just) {
                return new ExprOp(expr, v1.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Parser (line 585, column 8 - line 587, column 30): " + [v1.constructor.name]);
            }());
          });
        });
      });
    });
    $lazy_parseWhere = /* @__PURE__ */ $runtime_lazy7("parseWhere", "PureScript.CST.Parser", function() {
      return defer(lazyParser)(function(v) {
        return bind(bindParser)($lazy_parseExpr(800))(function(expr) {
          return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokKeyword("where")))(layoutNonEmpty(recoverLetBinding($lazy_parseLetBinding(801))))))(function(bindings) {
            return pure(applicativeParser)({
              expr,
              bindings
            });
          });
        });
      });
    });
    parseDeclValue1 = function(name2) {
      return bind(bindParser)(many2(parseBinderAtom))(function(binders) {
        return bind(bindParser)(parseGuarded(tokEquals))(function(guarded) {
          return pure(applicativeParser)(new DeclValue2({
            name: name2,
            binders,
            guarded
          }));
        });
      });
    };
    parseDeclValue = /* @__PURE__ */ bind(bindParser)(parseIdent)(function(ident) {
      return alt(altParser)(parseDeclSignature(ident))(parseDeclValue1(ident));
    });
    parseInstanceBindingName = function(name2) {
      return bind(bindParser)(many2(parseBinderAtom))(function(binders) {
        return bind(bindParser)(parseGuarded(tokEquals))(function(guarded) {
          return pure(applicativeParser)(new InstanceBindingName({
            name: name2,
            binders,
            guarded
          }));
        });
      });
    };
    parseInstanceBinding = /* @__PURE__ */ bind(bindParser)(parseIdent)(function(ident) {
      return alt(altParser)(parseInstanceBindingSignature(ident))(parseInstanceBindingName(ident));
    });
    parseInstance = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("instance"))(function(keyword) {
      return bind(bindParser)(optional2(parseInstanceName))(function(name2) {
        return bind(bindParser)(optional2($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseClassConstraints(parseType3)))(tokRightFatArrow))))(function(constraints) {
          return bind(bindParser)(parseQualifiedProper)(function(className) {
            return bind(bindParser)(many2(parseTypeAtom))(function(types) {
              return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokKeyword("where")))(layoutNonEmpty(parseInstanceBinding))))(function(body) {
                return pure(applicativeParser)({
                  head: {
                    keyword,
                    name: name2,
                    constraints,
                    className,
                    types
                  },
                  body
                });
              });
            });
          });
        });
      });
    });
    parseDeclInstanceChain = /* @__PURE__ */ function() {
      return map(functorParser)(DeclInstanceChain.create)(separated(parseInstanceChainSeparator)(parseInstance));
    }();
    parseDeclClass1 = function(keyword) {
      return bind(bindParser)(optional2($$try4(apply(applyParser)(map(functorParser)(Tuple.create)(parseClassConstraints(parseType5)))(tokLeftFatArrow))))(function($$super) {
        return bind(bindParser)(parseProper)(function(name2) {
          return bind(bindParser)(many2(parseTypeVarBinding))(function(vars) {
            return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokPipe))(separated(tokComma)(parseFundep))))(function(fundeps) {
              return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokKeyword("where")))(layoutNonEmpty(parseClassMember))))(function(members) {
                return pure(applicativeParser)(new DeclClass({
                  keyword,
                  "super": $$super,
                  name: name2,
                  vars,
                  fundeps
                }, members));
              });
            });
          });
        });
      });
    };
    parseDeclClass = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("class"))(function(keyword) {
      return alt(altParser)(parseDeclClassSignature(keyword))(parseDeclClass1(keyword));
    });
    parseDeclData1 = function(keyword) {
      return function(name2) {
        return bind(bindParser)(many2(parseTypeVarBinding))(function(vars) {
          return bind(bindParser)(optional2(apply(applyParser)(map(functorParser)(Tuple.create)(tokEquals))(separated(tokPipe)(parseDataCtor))))(function(ctors) {
            return pure(applicativeParser)(new DeclData({
              keyword,
              name: name2,
              vars
            }, ctors));
          });
        });
      };
    };
    parseDeclData = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("data"))(function(keyword) {
      return bind(bindParser)(parseProper)(function(name2) {
        return alt(altParser)(parseDeclKindSignature(keyword)(name2))(parseDeclData1(keyword)(name2));
      });
    });
    parseDeclNewtype1 = function(keyword) {
      return function(name2) {
        return bind(bindParser)(many2(parseTypeVarBinding))(function(vars) {
          return bind(bindParser)(tokEquals)(function(tok) {
            return bind(bindParser)(parseProper)(function(wrapper) {
              return bind(bindParser)(parseTypeAtom)(function(body) {
                return pure(applicativeParser)(new DeclNewtype({
                  keyword,
                  name: name2,
                  vars
                }, tok, wrapper, body));
              });
            });
          });
        });
      };
    };
    parseDeclNewtype = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("newtype"))(function(keyword) {
      return bind(bindParser)(parseProper)(function(name2) {
        return alt(altParser)(parseDeclKindSignature(keyword)(name2))(parseDeclNewtype1(keyword)(name2));
      });
    });
    parseDeclType2 = function(keyword) {
      return function(name2) {
        return bind(bindParser)(many2(parseTypeVarBinding))(function(vars) {
          return bind(bindParser)(tokEquals)(function(tok) {
            return bind(bindParser)(parseType)(function(body) {
              return pure(applicativeParser)(new DeclType2({
                keyword,
                name: name2,
                vars
              }, tok, body));
            });
          });
        });
      };
    };
    parseDeclType1 = function(keyword) {
      return bind(bindParser)(parseProper)(function(name2) {
        return alt(altParser)(parseDeclKindSignature(keyword)(name2))(parseDeclType2(keyword)(name2));
      });
    };
    parseDeclType = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ tokKeyword("type"))(function(keyword) {
      return alt(altParser)(parseDeclRole(keyword))(parseDeclType1(keyword));
    });
    parseDecl = /* @__PURE__ */ alt(altParser)(parseDeclData)(/* @__PURE__ */ alt(altParser)(parseDeclNewtype)(/* @__PURE__ */ alt(altParser)(parseDeclType)(/* @__PURE__ */ alt(altParser)(parseDeclClass)(/* @__PURE__ */ alt(altParser)(parseDeclInstanceChain)(/* @__PURE__ */ alt(altParser)(parseDeclDerive)(/* @__PURE__ */ alt(altParser)(parseDeclValue)(/* @__PURE__ */ alt(altParser)(parseDeclForeign)(parseDeclFixity))))))));
    parseModuleDecls = /* @__PURE__ */ many2(/* @__PURE__ */ applyFirst(applyParser)(/* @__PURE__ */ recoverDecl(parseDecl))(/* @__PURE__ */ alt(altParser)(tokLayoutSep)(/* @__PURE__ */ lookAhead(tokLayoutEnd))));
    parseModuleBody = /* @__PURE__ */ bind(bindParser)(/* @__PURE__ */ applyFirst(applyParser)(parseModuleDecls)(tokLayoutEnd))(function(decls) {
      return bind(bindParser)(eof)(function(v) {
        return pure(applicativeParser)({
          decls,
          trailingComments: v.value1,
          end: v.value0
        });
      });
    });
    parseModule = /* @__PURE__ */ bind(bindParser)(parseModuleHeader)(function(header) {
      return bind(bindParser)(parseModuleBody)(function(body) {
        return pure(applicativeParser)({
          header,
          body
        });
      });
    });
  }
});

// output/PureScript.CST.Range.TokenList/index.js
var TokenEmpty, TokenCons2, TokenWrap, TokenAppend, TokenDefer, TokenArray, UnconsDone, UnconsMore, wrap2, singleton11, semigroupTokenList, uncons22, uncons$prime, uncons5, toArray6, monoidTokenList, lazyTokenList, fromArray5, cons4;
var init_PureScript_CST_Range = __esm({
  "output/PureScript.CST.Range.TokenList/index.js"() {
    init_Data39();
    init_Data_Array();
    init_Data();
    init_Data15();
    init_Data7();
    init_Data22();
    init_Data32();
    init_Data3();
    TokenEmpty = /* @__PURE__ */ function() {
      function TokenEmpty2() {
      }
      ;
      TokenEmpty2.value = new TokenEmpty2();
      return TokenEmpty2;
    }();
    TokenCons2 = /* @__PURE__ */ function() {
      function TokenCons3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokenCons3.create = function(value0) {
        return function(value1) {
          return new TokenCons3(value0, value1);
        };
      };
      return TokenCons3;
    }();
    TokenWrap = /* @__PURE__ */ function() {
      function TokenWrap2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TokenWrap2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TokenWrap2(value0, value1, value2);
          };
        };
      };
      return TokenWrap2;
    }();
    TokenAppend = /* @__PURE__ */ function() {
      function TokenAppend2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      TokenAppend2.create = function(value0) {
        return function(value1) {
          return new TokenAppend2(value0, value1);
        };
      };
      return TokenAppend2;
    }();
    TokenDefer = /* @__PURE__ */ function() {
      function TokenDefer2(value0) {
        this.value0 = value0;
      }
      ;
      TokenDefer2.create = function(value0) {
        return new TokenDefer2(value0);
      };
      return TokenDefer2;
    }();
    TokenArray = /* @__PURE__ */ function() {
      function TokenArray2(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
      }
      ;
      TokenArray2.create = function(value0) {
        return function(value1) {
          return function(value2) {
            return new TokenArray2(value0, value1, value2);
          };
        };
      };
      return TokenArray2;
    }();
    UnconsDone = /* @__PURE__ */ function() {
      function UnconsDone2() {
      }
      ;
      UnconsDone2.value = new UnconsDone2();
      return UnconsDone2;
    }();
    UnconsMore = /* @__PURE__ */ function() {
      function UnconsMore2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      UnconsMore2.create = function(value0) {
        return function(value1) {
          return new UnconsMore2(value0, value1);
        };
      };
      return UnconsMore2;
    }();
    wrap2 = /* @__PURE__ */ function() {
      return TokenWrap.create;
    }();
    singleton11 = function(a) {
      return new TokenCons2(a, TokenEmpty.value);
    };
    semigroupTokenList = {
      append: function(v) {
        return function(v1) {
          if (v1 instanceof TokenEmpty) {
            return v;
          }
          ;
          if (v instanceof TokenEmpty) {
            return v1;
          }
          ;
          return new TokenAppend(v, v1);
        };
      }
    };
    uncons22 = function($copy_done) {
      return function($copy_more) {
        return function($copy_l) {
          return function($copy_r) {
            var $tco_var_done = $copy_done;
            var $tco_var_more = $copy_more;
            var $tco_var_l = $copy_l;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(done, more, l, r) {
              if (l instanceof TokenEmpty) {
                $tco_done = true;
                return uncons$prime(done)(more)(r);
              }
              ;
              if (l instanceof TokenCons2) {
                $tco_done = true;
                return more(l.value0)(append(semigroupTokenList)(l.value1)(r));
              }
              ;
              if (l instanceof TokenWrap) {
                $tco_done = true;
                return more(l.value0)(append(semigroupTokenList)(l.value1)(new TokenCons2(l.value2, r)));
              }
              ;
              if (l instanceof TokenAppend) {
                $tco_var_done = done;
                $tco_var_more = more;
                $tco_var_l = l.value0;
                $copy_r = append(semigroupTokenList)(l.value1)(r);
                return;
              }
              ;
              if (l instanceof TokenDefer) {
                $tco_var_done = done;
                $tco_var_more = more;
                $tco_var_l = l.value0(unit);
                $copy_r = r;
                return;
              }
              ;
              if (l instanceof TokenArray) {
                var next2 = function() {
                  if (l.value0 === l.value1) {
                    return r;
                  }
                  ;
                  if (otherwise) {
                    return append(semigroupTokenList)(new TokenArray(l.value0 + 1 | 0, l.value1, l.value2))(r);
                  }
                  ;
                  throw new Error("Failed pattern match at PureScript.CST.Range.TokenList (line 102, column 7 - line 104, column 56): " + []);
                }();
                $tco_done = true;
                return more(l["value2"][l.value0])(next2);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range.TokenList (line 94, column 25 - line 105, column 52): " + [l.constructor.name]);
            }
            ;
            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_done, $tco_var_more, $tco_var_l, $copy_r);
            }
            ;
            return $tco_result;
          };
        };
      };
    };
    uncons$prime = function($copy_done) {
      return function($copy_more) {
        return function($copy_v) {
          var $tco_var_done = $copy_done;
          var $tco_var_more = $copy_more;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(done, more, v) {
            if (v instanceof TokenEmpty) {
              $tco_done = true;
              return done;
            }
            ;
            if (v instanceof TokenCons2) {
              $tco_done = true;
              return more(v.value0)(v.value1);
            }
            ;
            if (v instanceof TokenWrap) {
              $tco_done = true;
              return more(v.value0)(append(semigroupTokenList)(v.value1)(singleton11(v.value2)));
            }
            ;
            if (v instanceof TokenAppend) {
              $tco_done = true;
              return uncons22(done)(more)(v.value0)(v.value1);
            }
            ;
            if (v instanceof TokenDefer) {
              $tco_var_done = done;
              $tco_var_more = more;
              $copy_v = v.value0(unit);
              return;
            }
            ;
            if (v instanceof TokenArray) {
              var next2 = function() {
                if (v.value0 === v.value1) {
                  return TokenEmpty.value;
                }
                ;
                if (otherwise) {
                  return new TokenArray(v.value0 + 1 | 0, v.value1, v.value2);
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Range.TokenList (line 88, column 7 - line 90, column 51): " + []);
              }();
              $tco_done = true;
              return more(v["value2"][v.value0])(next2);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range.TokenList (line 80, column 21 - line 91, column 52): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_done, $tco_var_more, $copy_v);
          }
          ;
          return $tco_result;
        };
      };
    };
    uncons5 = /* @__PURE__ */ function() {
      return uncons$prime(UnconsDone.value)(UnconsMore.create);
    }();
    toArray6 = function(init3) {
      return function __do2() {
        var arr = newSTArray();
        var cur = init3;
        var $$continue = true;
        (function() {
          while ($$continue) {
            (function __do3() {
              var tree = cur;
              var v = uncons5(tree);
              if (v instanceof UnconsDone) {
                $$continue = false;
                return unit;
              }
              ;
              if (v instanceof UnconsMore) {
                cur = v.value1;
                push(v.value0)(arr)();
                return unit;
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range.TokenList (line 117, column 5 - line 124, column 18): " + [v.constructor.name]);
            })();
          }
          ;
          return {};
        })();
        return unsafeFreeze(arr)();
      }();
    };
    monoidTokenList = /* @__PURE__ */ function() {
      return {
        mempty: TokenEmpty.value,
        Semigroup0: function() {
          return semigroupTokenList;
        }
      };
    }();
    lazyTokenList = /* @__PURE__ */ function() {
      return {
        defer: TokenDefer.create
      };
    }();
    fromArray5 = function(arr) {
      var len = length4(arr);
      var $47 = len === 0;
      if ($47) {
        return TokenEmpty.value;
      }
      ;
      return new TokenArray(0, len - 1 | 0, arr);
    };
    cons4 = /* @__PURE__ */ function() {
      return TokenCons2.create;
    }();
  }
});

// output/PureScript.CST.Range/index.js
var tokensOfVoid, tokensOfRecoveredError, tokensOfName, tokensOf, tokensOfMaybe, tokensOfSeparated, tokensOfWrapped, tokensOfDataMembers, tokensOfImport, tokensOfImportDecl, rangeOfWrapped, rangeOfVoid, rangeOfRecoveredError, rangeOfQualifiedName, rangeOfName, rangeOfModule, rangeOf, rangeOfClassFundep, rangeOfFixityOp, rangeOfImportDecl, rangeOfLabeled, rangeOfSeparated, rangeOfType, rangeOfBinder, rangeOfDataCtor, rangeOfForeign, rangeOfTypeVarBinding, rangeOfWhere, rangeOfLetBinding, rangeOfGuardedExpr, rangeOfGuarded, rangeOfExpr, rangeOfDoStatement, rangeOfInstanceBinding, rangeOfInstance, rangeOfDecl;
var init_PureScript_CST8 = __esm({
  "output/PureScript.CST.Range/index.js"() {
    init_Control8();
    init_Data39();
    init_Data_Array2();
    init_Data_Array_NonEmpty();
    init_Data25();
    init_Data15();
    init_Data7();
    init_Data22();
    init_Data6();
    init_PureScript_CST_Range();
    init_PureScript_CST();
    tokensOfVoid = {
      tokensOf: absurd
    };
    tokensOfRecoveredError = {
      tokensOf: function(v) {
        return fromArray5(v.tokens);
      }
    };
    tokensOfName = {
      tokensOf: function(v) {
        return singleton11(v.token);
      }
    };
    tokensOf = function(dict) {
      return dict.tokensOf;
    };
    tokensOfMaybe = function(dictTokensOf) {
      return {
        tokensOf: foldMap(foldableMaybe)(monoidTokenList)(tokensOf(dictTokensOf))
      };
    };
    tokensOfSeparated = function(dictTokensOf) {
      return {
        tokensOf: function(v) {
          return append(semigroupTokenList)(tokensOf(dictTokensOf)(v.head))(defer(lazyTokenList)(function(v1) {
            return foldMap(foldableArray)(monoidTokenList)(function(v2) {
              return cons4(v2.value0)(defer(lazyTokenList)(function(v32) {
                return tokensOf(dictTokensOf)(v2.value1);
              }));
            })(v.tail);
          }));
        }
      };
    };
    tokensOfWrapped = function(dictTokensOf) {
      return {
        tokensOf: function(v) {
          return wrap2(v.open)(defer(lazyTokenList)(function(v1) {
            return tokensOf(dictTokensOf)(v.value);
          }))(v.close);
        }
      };
    };
    tokensOfDataMembers = {
      tokensOf: function(v) {
        if (v instanceof DataAll) {
          return singleton11(v.value0);
        }
        ;
        if (v instanceof DataEnumerated) {
          return tokensOf(tokensOfWrapped(tokensOfMaybe(tokensOfSeparated(tokensOfName))))(v.value0);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Range (line 311, column 14 - line 315, column 17): " + [v.constructor.name]);
      }
    };
    tokensOfImport = function(dictTokensOf) {
      return {
        tokensOf: function(v) {
          if (v instanceof ImportValue) {
            return tokensOf(tokensOfName)(v.value0);
          }
          ;
          if (v instanceof ImportOp) {
            return tokensOf(tokensOfName)(v.value0);
          }
          ;
          if (v instanceof ImportType) {
            return append(semigroupTokenList)(tokensOf(tokensOfName)(v.value0))(foldMap(foldableMaybe)(monoidTokenList)(tokensOf(tokensOfDataMembers))(v.value1));
          }
          ;
          if (v instanceof ImportTypeOp) {
            return cons4(v.value0)(tokensOf(tokensOfName)(v.value1));
          }
          ;
          if (v instanceof ImportClass) {
            return cons4(v.value0)(tokensOf(tokensOfName)(v.value1));
          }
          ;
          if (v instanceof ImportError) {
            return tokensOf(dictTokensOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 366, column 14 - line 378, column 17): " + [v.constructor.name]);
        }
      };
    };
    tokensOfImportDecl = function(dictTokensOf) {
      return {
        tokensOf: function(v) {
          return cons4(v.keyword)(defer(lazyTokenList)(function(v1) {
            return append(semigroupTokenList)(tokensOf(tokensOfName)(v.module))(append(semigroupTokenList)(foldMap(foldableMaybe)(monoidTokenList)(function(v2) {
              return append(semigroupTokenList)(foldMap(foldableMaybe)(monoidTokenList)(singleton11)(v2.value0))(defer(lazyTokenList)(function(v32) {
                return tokensOf(tokensOfWrapped(tokensOfSeparated(tokensOfImport(dictTokensOf))))(v2.value1);
              }));
            })(v.names))(foldMap(foldableMaybe)(monoidTokenList)(function(v2) {
              return append(semigroupTokenList)(singleton11(v2.value0))(tokensOf(tokensOfName)(v2.value1));
            })(v.qualified)));
          }));
        }
      };
    };
    rangeOfWrapped = {
      rangeOf: function(v) {
        return {
          start: v.open.range.start,
          end: v.close.range.end
        };
      }
    };
    rangeOfVoid = {
      rangeOf: absurd
    };
    rangeOfRecoveredError = {
      rangeOf: function(v) {
        var v1 = fromArray4(v.tokens);
        if (v1 instanceof Just) {
          return {
            start: head3(v1.value0).range.start,
            end: last3(v1.value0).range.end
          };
        }
        ;
        if (v1 instanceof Nothing) {
          return {
            start: v.position,
            end: v.position
          };
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Range (line 49, column 5 - line 57, column 10): " + [v1.constructor.name]);
      }
    };
    rangeOfQualifiedName = {
      rangeOf: function(v) {
        return v.token.range;
      }
    };
    rangeOfName = {
      rangeOf: function(v) {
        return v.token.range;
      }
    };
    rangeOfModule = {
      rangeOf: function(v) {
        return {
          start: v.header.keyword.range.start,
          end: v.body.end
        };
      }
    };
    rangeOf = function(dict) {
      return dict.rangeOf;
    };
    rangeOfClassFundep = {
      rangeOf: function(v) {
        if (v instanceof FundepDetermined) {
          return {
            start: v.value0.range.start,
            end: rangeOf(rangeOfName)(last3(v.value1)).end
          };
        }
        ;
        if (v instanceof FundepDetermines) {
          return {
            start: rangeOf(rangeOfName)(head3(v.value0)).start,
            end: rangeOf(rangeOfName)(last3(v.value2)).end
          };
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Range (line 535, column 13 - line 543, column 8): " + [v.constructor.name]);
      }
    };
    rangeOfFixityOp = {
      rangeOf: function(v) {
        if (v instanceof FixityValue) {
          return {
            start: rangeOf(rangeOfQualifiedName)(v.value0).start,
            end: rangeOf(rangeOfName)(v.value2).end
          };
        }
        ;
        if (v instanceof FixityType) {
          return {
            start: v.value0.range.start,
            end: rangeOf(rangeOfName)(v.value3).end
          };
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Range (line 614, column 13 - line 622, column 8): " + [v.constructor.name]);
      }
    };
    rangeOfImportDecl = {
      rangeOf: function(v) {
        var v1 = function() {
          if (v.qualified instanceof Nothing) {
            if (v.names instanceof Nothing) {
              return rangeOf(rangeOfName)(v.module);
            }
            ;
            if (v.names instanceof Just) {
              return rangeOf(rangeOfWrapped)(v.names.value0.value1);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 322, column 11 - line 326, column 30): " + [v.names.constructor.name]);
          }
          ;
          if (v.qualified instanceof Just) {
            return rangeOf(rangeOfName)(v.qualified.value0.value1);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 320, column 17 - line 328, column 20): " + [v.qualified.constructor.name]);
        }();
        return {
          start: v.keyword.range.start,
          end: v1.end
        };
      }
    };
    rangeOfLabeled = function(dictRangeOf) {
      return function(dictRangeOf1) {
        return {
          rangeOf: function(v) {
            return {
              start: rangeOf(dictRangeOf)(v.label).start,
              end: rangeOf(dictRangeOf1)(v.value).end
            };
          }
        };
      };
    };
    rangeOfSeparated = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          var v1 = last2(v.tail);
          if (v1 instanceof Just) {
            return {
              start: rangeOf(dictRangeOf)(v.head).start,
              end: rangeOf(dictRangeOf)(v1.value0.value1).end
            };
          }
          ;
          if (v1 instanceof Nothing) {
            return rangeOf(dictRangeOf)(v.head);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 101, column 5 - line 107, column 21): " + [v1.constructor.name]);
        }
      };
    };
    rangeOfType = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof TypeVar) {
            return rangeOf(rangeOfName)(v.value0);
          }
          ;
          if (v instanceof TypeConstructor) {
            return rangeOf(rangeOfQualifiedName)(v.value0);
          }
          ;
          if (v instanceof TypeWildcard) {
            return v.value0.range;
          }
          ;
          if (v instanceof TypeHole) {
            return rangeOf(rangeOfName)(v.value0);
          }
          ;
          if (v instanceof TypeString) {
            return v.value0.range;
          }
          ;
          if (v instanceof TypeInt) {
            if (v.value0 instanceof Nothing) {
              return v.value1.range;
            }
            ;
            if (v.value0 instanceof Just) {
              return {
                start: v.value0.value0.range.start,
                end: v.value1.range.end
              };
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 147, column 7 - line 153, column 12): " + [v.value0.constructor.name]);
          }
          ;
          if (v instanceof TypeRow) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof TypeRecord) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof TypeForall) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value3).end
            };
          }
          ;
          if (v instanceof TypeKinded) {
            return {
              start: rangeOf(rangeOfType(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof TypeApp) {
            return {
              start: rangeOf(rangeOfType(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(last3(v.value1)).end
            };
          }
          ;
          if (v instanceof TypeOp) {
            return {
              start: rangeOf(rangeOfType(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(snd(last3(v.value1))).end
            };
          }
          ;
          if (v instanceof TypeOpName) {
            return rangeOf(rangeOfQualifiedName)(v.value0);
          }
          ;
          if (v instanceof TypeArrow) {
            return {
              start: rangeOf(rangeOfType(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof TypeArrowName) {
            return v.value0.range;
          }
          ;
          if (v instanceof TypeConstrained) {
            return {
              start: rangeOf(rangeOfType(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof TypeParens) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof $$TypeError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 135, column 13 - line 189, column 16): " + [v.constructor.name]);
        }
      };
    };
    rangeOfBinder = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof BinderWildcard) {
            return v.value0.range;
          }
          ;
          if (v instanceof BinderVar) {
            return rangeOf(rangeOfName)(v.value0);
          }
          ;
          if (v instanceof BinderNamed) {
            return {
              start: rangeOf(rangeOfName)(v.value0).start,
              end: rangeOf(rangeOfBinder(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof BinderConstructor) {
            var v1 = last2(v.value1);
            if (v1 instanceof Nothing) {
              return rangeOf(rangeOfQualifiedName)(v.value0);
            }
            ;
            if (v1 instanceof Just) {
              return {
                start: rangeOf(rangeOfQualifiedName)(v.value0).start,
                end: rangeOf(rangeOfBinder(dictRangeOf))(v1.value0).end
              };
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 898, column 7 - line 904, column 12): " + [v1.constructor.name]);
          }
          ;
          if (v instanceof BinderBoolean) {
            return v.value0.range;
          }
          ;
          if (v instanceof BinderChar) {
            return v.value0.range;
          }
          ;
          if (v instanceof BinderString) {
            return v.value0.range;
          }
          ;
          if (v instanceof BinderInt) {
            if (v.value0 instanceof Nothing) {
              return v.value1.range;
            }
            ;
            if (v.value0 instanceof Just) {
              return {
                start: v.value0.value0.range.start,
                end: v.value1.range.end
              };
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 912, column 7 - line 918, column 12): " + [v.value0.constructor.name]);
          }
          ;
          if (v instanceof BinderNumber) {
            if (v.value0 instanceof Nothing) {
              return v.value1.range;
            }
            ;
            if (v.value0 instanceof Just) {
              return {
                start: v.value0.value0.range.start,
                end: v.value1.range.end
              };
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 920, column 7 - line 926, column 12): " + [v.value0.constructor.name]);
          }
          ;
          if (v instanceof BinderArray) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof BinderRecord) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof BinderParens) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof BinderTyped) {
            return {
              start: rangeOf(rangeOfBinder(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof BinderOp) {
            return {
              start: rangeOf(rangeOfBinder(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfBinder(dictRangeOf))(snd(last3(v.value1))).end
            };
          }
          ;
          if (v instanceof BinderError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 888, column 13 - line 942, column 16): " + [v.constructor.name]);
        }
      };
    };
    rangeOfDataCtor = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          var v1 = function() {
            var v2 = last2(v.fields);
            if (v2 instanceof Nothing) {
              return rangeOf(rangeOfName)(v.name);
            }
            ;
            if (v2 instanceof Just) {
              return rangeOf(rangeOfType(dictRangeOf))(v2.value0);
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 383, column 17 - line 387, column 21): " + [v2.constructor.name]);
          }();
          return {
            start: rangeOf(rangeOfName)(v.name).start,
            end: v1.end
          };
        }
      };
    };
    rangeOfForeign = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof ForeignValue) {
            return rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value0);
          }
          ;
          if (v instanceof ForeignData) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value1).end
            };
          }
          ;
          if (v instanceof ForeignKind) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfName)(v.value1).end
            };
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 632, column 13 - line 642, column 8): " + [v.constructor.name]);
        }
      };
    };
    rangeOfTypeVarBinding = {
      rangeOf: function(v) {
        if (v instanceof TypeVarKinded) {
          return rangeOf(rangeOfWrapped)(v.value0);
        }
        ;
        if (v instanceof TypeVarName) {
          return rangeOf(rangeOfName)(v.value0);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST.Range (line 244, column 13 - line 248, column 16): " + [v.constructor.name]);
      }
    };
    rangeOfWhere = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v.bindings instanceof Nothing) {
            return rangeOf(rangeOfExpr(dictRangeOf))(v.expr);
          }
          ;
          if (v.bindings instanceof Just) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.expr).start,
              end: rangeOf(rangeOfLetBinding(dictRangeOf))(last3(v.bindings.value0.value1)).end
            };
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 985, column 40 - line 991, column 8): " + [v.bindings.constructor.name]);
        }
      };
    };
    rangeOfLetBinding = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof LetBindingSignature) {
            return rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value0);
          }
          ;
          if (v instanceof LetBindingName) {
            return {
              start: rangeOf(rangeOfName)(v.value0.name).start,
              end: rangeOf(rangeOfGuarded(dictRangeOf))(v.value0.guarded).end
            };
          }
          ;
          if (v instanceof LetBindingPattern) {
            return {
              start: rangeOf(rangeOfBinder(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfWhere(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof LetBindingError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 862, column 13 - line 874, column 16): " + [v.constructor.name]);
        }
      };
    };
    rangeOfGuardedExpr = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          return {
            start: v.bar.range.start,
            end: rangeOf(rangeOfWhere(dictRangeOf))(v.where).end
          };
        }
      };
    };
    rangeOfGuarded = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof Unconditional) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfWhere(dictRangeOf))(v.value1).end
            };
          }
          ;
          if (v instanceof Guarded) {
            return {
              start: rangeOf(rangeOfGuardedExpr(dictRangeOf))(head3(v.value0)).start,
              end: rangeOf(rangeOfGuardedExpr(dictRangeOf))(last3(v.value0)).end
            };
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 578, column 13 - line 586, column 8): " + [v.constructor.name]);
        }
      };
    };
    rangeOfExpr = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof ExprHole) {
            return rangeOf(rangeOfName)(v.value0);
          }
          ;
          if (v instanceof ExprSection) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprIdent) {
            return rangeOf(rangeOfQualifiedName)(v.value0);
          }
          ;
          if (v instanceof ExprConstructor) {
            return rangeOf(rangeOfQualifiedName)(v.value0);
          }
          ;
          if (v instanceof ExprBoolean) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprChar) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprString) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprInt) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprNumber) {
            return v.value0.range;
          }
          ;
          if (v instanceof ExprArray) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof ExprRecord) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof ExprParens) {
            return rangeOf(rangeOfWrapped)(v.value0);
          }
          ;
          if (v instanceof ExprTyped) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof ExprInfix) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(snd(last3(v.value1))).end
            };
          }
          ;
          if (v instanceof ExprOp) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(snd(last3(v.value1))).end
            };
          }
          ;
          if (v instanceof ExprOpName) {
            return rangeOf(rangeOfQualifiedName)(v.value0);
          }
          ;
          if (v instanceof ExprNegate) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v.value1).end
            };
          }
          ;
          if (v instanceof ExprRecordAccessor) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0.expr).start,
              end: rangeOf(rangeOfSeparated(rangeOfName))(v.value0.path).end
            };
          }
          ;
          if (v instanceof ExprRecordUpdate) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfWrapped)(v.value1).end
            };
          }
          ;
          if (v instanceof ExprApp) {
            return {
              start: rangeOf(rangeOfExpr(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(last3(v.value1)).end
            };
          }
          ;
          if (v instanceof ExprLambda) {
            return {
              start: v.value0.symbol.range.start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v.value0.body).end
            };
          }
          ;
          if (v instanceof ExprIf) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v["value0"]["false"]).end
            };
          }
          ;
          if (v instanceof ExprCase) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfGuarded(dictRangeOf))(snd(last3(v.value0.branches))).end
            };
          }
          ;
          if (v instanceof ExprLet) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v.value0.body).end
            };
          }
          ;
          if (v instanceof ExprDo) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfDoStatement(dictRangeOf))(last3(v.value0.statements)).end
            };
          }
          ;
          if (v instanceof ExprAdo) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v.value0.result).end
            };
          }
          ;
          if (v instanceof ExprError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 672, column 13 - line 752, column 16): " + [v.constructor.name]);
        }
      };
    };
    rangeOfDoStatement = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof DoLet) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfLetBinding(dictRangeOf))(last3(v.value1)).end
            };
          }
          ;
          if (v instanceof DoDiscard) {
            return rangeOf(rangeOfExpr(dictRangeOf))(v.value0);
          }
          ;
          if (v instanceof DoBind) {
            return {
              start: rangeOf(rangeOfBinder(dictRangeOf))(v.value0).start,
              end: rangeOf(rangeOfExpr(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof DoError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 836, column 13 - line 848, column 16): " + [v.constructor.name]);
        }
      };
    };
    rangeOfInstanceBinding = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof InstanceBindingSignature) {
            return rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value0);
          }
          ;
          if (v instanceof InstanceBindingName) {
            return {
              start: rangeOf(rangeOfName)(v.value0.name).start,
              end: rangeOf(rangeOfGuarded(dictRangeOf))(v.value0.guarded).end
            };
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 654, column 13 - line 660, column 8): " + [v.constructor.name]);
        }
      };
    };
    rangeOfInstance = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          var v1 = function() {
            if (v.body instanceof Nothing) {
              var v2 = last2(v.head.types);
              if (v2 instanceof Nothing) {
                return rangeOf(rangeOfQualifiedName)(v.head.className);
              }
              ;
              if (v2 instanceof Just) {
                return rangeOf(rangeOfType(dictRangeOf))(v2.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range (line 557, column 11 - line 561, column 25): " + [v2.constructor.name]);
            }
            ;
            if (v.body instanceof Just) {
              return rangeOf(rangeOfInstanceBinding(dictRangeOf))(last3(v.body.value0.value1));
            }
            ;
            throw new Error("Failed pattern match at PureScript.CST.Range (line 555, column 17 - line 563, column 42): " + [v.body.constructor.name]);
          }();
          return {
            start: v.head.keyword.range.start,
            end: v1.end
          };
        }
      };
    };
    rangeOfDecl = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          if (v instanceof DeclData) {
            var v1 = function() {
              if (v.value1 instanceof Nothing) {
                var v2 = last2(v.value0.vars);
                if (v2 instanceof Nothing) {
                  return rangeOf(rangeOfName)(v.value0.name);
                }
                ;
                if (v2 instanceof Just) {
                  return rangeOf(rangeOfTypeVarBinding)(v2.value0);
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Range (line 402, column 13 - line 406, column 28): " + [v2.constructor.name]);
              }
              ;
              if (v.value1 instanceof Just) {
                return rangeOf(rangeOfDataCtor(dictRangeOf))(maybe(v.value1.value0.value1.head)(snd)(last2(v.value1.value0.value1.tail)));
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range (line 400, column 19 - line 408, column 55): " + [v.value1.constructor.name]);
            }();
            return {
              start: v.value0.keyword.range.start,
              end: v1.end
            };
          }
          ;
          if (v instanceof DeclType2) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof DeclNewtype) {
            return {
              start: v.value0.keyword.range.start,
              end: rangeOf(rangeOfType(dictRangeOf))(v.value3).end
            };
          }
          ;
          if (v instanceof DeclClass) {
            var v1 = function() {
              if (v.value1 instanceof Nothing) {
                if (v.value0.fundeps instanceof Nothing) {
                  var v2 = last2(v.value0.vars);
                  if (v2 instanceof Nothing) {
                    return rangeOf(rangeOfName)(v.value0.name);
                  }
                  ;
                  if (v2 instanceof Just) {
                    return rangeOf(rangeOfTypeVarBinding)(v2.value0);
                  }
                  ;
                  throw new Error("Failed pattern match at PureScript.CST.Range (line 426, column 17 - line 430, column 32): " + [v2.constructor.name]);
                }
                ;
                if (v.value0.fundeps instanceof Just) {
                  return rangeOf(rangeOfSeparated(rangeOfClassFundep))(v.value0.fundeps.value0.value1);
                }
                ;
                throw new Error("Failed pattern match at PureScript.CST.Range (line 424, column 13 - line 432, column 32): " + [v.value0.fundeps.constructor.name]);
              }
              ;
              if (v.value1 instanceof Just) {
                return rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(last3(v.value1.value0.value1));
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range (line 422, column 19 - line 434, column 44): " + [v.value1.constructor.name]);
            }();
            return {
              start: v.value0.keyword.range.start,
              end: v1.end
            };
          }
          ;
          if (v instanceof DeclInstanceChain) {
            return rangeOf(rangeOfSeparated(rangeOfInstance(dictRangeOf)))(v.value0);
          }
          ;
          if (v instanceof DeclDerive) {
            var v1 = function() {
              var v2 = last2(v.value2.types);
              if (v2 instanceof Nothing) {
                return rangeOf(rangeOfQualifiedName)(v.value2.className);
              }
              ;
              if (v2 instanceof Just) {
                return rangeOf(rangeOfType(dictRangeOf))(v2.value0);
              }
              ;
              throw new Error("Failed pattern match at PureScript.CST.Range (line 442, column 19 - line 446, column 23): " + [v2.constructor.name]);
            }();
            return {
              start: v.value0.range.start,
              end: v1.end
            };
          }
          ;
          if (v instanceof DeclKindSignature) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value1).end
            };
          }
          ;
          if (v instanceof DeclSignature) {
            return rangeOf(rangeOfLabeled(rangeOfName)(rangeOfType(dictRangeOf)))(v.value0);
          }
          ;
          if (v instanceof DeclValue2) {
            return {
              start: rangeOf(rangeOfName)(v.value0.name).start,
              end: rangeOf(rangeOfGuarded(dictRangeOf))(v.value0.guarded).end
            };
          }
          ;
          if (v instanceof DeclFixity) {
            return {
              start: v.value0.keyword.value0.range.start,
              end: rangeOf(rangeOfFixityOp)(v.value0.operator).end
            };
          }
          ;
          if (v instanceof DeclForeign) {
            return {
              start: v.value0.range.start,
              end: rangeOf(rangeOfForeign(dictRangeOf))(v.value2).end
            };
          }
          ;
          if (v instanceof DeclRole) {
            return {
              start: v.value0.range.start,
              end: fst(last3(v.value3)).range.end
            };
          }
          ;
          if (v instanceof DeclError) {
            return rangeOf(dictRangeOf)(v.value0);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Range (line 397, column 13 - line 473, column 16): " + [v.constructor.name]);
        }
      };
    };
  }
});

// output/PureScript.CST/index.js
var ParseSucceeded, ParseSucceededWithErrors, ParseFailed, toRecoveredParserResult, runRecoveredParser, parseModule2;
var init_PureScript = __esm({
  "output/PureScript.CST/index.js"() {
    init_Control4();
    init_Control5();
    init_Data_Array2();
    init_Data();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data40();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data22();
    init_PureScript_CST6();
    init_PureScript_CST7();
    init_PureScript_CST_Parser();
    init_PureScript_CST2();
    init_PureScript_CST8();
    init_PureScript_CST_Range();
    init_Unsafe();
    ParseSucceeded = /* @__PURE__ */ function() {
      function ParseSucceeded2(value0) {
        this.value0 = value0;
      }
      ;
      ParseSucceeded2.create = function(value0) {
        return new ParseSucceeded2(value0);
      };
      return ParseSucceeded2;
    }();
    ParseSucceededWithErrors = /* @__PURE__ */ function() {
      function ParseSucceededWithErrors2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      ParseSucceededWithErrors2.create = function(value0) {
        return function(value1) {
          return new ParseSucceededWithErrors2(value0, value1);
        };
      };
      return ParseSucceededWithErrors2;
    }();
    ParseFailed = /* @__PURE__ */ function() {
      function ParseFailed2(value0) {
        this.value0 = value0;
      }
      ;
      ParseFailed2.create = function(value0) {
        return new ParseFailed2(value0);
      };
      return ParseFailed2;
    }();
    toRecoveredParserResult = function(v) {
      var v1 = function(v2) {
        if (v instanceof Right && otherwise) {
          return new ParseSucceeded(v.value0.value0);
        }
        ;
        if (v instanceof Left) {
          return new ParseFailed(v.value0);
        }
        ;
        throw new Error("Failed pattern match at PureScript.CST (line 41, column 1 - line 44, column 29): " + [v.constructor.name]);
      };
      if (v instanceof Right) {
        var $12 = fromArray4(v.value0.value1);
        if ($12 instanceof Just) {
          return new ParseSucceededWithErrors(v.value0.value0, $12.value0);
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
    runRecoveredParser = function(p) {
      var $22 = flip(runParser)(p);
      return function($23) {
        return toRecoveredParserResult($22(lex($23)));
      };
    };
    parseModule2 = /* @__PURE__ */ runRecoveredParser(parseModule);
  }
});

// output/LanguageServer.IdePurescript.Build/index.js
var updateDiagnostics, unwrapModuleName, readState, positionToRange, modifyState, modifyState_, parseModuleDocument, removeDocumentFromQueues, isLibSourceFile, hasSevereErrors, handleDocumentClose, getWorkspaceRoot, getOutputDir_, getOutputDir, getForeignExt, getDestFiles, finishFastRebuildRunning, finishDiagnosticsRunning, enqueue, emptyDiagnostics, collectByFirst, clearCacheDbRevert, revertCacheDb, revertCacheDbAfterTimeout, saveCacheDb, censorWarnings, convertDiagnostics, fullBuild, fullBuildWithDiagnostics, getDiagnostics, getDiagnosticsOnType, getNoFsDiagnostics, rebuildWithDiagnostics, checkBuildTasks, requestFullBuild, addToFastRebuildQueue, handleDocumentSave, addToDiagnosticsQueue, handleDocumentChange;
var init_LanguageServer_IdePurescript8 = __esm({
  "output/LanguageServer.IdePurescript.Build/index.js"() {
    init_foreign86();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control_Monad_Error();
    init_Control12();
    init_Control13();
    init_Data39();
    init_Data46();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data37();
    init_Data47();
    init_Data50();
    init_Data_Map();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data7();
    init_Data48();
    init_Data14();
    init_Data_String2();
    init_Data_String3();
    init_Data_String7();
    init_Data_Time();
    init_Data29();
    init_Data22();
    init_Data32();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_Effect3();
    init_Effect11();
    init_IdePurescript9();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_IdePurescript5();
    init_LanguageServer_IdePurescript6();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_Protocol8();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_LanguageServer_Protocol7();
    init_Node5();
    init_Node_FS6();
    init_Node_FS4();
    init_Node();
    init_Node3();
    init_PureScript();
    updateDiagnostics = function(prevDiag) {
      return function(newDiag) {
        var prevFiltered = filter4(ordDocumentUri)(function(d) {
          return d.onType;
        })(prevDiag);
        return union2(ordDocumentUri)(prevFiltered)(newDiag);
      };
    };
    unwrapModuleName = function(r) {
      if (r instanceof ParseSucceeded) {
        return new Just(unwrap()(unwrap()(unwrap()(r.value0).header).name).name);
      }
      ;
      return Nothing.value;
    };
    readState = function(state2) {
      return function(get2) {
        return map(functorEffect)(map(functorFn)(get2)(un()(ServerState)))(read(state2));
      };
    };
    positionToRange = function(v) {
      return {
        start: {
          line: v.startLine - 1 | 0,
          character: v.startColumn - 1 | 0
        },
        end: {
          line: v.endLine - 1 | 0,
          character: v.endColumn - 1 | 0
        }
      };
    };
    modifyState = function(state2) {
      return function(mod2) {
        return modify(over()()(ServerState)(mod2))(state2);
      };
    };
    modifyState_ = function(state2) {
      return function(mod2) {
        return $$void(functorEffect)(modifyState(state2)(mod2));
      };
    };
    parseModuleDocument = function(state2) {
      return function(document) {
        return function __do2() {
          var v = getVersion(document)();
          var text = getText(document)();
          var res = parseModule2(text);
          modifyState_(state2)(function(s) {
            return {
              port: s.port,
              root: s.root,
              deactivate: s.deactivate,
              purs: s.purs,
              conn: s.conn,
              clientCapabilities: s.clientCapabilities,
              runningRebuild: s.runningRebuild,
              rebuildRunning: s.rebuildRunning,
              fastRebuildQueue: s.fastRebuildQueue,
              diagnosticsQueue: s.diagnosticsQueue,
              fullBuildWaiting: s.fullBuildWaiting,
              savedCacheDb: s.savedCacheDb,
              revertCacheDbTimeout: s.revertCacheDbTimeout,
              modules: s.modules,
              modulesFile: Nothing.value,
              diagnostics: s.diagnostics,
              parsedModules: insert(ordDocumentUri)(getUri(document))({
                version: v,
                parsed: res,
                document
              })(s.parsedModules)
            };
          })();
          return res;
        };
      };
    };
    removeDocumentFromQueues = function(state2) {
      return function(document) {
        return modifyState_(state2)(function(s) {
          return {
            port: s.port,
            root: s.root,
            deactivate: s.deactivate,
            purs: s.purs,
            conn: s.conn,
            clientCapabilities: s.clientCapabilities,
            runningRebuild: s.runningRebuild,
            rebuildRunning: s.rebuildRunning,
            fastRebuildQueue: $$delete2(ordDocumentUri)(getUri(document))(s.fastRebuildQueue),
            diagnosticsQueue: $$delete2(ordDocumentUri)(getUri(document))(s.diagnosticsQueue),
            fullBuildWaiting: s.fullBuildWaiting,
            savedCacheDb: s.savedCacheDb,
            revertCacheDbTimeout: s.revertCacheDbTimeout,
            modules: s.modules,
            modulesFile: s.modulesFile,
            diagnostics: s.diagnostics,
            parsedModules: s.parsedModules
          };
        });
      };
    };
    isLibSourceFile = function(path2) {
      return or(foldableArray)(heytingAlgebraBoolean)(mapFlipped(functorArray)([".spago", "bower_components"])(function() {
        var $200 = flip(contains)(path2);
        return function($201) {
          return $200(Pattern($201));
        };
      }()));
    };
    hasSevereErrors = function(v) {
      return not(heytingAlgebraFunction(heytingAlgebraBoolean))($$null)(v.errors);
    };
    handleDocumentClose = function(v) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(document) {
              return function(_documents) {
                var uri = getUri(document);
                return function __do2() {
                  var filename = uriToFilename(uri)();
                  notify(Info.value)("Handling document close event: " + show(showString)(filename))();
                  removeDocumentFromQueues(state2)(document)();
                  modifyState_(state2)(function(s) {
                    return {
                      port: s.port,
                      root: s.root,
                      deactivate: s.deactivate,
                      purs: s.purs,
                      conn: s.conn,
                      clientCapabilities: s.clientCapabilities,
                      runningRebuild: s.runningRebuild,
                      rebuildRunning: s.rebuildRunning,
                      fastRebuildQueue: s.fastRebuildQueue,
                      diagnosticsQueue: s.diagnosticsQueue,
                      fullBuildWaiting: s.fullBuildWaiting,
                      savedCacheDb: s.savedCacheDb,
                      revertCacheDbTimeout: s.revertCacheDbTimeout,
                      modules: s.modules,
                      modulesFile: s.modulesFile,
                      diagnostics: $$delete2(ordDocumentUri)(uri)(s.diagnostics),
                      parsedModules: $$delete2(ordDocumentUri)(uri)(s.parsedModules)
                    };
                  })();
                  return launchAff_(bind(bindAff)(liftEffect(monadEffectAff)(exists(filename)))(function(exists2) {
                    return unless(applicativeAff)(exists2)(liftEffect(monadEffectAff)(publishDiagnostics(conn)({
                      uri,
                      diagnostics: []
                    })));
                  }))();
                };
              };
            };
          };
        };
      };
    };
    getWorkspaceRoot = function(state2) {
      return function __do2() {
        var root = readState(state2)(function(v) {
          return v.root;
        })();
        return maybe(cwd)(pure(applicativeEffect))(root)();
      };
    };
    getOutputDir_ = function(cfg) {
      return function(v) {
        return function __do2() {
          var wsRoot = maybe(cwd)(pure(applicativeEffect))(v.root)();
          return resolve([wsRoot])(effectiveOutputDirectory(cfg))();
        };
      };
    };
    getOutputDir = function(config) {
      return function(state2) {
        return function __do2() {
          var c2 = read(config)();
          var root = getWorkspaceRoot(state2)();
          return resolve([root])(effectiveOutputDirectory(c2))();
        };
      };
    };
    getForeignExt = function(ext) {
      return "." + fromMaybe(ext)(stripPrefix(".")(ext));
    };
    getDestFiles = function(filename) {
      return function(v) {
        var hash = getHash(filename);
        var foreignPath = mapFlipped(functorMaybe)(stripSuffix(".purs")(filename))(flip(append(semigroupString))(v));
        return bind(bindAff)(liftEffect(monadEffectAff)(getOsTmpDir))(function(tmpDir2) {
          return bind(bindAff)(liftEffect(monadEffectAff)(function() {
            if (foreignPath instanceof Just) {
              return mapFlipped(functorEffect)(exists(foreignPath.value0))(function(exists2) {
                if (exists2) {
                  return new Just(foreignPath.value0);
                }
                ;
                return Nothing.value;
              });
            }
            ;
            return pure(applicativeEffect)(Nothing.value);
          }()))(function(foreignFile) {
            return pure(applicativeAff)({
              source: {
                org: filename,
                tmp: tmpDir2 + ("/" + (hash + ".purs"))
              },
              foreign: mapFlipped(functorMaybe)(foreignFile)(function(org) {
                return {
                  org,
                  tmp: tmpDir2 + ("/" + (hash + v))
                };
              })
            });
          });
        });
      };
    };
    finishFastRebuildRunning = function(docs) {
      return function(st) {
        if (st.rebuildRunning instanceof Just && st.rebuildRunning.value0 instanceof FastRebuild) {
          var left2 = difference(ordDocumentUri)(st.rebuildRunning.value0.value0)(docs);
          var $73 = isEmpty(left2);
          if ($73) {
            return {
              port: st.port,
              root: st.root,
              deactivate: st.deactivate,
              purs: st.purs,
              conn: st.conn,
              clientCapabilities: st.clientCapabilities,
              runningRebuild: st.runningRebuild,
              rebuildRunning: Nothing.value,
              fastRebuildQueue: st.fastRebuildQueue,
              diagnosticsQueue: st.diagnosticsQueue,
              fullBuildWaiting: st.fullBuildWaiting,
              savedCacheDb: st.savedCacheDb,
              revertCacheDbTimeout: st.revertCacheDbTimeout,
              modules: st.modules,
              modulesFile: st.modulesFile,
              diagnostics: st.diagnostics,
              parsedModules: st.parsedModules
            };
          }
          ;
          return {
            port: st.port,
            root: st.root,
            deactivate: st.deactivate,
            purs: st.purs,
            conn: st.conn,
            clientCapabilities: st.clientCapabilities,
            runningRebuild: st.runningRebuild,
            rebuildRunning: new Just(new FastRebuild(left2)),
            fastRebuildQueue: st.fastRebuildQueue,
            diagnosticsQueue: st.diagnosticsQueue,
            fullBuildWaiting: st.fullBuildWaiting,
            savedCacheDb: st.savedCacheDb,
            revertCacheDbTimeout: st.revertCacheDbTimeout,
            modules: st.modules,
            modulesFile: st.modulesFile,
            diagnostics: st.diagnostics,
            parsedModules: st.parsedModules
          };
        }
        ;
        return st;
      };
    };
    finishDiagnosticsRunning = function(docs) {
      return function(st) {
        if (st.rebuildRunning instanceof Just && st.rebuildRunning.value0 instanceof DiagnosticsRebuild) {
          var left2 = difference(ordDocumentUri)(st.rebuildRunning.value0.value0)(docs);
          var $77 = isEmpty(left2);
          if ($77) {
            return {
              port: st.port,
              root: st.root,
              deactivate: st.deactivate,
              purs: st.purs,
              conn: st.conn,
              clientCapabilities: st.clientCapabilities,
              runningRebuild: st.runningRebuild,
              rebuildRunning: Nothing.value,
              fastRebuildQueue: st.fastRebuildQueue,
              diagnosticsQueue: st.diagnosticsQueue,
              fullBuildWaiting: st.fullBuildWaiting,
              savedCacheDb: st.savedCacheDb,
              revertCacheDbTimeout: st.revertCacheDbTimeout,
              modules: st.modules,
              modulesFile: st.modulesFile,
              diagnostics: st.diagnostics,
              parsedModules: st.parsedModules
            };
          }
          ;
          return {
            port: st.port,
            root: st.root,
            deactivate: st.deactivate,
            purs: st.purs,
            conn: st.conn,
            clientCapabilities: st.clientCapabilities,
            runningRebuild: st.runningRebuild,
            rebuildRunning: new Just(new DiagnosticsRebuild(left2)),
            fastRebuildQueue: st.fastRebuildQueue,
            diagnosticsQueue: st.diagnosticsQueue,
            fullBuildWaiting: st.fullBuildWaiting,
            savedCacheDb: st.savedCacheDb,
            revertCacheDbTimeout: st.revertCacheDbTimeout,
            modules: st.modules,
            modulesFile: st.modulesFile,
            diagnostics: st.diagnostics,
            parsedModules: st.parsedModules
          };
        }
        ;
        return st;
      };
    };
    enqueue = function(serverStateOver) {
      return function(stateRef) {
        return function(originalDocument) {
          return function(documents) {
            var enqueue$prime = function(v) {
              return modifyState_(stateRef)(function(s) {
                return serverStateOver(insert(ordDocumentUri)(v.uri)(v.document))(s);
              });
            };
            var doNothing = pure(applicativeEffect)(unit);
            var unprocessedUri = getUri(originalDocument);
            return function __do2() {
              var mayFileData = function() {
                var v = uriToRelevantFileType(unprocessedUri);
                if (v instanceof PureScriptFile) {
                  return new Just({
                    uri: unprocessedUri,
                    document: originalDocument
                  });
                }
                ;
                if (v instanceof JavaScriptFile) {
                  var v1 = jsUriToMayPsUri(unprocessedUri);
                  if (v1 instanceof Nothing) {
                    return Nothing.value;
                  }
                  ;
                  if (v1 instanceof Just) {
                    var maybeDoc = map(functorEffect)(toMaybe)(getDocument(documents)(v1.value0))();
                    return map(functorMaybe)(function(v2) {
                      return {
                        uri: v1.value0,
                        document: v2
                      };
                    })(maybeDoc);
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 322, column 7 - line 326, column 51): " + [v1.constructor.name]);
                }
                ;
                if (v instanceof UnsupportedFile) {
                  return Nothing.value;
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 318, column 18 - line 327, column 46): " + [v.constructor.name]);
              }();
              if (mayFileData instanceof Nothing) {
                return doNothing();
              }
              ;
              if (mayFileData instanceof Just) {
                return enqueue$prime(mayFileData.value0)();
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 328, column 3 - line 330, column 25): " + [mayFileData.constructor.name]);
            };
          };
        };
      };
    };
    emptyDiagnostics = {
      pscErrors: [],
      diagnostics: empty2
    };
    collectByFirst = function(x) {
      var f = function(v) {
        if (v.value0 instanceof Just) {
          return new Just(new Tuple(v.value0.value0, [v.value1]));
        }
        ;
        return Nothing.value;
      };
      return fromFoldableWith(ordDocumentUri)(foldableArray)(append(semigroupArray))(mapMaybe2(f)(x));
    };
    clearCacheDbRevert = function(state2) {
      return function __do2() {
        var st = readState(state2)(identity(categoryFn))();
        if (st.revertCacheDbTimeout instanceof Just) {
          clearTimeout2(st.revertCacheDbTimeout.value0)();
          return modifyState_(state2)(function(v) {
            return {
              port: v.port,
              root: v.root,
              deactivate: v.deactivate,
              purs: v.purs,
              conn: v.conn,
              clientCapabilities: v.clientCapabilities,
              runningRebuild: v.runningRebuild,
              rebuildRunning: v.rebuildRunning,
              fastRebuildQueue: v.fastRebuildQueue,
              diagnosticsQueue: v.diagnosticsQueue,
              fullBuildWaiting: v.fullBuildWaiting,
              savedCacheDb: v.savedCacheDb,
              revertCacheDbTimeout: Nothing.value,
              modules: v.modules,
              modulesFile: v.modulesFile,
              diagnostics: v.diagnostics,
              parsedModules: v.parsedModules
            };
          })();
        }
        ;
        if (st.revertCacheDbTimeout instanceof Nothing) {
          return unit;
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 434, column 3 - line 438, column 25): " + [st.revertCacheDbTimeout.constructor.name]);
      };
    };
    revertCacheDb = function(conn) {
      return function(state2) {
        return bind(bindAff)(liftEffect(monadEffectAff)(readState(state2)(identity(categoryFn))))(function(st) {
          if (st.savedCacheDb instanceof Just) {
            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log3(conn)("Reverting cache-db state")))(function() {
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(clearCacheDbRevert(state2)))(function() {
                return discard(discardUnit)(bindAff)(flip(catchError(monadErrorAff))(function(err) {
                  return liftEffect(monadEffectAff)(log3(conn)(show(showError)(err)));
                })(writeTextFile3(UTF8.value)(st.savedCacheDb.value0.path)(st.savedCacheDb.value0.source)))(function() {
                  return liftEffect(monadEffectAff)(modifyState_(state2)(function(v) {
                    return {
                      port: v.port,
                      root: v.root,
                      deactivate: v.deactivate,
                      purs: v.purs,
                      conn: v.conn,
                      clientCapabilities: v.clientCapabilities,
                      runningRebuild: v.runningRebuild,
                      rebuildRunning: v.rebuildRunning,
                      fastRebuildQueue: v.fastRebuildQueue,
                      diagnosticsQueue: v.diagnosticsQueue,
                      fullBuildWaiting: v.fullBuildWaiting,
                      savedCacheDb: Nothing.value,
                      revertCacheDbTimeout: v.revertCacheDbTimeout,
                      modules: v.modules,
                      modulesFile: v.modulesFile,
                      diagnostics: v.diagnostics,
                      parsedModules: v.parsedModules
                    };
                  }));
                });
              });
            });
          }
          ;
          if (st.savedCacheDb instanceof Nothing) {
            return pure(applicativeAff)(unit);
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 415, column 3 - line 429, column 16): " + [st.savedCacheDb.constructor.name]);
        });
      };
    };
    revertCacheDbAfterTimeout = function(conn) {
      return function(state2) {
        return function(timeout) {
          return function __do2() {
            clearCacheDbRevert(state2)();
            var st = liftEffect(monadEffectEffect)(readState(state2)(identity(categoryFn)))();
            return when(applicativeEffect)(isJust(st.savedCacheDb))(function __do3() {
              var id2 = setTimeout2(timeout)(launchAff_(revertCacheDb(conn)(state2)))();
              return modifyState_(state2)(function(v) {
                return {
                  port: v.port,
                  root: v.root,
                  deactivate: v.deactivate,
                  purs: v.purs,
                  conn: v.conn,
                  clientCapabilities: v.clientCapabilities,
                  runningRebuild: v.runningRebuild,
                  rebuildRunning: v.rebuildRunning,
                  fastRebuildQueue: v.fastRebuildQueue,
                  diagnosticsQueue: v.diagnosticsQueue,
                  fullBuildWaiting: v.fullBuildWaiting,
                  savedCacheDb: v.savedCacheDb,
                  revertCacheDbTimeout: new Just(id2),
                  modules: v.modules,
                  modulesFile: v.modulesFile,
                  diagnostics: v.diagnostics,
                  parsedModules: v.parsedModules
                };
              })();
            })();
          };
        };
      };
    };
    saveCacheDb = function(config) {
      return function(conn) {
        return function(state2) {
          return bind(bindAff)(liftEffect(monadEffectAff)(readState(state2)(identity(categoryFn))))(function(st) {
            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(clearCacheDbRevert(state2)))(function() {
              return when(applicativeAff)(isNothing(st.savedCacheDb))(discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log3(conn)("Saving cache-db state")))(function() {
                return bind(bindAff)(liftEffect(monadEffectAff)(mapFlipped(functorEffect)(getOutputDir(config)(state2))(function(output) {
                  return output + "/cache-db.json";
                })))(function(cacheDbPath) {
                  return bind(bindAff)(attempt(bind(bindAff)(stat3(cacheDbPath))(function() {
                    return mapFlipped(functorAff)(readTextFile3(UTF8.value)(cacheDbPath))(function(source2) {
                      return {
                        path: cacheDbPath,
                        source: source2
                      };
                    });
                  })))(function(cacheDb) {
                    return liftEffect(monadEffectAff)(modifyState_(state2)(function(v) {
                      return {
                        port: v.port,
                        root: v.root,
                        deactivate: v.deactivate,
                        purs: v.purs,
                        conn: v.conn,
                        clientCapabilities: v.clientCapabilities,
                        runningRebuild: v.runningRebuild,
                        rebuildRunning: v.rebuildRunning,
                        fastRebuildQueue: v.fastRebuildQueue,
                        diagnosticsQueue: v.diagnosticsQueue,
                        fullBuildWaiting: v.fullBuildWaiting,
                        savedCacheDb: hush(cacheDb),
                        revertCacheDbTimeout: v.revertCacheDbTimeout,
                        modules: v.modules,
                        modulesFile: v.modulesFile,
                        diagnostics: v.diagnostics,
                        parsedModules: v.parsedModules
                      };
                    }));
                  });
                });
              }));
            });
          });
        };
      };
    };
    censorWarnings = function(settings) {
      var getCode = function(v) {
        return v.errorCode;
      };
      var codes = censorCodes(settings);
      return filter2(function() {
        var $202 = flip(notElem2(eqString))(codes);
        return function($203) {
          return $202(getCode($203));
        };
      }());
    };
    convertDiagnostics = function(projectRoot) {
      return function(settings) {
        return function(v) {
          var warnings$prime = censorWarnings(settings)(v.warnings);
          var dummyRange = {
            start: {
              line: 1,
              character: 1
            },
            end: {
              line: 1,
              character: 1
            }
          };
          var convertDiagnostic = function(isError) {
            return function(v1) {
              return function __do2() {
                var uri = traverse(traversableMaybe)(applicativeEffect)(function() {
                  var $204 = bindFlipped(bindEffect)(filenameToUri);
                  var $205 = resolve([projectRoot]);
                  return function($206) {
                    return $204($205($206));
                  };
                }())(v1.filename)();
                return new Tuple(uri, {
                  range: maybe(dummyRange)(positionToRange)(v1.position),
                  severity: toNullable(new Just(function() {
                    if (isError) {
                      return 1;
                    }
                    ;
                    return 2;
                  }())),
                  code: toNullable(new Just(v1.errorCode)),
                  source: toNullable(new Just("PureScript")),
                  message: v1.message
                });
              };
            };
          };
          var allDiagnostics = append(semigroupEffect(semigroupArray))(traverse(traversableArray)(applicativeEffect)(convertDiagnostic(true))(v.errors))(traverse(traversableArray)(applicativeEffect)(convertDiagnostic(false))(warnings$prime));
          var diagnostics = function __do2() {
            var diags = allDiagnostics();
            return collectByFirst(diags);
          };
          return mapFlipped(functorEffect)(diagnostics)(function(v1) {
            return {
              diagnostics: v1,
              pscErrors: append(semigroupArray)(v.errors)(warnings$prime)
            };
          });
        };
      };
    };
    fullBuild = function(logCb) {
      return function(settings) {
        return function(state2) {
          var command = parseShellQuote(buildCommand(settings));
          var v = uncons2(command);
          if (state2.root instanceof Just && v instanceof Just) {
            return bind(bindAff)(build2(logCb)({
              command: new Command(v.value0.head, v.value0.tail),
              directory: state2.root.value0,
              useNpmDir: addNpmPath(settings)
            }))(either(function() {
              var $207 = pure(applicativeAff);
              return function($208) {
                return $207(Left.create($208));
              };
            }())(function(v2) {
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)("Build complete")))(function() {
                return discard(discardUnit)(bindAff)(function() {
                  if (state2.port instanceof Nothing) {
                    return liftEffect(monadEffectAff)(logCb($$Error.value)("Couldn't reload modules, no ide server port"));
                  }
                  ;
                  if (state2.port instanceof Just) {
                    return discard(discardUnit)(bindAff)(pure(applicativeAff)(unit))(function() {
                      return bind(bindAff)(attempt(loadAll(state2.port.value0)))(function(v32) {
                        if (v32 instanceof Left) {
                          return liftEffect(monadEffectAff)(logCb($$Error.value)("Error reloading modules: " + show(showError)(v32.value0)));
                        }
                        ;
                        if (v32 instanceof Right && v32.value0 instanceof Left) {
                          return liftEffect(monadEffectAff)(logCb($$Error.value)("Error message from IDE server reloading modules: " + v32.value0.value0));
                        }
                        ;
                        return liftEffect(monadEffectAff)(logCb(Info.value)("Reloaded modules"));
                      });
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 729, column 11 - line 749, column 63): " + [state2.port.constructor.name]);
                }())(function() {
                  return liftEffect(monadEffectAff)(map(functorEffect)(Right.create)(convertDiagnostics(state2.root.value0)(settings)(v2.errors)));
                });
              });
            }));
          }
          ;
          if (v instanceof Nothing) {
            return pure(applicativeAff)(new Left("Error parsing build command"));
          }
          ;
          return pure(applicativeAff)(new Left("Error running build: port=" + (show(showMaybe(showInt))(state2.port) + (", root=" + show(showMaybe(showString))(state2.root)))));
        };
      };
    };
    fullBuildWithDiagnostics = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(withProgress) {
              var workspaceRoot = getWorkspaceRoot(state2);
              return bind(bindAff)(function() {
                if (withProgress) {
                  return map(functorAff)(Just.create)(createWorkDoneProgress(conn));
                }
                ;
                return pure(applicativeAff)(Nothing.value);
              }())(function(progressReporter) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(function __do2() {
                  fromMaybe(pure(applicativeEffect)(unit))(mapFlipped(functorMaybe)(progressReporter)(flip(workBegin)({
                    title: "Building PureScript"
                  })))();
                  return sendDiagnosticsBegin(conn)();
                }))(function() {
                  return bind(bindAff)(liftEffect(monadEffectAff)(read(state2)))(function(st) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(cfg) {
                      return discard(discardUnit)(bindAff)(bind(bindAff)(fullBuild(notify)(cfg)(st))(function(v) {
                        if (v instanceof Right) {
                          return liftEffect(monadEffectAff)(function __do2() {
                            log3(conn)("Built with " + (show(showInt)(length4(v.value0.pscErrors)) + " issues"))();
                            var pscErrorsMap = map(functorEffect)(collectByFirst)(traverse(traversableArray)(applicativeEffect)(function(v1) {
                              return function __do3() {
                                var projectRoot = workspaceRoot();
                                var uri = traverse(traversableMaybe)(applicativeEffect)(function() {
                                  var $209 = bindFlipped(bindEffect)(filenameToUri);
                                  var $210 = resolve([projectRoot]);
                                  return function($211) {
                                    return $209($210($211));
                                  };
                                }())(v1.filename)();
                                return new Tuple(uri, v1);
                              };
                            })(v.value0.pscErrors))();
                            var newDiagState = mapMaybeWithKey(ordDocumentUri)(function(file) {
                              return function(errors) {
                                return new Just({
                                  errors,
                                  diagnostics: fromMaybe([])(lookup(ordDocumentUri)(file)(v.value0.diagnostics)),
                                  onType: false
                                });
                              };
                            })(pscErrorsMap);
                            var prevDiag = readState(state2)(function(v1) {
                              return v1.diagnostics;
                            })();
                            var actualDiag = updateDiagnostics(prevDiag)(newDiagState);
                            var nonErrorFiles = toUnfoldable5(unfoldableArray)(keys3(difference(ordDocumentUri)(prevDiag)(actualDiag)));
                            var nonErrorFilesNames = traverse(traversableArray)(applicativeEffect)(uriToFilename)(nonErrorFiles)();
                            log3(conn)("Removing old diagnostics for: " + show(showArray(showString))(nonErrorFilesNames))();
                            for_(applicativeEffect)(foldableArray)(nonErrorFiles)(function(uri) {
                              return publishDiagnostics(conn)({
                                uri,
                                diagnostics: []
                              });
                            })();
                            modifyState_(state2)(function(v1) {
                              return {
                                port: v1.port,
                                root: v1.root,
                                deactivate: v1.deactivate,
                                purs: v1.purs,
                                conn: v1.conn,
                                clientCapabilities: v1.clientCapabilities,
                                runningRebuild: v1.runningRebuild,
                                rebuildRunning: v1.rebuildRunning,
                                fastRebuildQueue: v1.fastRebuildQueue,
                                diagnosticsQueue: v1.diagnosticsQueue,
                                fullBuildWaiting: v1.fullBuildWaiting,
                                savedCacheDb: v1.savedCacheDb,
                                revertCacheDbTimeout: v1.revertCacheDbTimeout,
                                modules: v1.modules,
                                modulesFile: v1.modulesFile,
                                diagnostics: actualDiag,
                                parsedModules: v1.parsedModules
                              };
                            })();
                            for_(applicativeEffect)(foldableArray)(toUnfoldable3(unfoldableArray)(v.value0.diagnostics))(function(v1) {
                              return function __do3() {
                                var filename = uriToFilename(v1.value0)();
                                log3(conn)("Publishing diagnostics for: " + show(showString)(filename))();
                                return publishDiagnostics(conn)({
                                  uri: v1.value0,
                                  diagnostics: v1.value1
                                })();
                              };
                            })();
                            var errorFiles = traverse(traversableArray)(applicativeEffect)(uriToFilename)(toUnfoldable5(unfoldableArray)(keys3(filter4(ordDocumentUri)(function() {
                              var $212 = find2(function(v1) {
                                return eq(eqNullable(eqInt))(v1.severity)(notNull(1));
                              });
                              return function($213) {
                                return isJust($212($213));
                              };
                            }())(v.value0.diagnostics))))();
                            if (errorFiles.length === 0) {
                              return unit;
                            }
                            ;
                            return showError2(conn)("Build failed with errors in files: " + joinWith(", ")(errorFiles))();
                          });
                        }
                        ;
                        if (v instanceof Left) {
                          return liftEffect(monadEffectAff)(function __do2() {
                            error3(conn)(v.value0)();
                            return showError2(conn)(v.value0)();
                          });
                        }
                        ;
                        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 902, column 9 - line 983, column 29): " + [v.constructor.name]);
                      }))(function() {
                        return liftEffect(monadEffectAff)(function __do2() {
                          sendDiagnosticsEnd(conn)();
                          return fromMaybe(pure(applicativeEffect)(unit))(mapFlipped(functorMaybe)(progressReporter)(workDone))();
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
    getDiagnostics = function(uri) {
      return function(settings) {
        return function(state2) {
          return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(uri)))(function(filename) {
            var targets = codegenTargets(settings);
            if (state2.port instanceof Just && state2.root instanceof Just) {
              return bind(bindAff)(rebuild2(state2.port.value0)(filename)(new Just(filename))(targets))(function(v) {
                return liftEffect(monadEffectAff)(convertDiagnostics(state2.root.value0)(settings)(v.errors));
              });
            }
            ;
            return pure(applicativeAff)(emptyDiagnostics);
          });
        };
      };
    };
    getDiagnosticsOnType = function(document) {
      return function(cfg) {
        return function(state2) {
          return function(moduleName) {
            var shouldRevert = function(currentText) {
              var v = revertExternsAndCacheDb(cfg);
              if (!v) {
                return pure(applicativeAff)(false);
              }
              ;
              if (v) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(document)))(function(version2) {
                  var $151 = version2 === 1;
                  if ($151) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(getUri(document))))(function(orgPath) {
                      return bind(bindAff)(attempt(readTextFile3(UTF8.value)(orgPath)))(function(contentOnDisk) {
                        return pure(applicativeAff)(either($$const(false))(eq(eqString)(currentText))(contentOnDisk));
                      });
                    });
                  }
                  ;
                  return pure(applicativeAff)(false);
                });
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 641, column 5 - line 652, column 21): " + [v.constructor.name]);
            };
            var saveExtern = function(currentText) {
              if (moduleName instanceof Nothing) {
                return pure(applicativeAff)(Nothing.value);
              }
              ;
              if (moduleName instanceof Just) {
                return bind(bindAff)(shouldRevert(currentText))(function(should) {
                  var $153 = !should;
                  if ($153) {
                    return pure(applicativeAff)(Nothing.value);
                  }
                  ;
                  return bind(bindAff)(liftEffect(monadEffectAff)(getOutputDir_(cfg)(state2)))(function(output) {
                    var getPath = function(fName) {
                      return output + ("/" + (moduleName.value0 + ("/" + fName)));
                    };
                    var externs = {
                      org: getPath("externs.cbor"),
                      saved: getPath("externs.saved.cbor")
                    };
                    return bind(bindAff)(liftEffect(monadEffectAff)(exists(externs.org)))(function(exists2) {
                      if (exists2) {
                        return discard(discardUnit)(bindAff)(toAffE(copyFile(externs.org)(externs.saved)))(function() {
                          return pure(applicativeAff)(new Just(externs));
                        });
                      }
                      ;
                      return pure(applicativeAff)(Nothing.value);
                    });
                  });
                });
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 655, column 5 - line 677, column 25): " + [moduleName.constructor.name]);
            };
            var revertExtern = function(saved) {
              return discard(discardUnit)(bindAff)(function() {
                if (saved instanceof Just) {
                  return toAffE(copyFile(saved.value0.saved)(saved.value0.org));
                }
                ;
                return pure(applicativeAff)(unit);
              }())(function() {
                if (saved instanceof Just) {
                  return $$void(functorAff)(unlink4(saved.value0.saved));
                }
                ;
                return pure(applicativeAff)(unit);
              });
            };
            var targets = function() {
              var $160 = diagnosticsCodegen(cfg);
              if ($160) {
                return codegenTargets(cfg);
              }
              ;
              return new Just([]);
            }();
            var uri = getUri(document);
            if (state2.port instanceof Just && state2.root instanceof Just) {
              return bind(bindAff)(bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(uri)))(function(filename) {
                return getDestFiles(filename)(getForeignExt(foreignExt(cfg)));
              }))(function(files) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getText(document)))(function(currentText) {
                  return bind(bindAff)(saveExtern(currentText))(function(externs) {
                    return discard(discardUnit)(bindAff)(writeTextFile3(UTF8.value)(files.source.tmp)(currentText))(function() {
                      return discard(discardUnit)(bindAff)(function() {
                        if (files.foreign instanceof Just) {
                          return toAffE(copyFile(files.foreign.value0.org)(files.foreign.value0.tmp));
                        }
                        ;
                        if (files.foreign instanceof Nothing) {
                          return pure(applicativeAff)(unit);
                        }
                        ;
                        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 603, column 7 - line 607, column 20): " + [files.foreign.constructor.name]);
                      }())(function() {
                        return bind(bindAff)(rebuild2(state2.port.value0)(files.source.tmp)(new Just(files.source.org))(targets))(function(v) {
                          return bind(bindAff)(liftEffect(monadEffectAff)(convertDiagnostics(state2.root.value0)(cfg)(v.errors)))(function(diagResult) {
                            return discard(discardUnit)(bindAff)(parSequence_(parallelAff)(foldableArray)([$$void(functorAff)(attempt(unlink4(files.source.tmp))), maybe(pure(applicativeAff)(unit))(function() {
                              var $214 = $$void(functorAff);
                              return function($215) {
                                return $214(attempt(unlink4($215)));
                              };
                            }())(mapFlipped(functorMaybe)(files.foreign)(function(v1) {
                              return v1.tmp;
                            })), function() {
                              var $167 = hasSevereErrors(v.errors);
                              if ($167) {
                                return pure(applicativeAff)(unit);
                              }
                              ;
                              return revertExtern(externs);
                            }()]))(function() {
                              return pure(applicativeAff)(diagResult);
                            });
                          });
                        });
                      });
                    });
                  });
                });
              });
            }
            ;
            return pure(applicativeAff)(emptyDiagnostics);
          };
        };
      };
    };
    getNoFsDiagnostics = function(document) {
      return function(settings) {
        return function(state2) {
          var targets = codegenTargets(settings);
          var uri = getUri(document);
          if (state2.port instanceof Just && state2.root instanceof Just) {
            return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(uri)))(function(filename) {
              return bind(bindAff)(liftEffect(monadEffectAff)(getText(document)))(function(currentText) {
                return bind(bindAff)(rebuild2(state2.port.value0)("data:" + currentText)(new Just(filename))(targets))(function(v) {
                  return liftEffect(monadEffectAff)(convertDiagnostics(state2.root.value0)(settings)(v.errors));
                });
              });
            });
          }
          ;
          return pure(applicativeAff)(emptyDiagnostics);
        };
      };
    };
    rebuildWithDiagnostics = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(noCodegen) {
              return function(document) {
                var uri = getUri(document);
                return bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(c2) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(read(state2)))(function(s) {
                    return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(sendDiagnosticsBegin(conn)))(function() {
                      return bind(bindAff)(liftEffect(monadEffectAff)(mapFlipped(functorEffect)(now)(toDateTime2)))(function(startTime) {
                        return bind(bindAff)(function() {
                          if (noCodegen) {
                            var $181 = noFsDiagnostics(c2);
                            if ($181) {
                              return getNoFsDiagnostics(document)(c2)(s);
                            }
                            ;
                            return bind(bindAff)(mapFlipped(functorAff)(mapFlipped(functorAff)(mapFlipped(functorAff)(liftEffect(monadEffectAff)(readState(state2)(function(v) {
                              return v.parsedModules;
                            })))(lookup(ordDocumentUri)(getUri(document))))(map(functorMaybe)(function($216) {
                              return unwrapModuleName(function(v) {
                                return v.parsed;
                              }($216));
                            })))(join(bindMaybe)))(function(mn) {
                              return getDiagnosticsOnType(document)(c2)(s)(mn);
                            });
                          }
                          ;
                          return getDiagnostics(uri)(c2)(s);
                        }())(function(v) {
                          return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(function __do2() {
                            var endTime = mapFlipped(functorEffect)(now)(toDateTime2)();
                            return notify(Info.value)("Getting diagnostics took: " + show(showMaybe(showMilliseconds))(apply(applyMaybe)(map(functorMaybe)(diff(durationMilliseconds))(endTime))(startTime)))();
                          }))(function() {
                            return liftEffect(monadEffectAff)(function() {
                              var fileDiagnostics = fromMaybe([])(lookup(ordDocumentUri)(uri)(v.diagnostics));
                              return function __do2() {
                                var filename = uriToFilename(uri)();
                                var allFiles = traverse(traversableArray)(applicativeEffect)(uriToFilename)(toUnfoldable5(unfoldableArray)(keys3(v.diagnostics)))();
                                notify(Info.value)("Built with " + (show(showInt)(length4(fileDiagnostics)) + ("/" + (show(showInt)(length4(v.pscErrors)) + (" issues for file: " + (show(showString)(filename) + (", all diagnostic files: " + show(showArray(showString))(allFiles))))))))();
                                var nonFileDiagnostics = $$delete2(ordDocumentUri)(uri)(v.diagnostics);
                                when(applicativeEffect)(size(nonFileDiagnostics) > 0)(notify(Info.value)("Unmatched diagnostics: " + show(showMap(showDocumentUri)(showArray(showDiagnostic)))(nonFileDiagnostics)))();
                                modifyState_(state2)(function(s1) {
                                  return {
                                    port: s1.port,
                                    root: s1.root,
                                    deactivate: s1.deactivate,
                                    purs: s1.purs,
                                    conn: s1.conn,
                                    clientCapabilities: s1.clientCapabilities,
                                    runningRebuild: s1.runningRebuild,
                                    rebuildRunning: s1.rebuildRunning,
                                    fastRebuildQueue: s1.fastRebuildQueue,
                                    diagnosticsQueue: s1.diagnosticsQueue,
                                    fullBuildWaiting: s1.fullBuildWaiting,
                                    savedCacheDb: s1.savedCacheDb,
                                    revertCacheDbTimeout: s1.revertCacheDbTimeout,
                                    modules: s1.modules,
                                    modulesFile: Nothing.value,
                                    diagnostics: insert(ordDocumentUri)(uri)({
                                      errors: v.pscErrors,
                                      diagnostics: fileDiagnostics,
                                      onType: true
                                    })(s1.diagnostics),
                                    parsedModules: s1.parsedModules
                                  };
                                })();
                                publishDiagnostics(conn)({
                                  uri,
                                  diagnostics: fileDiagnostics
                                })();
                                return sendDiagnosticsEnd(conn)();
                              };
                            }());
                          });
                        });
                      });
                    });
                  });
                });
              };
            };
          };
        };
      };
    };
    checkBuildTasks = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            var serverIsReady = function(st) {
              return isJust(st.port);
            };
            var runAgain = function(v) {
              return checkBuildTasks(config)(conn)(state2)(notify);
            };
            var rebuildWithDiag = rebuildWithDiagnostics(config)(conn)(state2)(notify);
            var rebuildWithCodegen = rebuildWithDiag(false);
            var runFastRebuilds = function(st) {
              return function(running) {
                var docs = difference(ordDocumentUri)(st.fastRebuildQueue)(running);
                var $185 = isEmpty(docs);
                if ($185) {
                  return pure(applicativeEffect)(unit);
                }
                ;
                return function __do2() {
                  modifyState_(state2)(function(s) {
                    return {
                      port: s.port,
                      root: s.root,
                      deactivate: s.deactivate,
                      purs: s.purs,
                      conn: s.conn,
                      clientCapabilities: s.clientCapabilities,
                      runningRebuild: s.runningRebuild,
                      rebuildRunning: new Just(new FastRebuild(union2(ordDocumentUri)(docs)(running))),
                      fastRebuildQueue: difference(ordDocumentUri)(s.fastRebuildQueue)(docs),
                      diagnosticsQueue: s.diagnosticsQueue,
                      fullBuildWaiting: s.fullBuildWaiting,
                      savedCacheDb: s.savedCacheDb,
                      revertCacheDbTimeout: s.revertCacheDbTimeout,
                      modules: s.modules,
                      modulesFile: s.modulesFile,
                      diagnostics: s.diagnostics,
                      parsedModules: s.parsedModules
                    };
                  })();
                  return launchAff_(discard(discardUnit)(bindAff)(revertCacheDb(conn)(state2))(function() {
                    return discard(discardUnit)(bindAff)(traverse_(applicativeAff)(foldableMap)(rebuildWithCodegen)(docs))(function() {
                      return liftEffect(monadEffectAff)(function __do3() {
                        modifyState_(state2)(finishFastRebuildRunning(docs))();
                        return runAgain(unit)();
                      });
                    });
                  }))();
                };
              };
            };
            var rebuildNoCodegen = rebuildWithDiag(true);
            var needRevert = function(cfg) {
              return not(heytingAlgebraFunction(heytingAlgebraBoolean))(noFsDiagnostics)(cfg) && revertExternsAndCacheDb(cfg);
            };
            var runDiagnostics = function(cfg) {
              return function(st) {
                return function(running) {
                  var docs = difference(ordDocumentUri)(st.diagnosticsQueue)(running);
                  var $186 = isEmpty(docs);
                  if ($186) {
                    return pure(applicativeEffect)(unit);
                  }
                  ;
                  return function __do2() {
                    modifyState_(state2)(function(s) {
                      return {
                        port: s.port,
                        root: s.root,
                        deactivate: s.deactivate,
                        purs: s.purs,
                        conn: s.conn,
                        clientCapabilities: s.clientCapabilities,
                        runningRebuild: s.runningRebuild,
                        rebuildRunning: new Just(new DiagnosticsRebuild(union2(ordDocumentUri)(docs)(running))),
                        fastRebuildQueue: s.fastRebuildQueue,
                        diagnosticsQueue: difference(ordDocumentUri)(s.diagnosticsQueue)(docs),
                        fullBuildWaiting: s.fullBuildWaiting,
                        savedCacheDb: s.savedCacheDb,
                        revertCacheDbTimeout: s.revertCacheDbTimeout,
                        modules: s.modules,
                        modulesFile: s.modulesFile,
                        diagnostics: s.diagnostics,
                        parsedModules: s.parsedModules
                      };
                    })();
                    return launchAff_(discard(discardUnit)(bindAff)(when(applicativeAff)(needRevert(cfg))(saveCacheDb(config)(conn)(state2)))(function() {
                      return discard(discardUnit)(bindAff)(traverse_(applicativeAff)(foldableMap)(rebuildNoCodegen)(docs))(function() {
                        return discard(discardUnit)(bindAff)(delay(toNumber(diagnosticsOnTypeDebounce(cfg))))(function() {
                          return liftEffect(monadEffectAff)(function __do3() {
                            modifyState_(state2)(finishDiagnosticsRunning(docs))();
                            revertCacheDbAfterTimeout(conn)(state2)(cacheDbRevertTimeout(cfg))();
                            return runAgain(unit)();
                          });
                        });
                      });
                    }))();
                  };
                };
              };
            };
            var runFull = function(cfg) {
              return function(st) {
                if (st.fullBuildWaiting instanceof Nothing) {
                  return pure(applicativeEffect)(unit);
                }
                ;
                if (st.fullBuildWaiting instanceof Just) {
                  return function __do2() {
                    modifyState_(state2)(function(v) {
                      return {
                        port: v.port,
                        root: v.root,
                        deactivate: v.deactivate,
                        purs: v.purs,
                        conn: v.conn,
                        clientCapabilities: v.clientCapabilities,
                        runningRebuild: v.runningRebuild,
                        rebuildRunning: new Just(FullBuild.value),
                        fastRebuildQueue: v.fastRebuildQueue,
                        diagnosticsQueue: v.diagnosticsQueue,
                        fullBuildWaiting: v.fullBuildWaiting,
                        savedCacheDb: v.savedCacheDb,
                        revertCacheDbTimeout: v.revertCacheDbTimeout,
                        modules: v.modules,
                        modulesFile: v.modulesFile,
                        diagnostics: v.diagnostics,
                        parsedModules: v.parsedModules
                      };
                    })();
                    launchAff_(discard(discardUnit)(bindAff)(when(applicativeAff)(needRevert(cfg))(revertCacheDb(conn)(state2)))(function() {
                      return discard(discardUnit)(bindAff)(fullBuildWithDiagnostics(config)(conn)(state2)(notify)(st.fullBuildWaiting.value0.progress))(function() {
                        return liftEffect(monadEffectAff)(function __do3() {
                          modifyState_(state2)(function(v) {
                            return {
                              port: v.port,
                              root: v.root,
                              deactivate: v.deactivate,
                              purs: v.purs,
                              conn: v.conn,
                              clientCapabilities: v.clientCapabilities,
                              runningRebuild: v.runningRebuild,
                              rebuildRunning: Nothing.value,
                              fastRebuildQueue: v.fastRebuildQueue,
                              diagnosticsQueue: v.diagnosticsQueue,
                              fullBuildWaiting: v.fullBuildWaiting,
                              savedCacheDb: v.savedCacheDb,
                              revertCacheDbTimeout: v.revertCacheDbTimeout,
                              modules: v.modules,
                              modulesFile: v.modulesFile,
                              diagnostics: v.diagnostics,
                              parsedModules: v.parsedModules
                            };
                          })();
                          return runAgain(unit)();
                        });
                      });
                    }))();
                    return launchAff_(discard(discardUnit)(bindAff)(delay(100))(function() {
                      return liftEffect(monadEffectAff)(modifyState_(state2)(function(v) {
                        return {
                          port: v.port,
                          root: v.root,
                          deactivate: v.deactivate,
                          purs: v.purs,
                          conn: v.conn,
                          clientCapabilities: v.clientCapabilities,
                          runningRebuild: v.runningRebuild,
                          rebuildRunning: v.rebuildRunning,
                          fastRebuildQueue: v.fastRebuildQueue,
                          diagnosticsQueue: v.diagnosticsQueue,
                          fullBuildWaiting: Nothing.value,
                          savedCacheDb: v.savedCacheDb,
                          revertCacheDbTimeout: v.revertCacheDbTimeout,
                          modules: v.modules,
                          modulesFile: v.modulesFile,
                          diagnostics: v.diagnostics,
                          parsedModules: v.parsedModules
                        };
                      }));
                    }))();
                  };
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 185, column 5 - line 201, column 75): " + [st.fullBuildWaiting.constructor.name]);
              };
            };
            return function __do2() {
              var st = readState(state2)(identity(categoryFn))();
              var cfg = read(config)();
              return when(applicativeEffect)(serverIsReady(st))(function() {
                if (st.rebuildRunning instanceof Just && st.rebuildRunning.value0 instanceof FullBuild) {
                  return pure(applicativeEffect)(unit);
                }
                ;
                if (st.rebuildRunning instanceof Just && st.rebuildRunning.value0 instanceof FastRebuild) {
                  return runFastRebuilds(st)(st.rebuildRunning.value0.value0);
                }
                ;
                if (st.rebuildRunning instanceof Just && st.rebuildRunning.value0 instanceof DiagnosticsRebuild) {
                  return runDiagnostics(cfg)(st)(st.rebuildRunning.value0.value0);
                }
                ;
                if (st.rebuildRunning instanceof Nothing) {
                  var $196 = not(heytingAlgebraFunction(heytingAlgebraBoolean))(isEmpty)(st.diagnosticsQueue);
                  if ($196) {
                    return runDiagnostics(cfg)(st)(empty2);
                  }
                  ;
                  var $197 = not(heytingAlgebraFunction(heytingAlgebraBoolean))(isEmpty)(st.fastRebuildQueue);
                  if ($197) {
                    return runFastRebuilds(st)(empty2);
                  }
                  ;
                  return runFull(cfg)(st);
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Build (line 111, column 5 - line 127, column 25): " + [st.rebuildRunning.constructor.name]);
              }())();
            };
          };
        };
      };
    };
    requestFullBuild = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function __do2() {
              modifyState_(state2)(function(v) {
                return {
                  port: v.port,
                  root: v.root,
                  deactivate: v.deactivate,
                  purs: v.purs,
                  conn: v.conn,
                  clientCapabilities: v.clientCapabilities,
                  runningRebuild: v.runningRebuild,
                  rebuildRunning: v.rebuildRunning,
                  fastRebuildQueue: v.fastRebuildQueue,
                  diagnosticsQueue: v.diagnosticsQueue,
                  fullBuildWaiting: new Just({
                    progress: true
                  }),
                  savedCacheDb: v.savedCacheDb,
                  revertCacheDbTimeout: v.revertCacheDbTimeout,
                  modules: v.modules,
                  modulesFile: v.modulesFile,
                  diagnostics: v.diagnostics,
                  parsedModules: v.parsedModules
                };
              })();
              return checkBuildTasks(config)(conn)(state2)(notify)();
            };
          };
        };
      };
    };
    addToFastRebuildQueue = /* @__PURE__ */ enqueue(function(f) {
      return function(s) {
        return {
          port: s.port,
          root: s.root,
          deactivate: s.deactivate,
          purs: s.purs,
          conn: s.conn,
          clientCapabilities: s.clientCapabilities,
          runningRebuild: s.runningRebuild,
          rebuildRunning: s.rebuildRunning,
          fastRebuildQueue: f(s.fastRebuildQueue),
          diagnosticsQueue: s.diagnosticsQueue,
          fullBuildWaiting: s.fullBuildWaiting,
          savedCacheDb: s.savedCacheDb,
          revertCacheDbTimeout: s.revertCacheDbTimeout,
          modules: s.modules,
          modulesFile: s.modulesFile,
          diagnostics: s.diagnostics,
          parsedModules: s.parsedModules
        };
      };
    });
    handleDocumentSave = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(document) {
              return function(documents) {
                return function __do2() {
                  var cfg = read(config)();
                  when(applicativeEffect)(fastRebuild(cfg))(addToFastRebuildQueue(state2)(document)(documents))();
                  when(applicativeEffect)(fullBuildOnSave(cfg))(modifyState_(state2)(function(v) {
                    return {
                      port: v.port,
                      root: v.root,
                      deactivate: v.deactivate,
                      purs: v.purs,
                      conn: v.conn,
                      clientCapabilities: v.clientCapabilities,
                      runningRebuild: v.runningRebuild,
                      rebuildRunning: v.rebuildRunning,
                      fastRebuildQueue: v.fastRebuildQueue,
                      diagnosticsQueue: v.diagnosticsQueue,
                      fullBuildWaiting: new Just({
                        progress: fullBuildOnSaveProgress(cfg)
                      }),
                      savedCacheDb: v.savedCacheDb,
                      revertCacheDbTimeout: v.revertCacheDbTimeout,
                      modules: v.modules,
                      modulesFile: v.modulesFile,
                      diagnostics: v.diagnostics,
                      parsedModules: v.parsedModules
                    };
                  }))();
                  return checkBuildTasks(config)(conn)(state2)(notify)();
                };
              };
            };
          };
        };
      };
    };
    addToDiagnosticsQueue = /* @__PURE__ */ enqueue(function(f) {
      return function(s) {
        return {
          port: s.port,
          root: s.root,
          deactivate: s.deactivate,
          purs: s.purs,
          conn: s.conn,
          clientCapabilities: s.clientCapabilities,
          runningRebuild: s.runningRebuild,
          rebuildRunning: s.rebuildRunning,
          fastRebuildQueue: s.fastRebuildQueue,
          diagnosticsQueue: f(s.diagnosticsQueue),
          fullBuildWaiting: s.fullBuildWaiting,
          savedCacheDb: s.savedCacheDb,
          revertCacheDbTimeout: s.revertCacheDbTimeout,
          modules: s.modules,
          modulesFile: s.modulesFile,
          diagnostics: s.diagnostics,
          parsedModules: s.parsedModules
        };
      };
    });
    handleDocumentChange = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(document) {
              return function(documents) {
                var v = uriToRelevantFileType(getUri(document));
                if (v instanceof JavaScriptFile) {
                  return pure(applicativeEffect)(unit);
                }
                ;
                return function __do2() {
                  parseModuleDocument(state2)(document)();
                  var cfg = read(config)();
                  var version2 = getVersion(document)();
                  var isLibSource = isLibSourceFile(unwrap()(getUri(document)));
                  var doHandle = function() {
                    if (version2 === 1) {
                      return diagnosticsOnOpen(cfg) && (revertExternsAndCacheDb(cfg) || (noFsDiagnostics(cfg) || !isLibSource));
                    }
                    ;
                    return diagnosticsOnType(cfg);
                  }();
                  return when(applicativeEffect)(doHandle)(function __do3() {
                    addToDiagnosticsQueue(state2)(document)(documents)();
                    return checkBuildTasks(config)(conn)(state2)(notify)();
                  })();
                };
              };
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Clean/index.js
var removeFile, removeDirectory, joinPaths, filesToRemove, maybeRemovableFile, directoryRemovalMarker, maybeRemovableContents, processDir, clean;
var init_LanguageServer_IdePurescript9 = __esm({
  "output/LanguageServer.IdePurescript.Clean/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data16();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data_String5();
    init_Data29();
    init_Effect6();
    init_Effect2();
    init_LanguageServer_IdePurescript2();
    init_Node_FS6();
    init_Node_FS3();
    init_Node();
    removeFile = function(filePath) {
      return discard(discardUnit)(bindAff)(unlink4(filePath))(function() {
        return pure(applicativeAff)('File "' + (filePath + '" was removed\n'));
      });
    };
    removeDirectory = function(processor) {
      return function(dirPath) {
        return function(contentFullPaths) {
          var dirRemovalMsg = 'Directory "' + (dirPath + '" was removed\n');
          return bind(bindAff)(traverse(traversableArray)(applicativeAff)(processor(true))(contentFullPaths))(function() {
            return discard(discardUnit)(bindAff)(rmdir3(dirPath))(function() {
              return pure(applicativeAff)(dirRemovalMsg);
            });
          });
        };
      };
    };
    joinPaths = function(parent) {
      return function(child) {
        return concat2([parent, child]);
      };
    };
    filesToRemove = ["cache-db.json"];
    maybeRemovableFile = function(filePath) {
      return find2(function(x) {
        return x === basename(filePath);
      })(filesToRemove);
    };
    directoryRemovalMarker = "externs.cbor";
    maybeRemovableContents = function(dirContents) {
      var v = find2(function(x) {
        return x === directoryRemovalMarker;
      })(dirContents);
      if (v instanceof Nothing) {
        return Nothing.value;
      }
      ;
      return new Just(dirContents);
    };
    processDir = function(markedForRemoval) {
      return function(path2) {
        return bind(bindAff)(stat3(path2))(function(stats) {
          var v = isDirectory(stats);
          if (!v) {
            if (markedForRemoval) {
              return removeFile(path2);
            }
            ;
            if (!markedForRemoval) {
              var v1 = maybeRemovableFile(path2);
              if (v1 instanceof Nothing) {
                return pure(applicativeAff)("");
              }
              ;
              return removeFile(path2);
            }
            ;
            throw new Error("Failed pattern match at LanguageServer.IdePurescript.Clean (line 45, column 7 - line 50, column 33): " + [markedForRemoval.constructor.name]);
          }
          ;
          if (v) {
            return bind(bindAff)(readdir3(path2))(function(contentPartialPaths) {
              var removeDir = removeDirectory(processDir);
              var contentFullPaths = map(functorArray)(joinPaths(path2))(contentPartialPaths);
              if (markedForRemoval) {
                return removeDir(path2)(contentFullPaths);
              }
              ;
              if (!markedForRemoval) {
                var v12 = maybeRemovableContents(contentPartialPaths);
                if (v12 instanceof Nothing) {
                  return bind(bindAff)(traverse(traversableArray)(applicativeAff)(processDir(false))(contentFullPaths))(function(msgs) {
                    return pure(applicativeAff)(fold2(monoidString)(msgs));
                  });
                }
                ;
                return removeDir(path2)(contentFullPaths);
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Clean (line 59, column 7 - line 65, column 47): " + [markedForRemoval.constructor.name]);
            });
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Clean (line 43, column 3 - line 65, column 47): " + [v.constructor.name]);
        });
      };
    };
    clean = function(settings) {
      var outputDir = effectiveOutputDirectory(settings);
      return bind(bindAff)(attempt(stat3(outputDir)))(function(attempedStats) {
        if (attempedStats instanceof Left) {
          return pure(applicativeAff)(new Left("Could not find directory to clean. " + message(attempedStats.value0)));
        }
        ;
        if (attempedStats instanceof Right) {
          var v = isDirectory(attempedStats.value0);
          if (!v) {
            return pure(applicativeAff)(new Left('Target "' + (outputDir + '" is not a directory')));
          }
          ;
          if (v) {
            return bind(bindAff)(processDir(false)(outputDir))(function(msg) {
              var v1 = length5(msg);
              if (v1 === 0) {
                return pure(applicativeAff)(new Right('Nothing to clean in directory "' + (outputDir + '"')));
              }
              ;
              return pure(applicativeAff)(new Right(msg + ('Successfully cleaned directory "' + (outputDir + '"'))));
            });
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Clean (line 27, column 20 - line 36, column 20): " + [v.constructor.name]);
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Clean (line 24, column 3 - line 36, column 20): " + [attempedStats.constructor.name]);
      });
    };
  }
});

// output/IdePurescript.QuickFix/index.js
var wildcardInferredType, isUnknownToken, isImport, getTitle;
var init_IdePurescript10 = __esm({
  "output/IdePurescript.QuickFix/index.js"() {
    init_Data8();
    init_Data25();
    init_Data2();
    wildcardInferredType = "WildcardInferredType";
    isUnknownToken = /* @__PURE__ */ flip(/* @__PURE__ */ elem(foldableArray)(eqString))(["UnknownValue", "UnknownType", "UnknownDataConstructor", "UnknownTypeConstructor", "UnknownName"]);
    isImport = /* @__PURE__ */ flip(/* @__PURE__ */ elem(foldableArray)(eqString))(["UnusedImport", "DuplicateImport", "HidingImport", "ImplicitImport", "ImplicitQualifiedImport", "UnusedDctorExplicitImport", "UnusedDctorImport", "UnusedExplicitImport"]);
    getTitle = function(code) {
      if (code === "UnusedImport") {
        return "Remove import";
      }
      ;
      if (code === "RedundantEmptyHidingImport") {
        return "Remove import";
      }
      ;
      if (code === "DuplicateImport") {
        return "Remove import";
      }
      ;
      if (code === "RedundantUnqualifiedImport") {
        return "Remove import";
      }
      ;
      if (code === "DeprecatedQualifiedSyntax") {
        return "Remove qualified keyword";
      }
      ;
      if (code === "ImplicitImport") {
        return "Make import explicit";
      }
      ;
      if (code === "UnusedExplicitImport") {
        return "Remove unused references";
      }
      ;
      return "Apply suggestion";
    };
  }
});

// output/LanguageServer.IdePurescript.CodeActions/index.js
var toNextLine, readSuggestion, commandAction, commandAction_, codeActionLiteralsSupported, codeActionToCommand, getActions, afterEnd, getReplacementEdit, onReplaceAllSuggestions, onReplaceSuggestion;
var init_LanguageServer_IdePurescript10 = __esm({
  "output/LanguageServer.IdePurescript.CodeActions/index.js"() {
    init_Control4();
    init_Control5();
    init_Control_Monad();
    init_Control_Monad_Except();
    init_Data39();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data4();
    init_Data21();
    init_Data20();
    init_Data_Map();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data12();
    init_Data7();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data29();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Foreign();
    init_Foreign4();
    init_IdePurescript10();
    init_IdePurescript4();
    init_LanguageServer_IdePurescript4();
    init_LanguageServer_IdePurescript8();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol4();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    toNextLine = function(v) {
      return {
        start: v.start,
        end: {
          line: v.end.line + 1 | 0,
          character: 0
        }
      };
    };
    readSuggestion = function(o) {
      return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(o)("replacement"))(readString(monadIdentity)))(function(replacement) {
        return bind(bindExceptT(monadIdentity))(bind(bindExceptT(monadIdentity))(ix(indexableForeign(monadIdentity))(indexString(monadIdentity))(o)("range"))(readRange))(function(range3) {
          return pure(applicativeExceptT(monadIdentity))({
            replacement,
            range: range3
          });
        });
      });
    };
    commandAction = function(kind) {
      return function(v) {
        return {
          title: v.title,
          kind,
          isPreferred: false,
          edit: toNullable(Nothing.value),
          command: toNullable(new Just(v))
        };
      };
    };
    commandAction_ = /* @__PURE__ */ commandAction(codeActionEmpty);
    codeActionLiteralsSupported = function(capabilities) {
      return isJust(bind(bindMaybe)(bind(bindMaybe)(toMaybe(function(v) {
        return v.textDocument;
      }(capabilities)))(function($184) {
        return toMaybe(function(v) {
          return v.codeAction;
        }($184));
      }))(function($185) {
        return toMaybe(function(v) {
          return v.codeActionLiteralSupport;
        }($185));
      }));
    };
    codeActionToCommand = function(capabilities) {
      return function(action) {
        var supportsLiteral = maybe(true)(codeActionLiteralsSupported)(capabilities);
        var convert = function(v) {
          var v1 = function(v2) {
            return Nothing.value;
          };
          var $55 = toMaybe(v.command);
          if ($55 instanceof Just) {
            return new Just(new Right($55.value0));
          }
          ;
          return v1(true);
        };
        return map(functorMaybe)(codeActionResult)(function() {
          if (supportsLiteral) {
            return new Just(new Left(action));
          }
          ;
          return convert(action);
        }());
      };
    };
    getActions = function(v) {
      return function(v1) {
        return function(v2) {
          return function(v32) {
            if (v2.conn instanceof Just) {
              var removeOverlaps = function() {
                var go = function(v43) {
                  return function(v52) {
                    if (v43.length === 0) {
                      return [v52];
                    }
                    ;
                    var v6 = function(v7) {
                      return v43;
                    };
                    var $69 = head(v43);
                    if ($69 instanceof Just) {
                      var $70 = lessThan(positionOrd)($69.value0.range.end)(v52.range.start);
                      if ($70) {
                        return cons2(v52)(v43);
                      }
                      ;
                      return v6(true);
                    }
                    ;
                    return v6(true);
                  };
                };
                return foldl2(go)([]);
              }();
              var notImplicitPrelude = filter2(function(v43) {
                return !(v43.errorCode === "ImplicitImport" && contains("Module Prelude")(v43.message));
              });
              var intersects = function(v43) {
                return function(v52) {
                  return lessThanOrEq(positionOrd)(v43.start)(v52.end) && lessThanOrEq(positionOrd)(v52.start)(v43.end);
                };
              };
              var getReplacementRange = function(v43) {
                if (v43.position instanceof Just && v43.suggestion instanceof Just) {
                  var range$prime = positionToRange(fromMaybe(v43.position.value0)(v43.suggestion.value0.replaceRange));
                  return new Just({
                    replacement: v43.suggestion.value0.replacement,
                    range: range$prime
                  });
                }
                ;
                return Nothing.value;
              };
              var filterKind = function(actions) {
                var isSubKindOf = function(v44) {
                  return function(v52) {
                    return eq(eqMaybe(eqInt))(indexOf2(v52)(v44))(new Just(0));
                  };
                };
                var v43 = toMaybe(v32.context.only);
                if (v43 instanceof Nothing) {
                  return actions;
                }
                ;
                if (v43 instanceof Just) {
                  return filter2(function(v52) {
                    return any(foldableArray)(heytingAlgebraBoolean)(function(v6) {
                      return isSubKindOf(v52.kind)(v6);
                    })(v43.value0);
                  })(actions);
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeActions (line 77, column 5 - line 81, column 16): " + [v43.constructor.name]);
              };
              var docUri = function(v43) {
                return v43.uri;
              }(un()(TextDocumentIdentifier)(v32.textDocument));
              var fixAllCommand = function(text) {
                return function(rebuildErrors) {
                  var replacements = removeOverlaps(sortWith(ordRange)(function(v43) {
                    return v43.range;
                  })(nubByEq2(eq(eqRec()(eqRowCons(eqRowCons(eqRowNil)()({
                    reflectSymbol: function() {
                      return "replacement";
                    }
                  })(eqString))()({
                    reflectSymbol: function() {
                      return "range";
                    }
                  })(eqRange))))(mapMaybe2(getReplacementRange)(rebuildErrors))));
                  var $98 = length4(replacements) > 0;
                  if ($98) {
                    return [replaceAllSuggestions(text)(docUri)(replacements)];
                  }
                  ;
                  return [];
                };
              };
              var organizeImports = function(errs) {
                return map(functorArray)(commandAction(codeActionSourceOrganizeImports))(fixAllCommand("Organize Imports")(filter2(function(v43) {
                  return isImport(v43.errorCode);
                })(errs)));
              };
              var sortImports2 = [commandAction(codeActionSourceSortImports)(sortImports(docUri))];
              var commandForCode = function(v43) {
                if (v43.position instanceof Just && intersects(positionToRange(v43.position.value0))(v32.range)) {
                  if (v43.errorCode === "ModuleNotFound") {
                    return pure(applicativeAff)([commandAction_(build)]);
                  }
                  ;
                  if (v43.errorCode === "HoleInferredType") {
                    if (v43.pursIde instanceof Just) {
                      return pure(applicativeAff)(singleton5(commandAction_(typedHole(v43.pursIde.value0.name)(docUri)(positionToRange(v43.position.value0))(v43.pursIde.value0.completions))));
                    }
                    ;
                    return pure(applicativeAff)([]);
                  }
                  ;
                  var v52 = function(v6) {
                    return pure(applicativeAff)([]);
                  };
                  var $109 = isUnknownToken(v43.errorCode);
                  if ($109) {
                    return map(functorAff)(map(functorArray)(commandAction_))(fixTypoActions(v)(v1)(v2)(docUri)(v43.position.value0.startLine - 1 | 0)(v43.position.value0.startColumn - 1 | 0));
                  }
                  ;
                  return v52(true);
                }
                ;
                return pure(applicativeAff)([]);
              };
              var asCommand = function(v43) {
                var v52 = function(v6) {
                  return Nothing.value;
                };
                if (v43.position instanceof Just) {
                  var $117 = getReplacementRange(v43);
                  if ($117 instanceof Just) {
                    var $118 = intersects(positionToRange(v43.position.value0))(v32.range);
                    if ($118) {
                      var replacement$prime = replace$prime(regex("\\s*\\n\\s*$")(global))("\n")($117.value0.replacement);
                      var replacement$prime$prime = function() {
                        var $119 = v43.errorCode === wildcardInferredType;
                        if ($119) {
                          return replace$prime(regex("\\n\\s*$")(noFlags))("")(replacement$prime);
                        }
                        ;
                        return replacement$prime;
                      }();
                      return new Just(commandAction_(replaceSuggestion(getTitle(v43.errorCode))(docUri)(replacement$prime$prime)($117.value0.range)));
                    }
                    ;
                    return v52(true);
                  }
                  ;
                  return v52(true);
                }
                ;
                return v52(true);
              };
              var v42 = lookup(ordDocumentUri)(docUri)(v2.diagnostics);
              if (v42 instanceof Just) {
                return map(functorAff)(mapMaybe2(codeActionToCommand(v2.clientCapabilities)))(bind(bindAff)(traverse(traversableArray)(applicativeAff)(commandForCode)(v42.value0.errors))(function(v52) {
                  var actions = append(semigroupArray)(catMaybes2(map(functorArray)(asCommand)(v42.value0.errors)))(append(semigroupArray)(map(functorArray)(commandAction_)(fixAllCommand("Apply all suggestions")(notImplicitPrelude(v42.value0.errors))))(append(semigroupArray)(organizeImports(notImplicitPrelude(v42.value0.errors)))(append(semigroupArray)(concat(v52))(sortImports2))));
                  return pure(applicativeAff)(filterKind(actions));
                }));
              }
              ;
              return pure(applicativeAff)([]);
            }
            ;
            return pure(applicativeAff)([]);
          };
        };
      };
    };
    afterEnd = function(v) {
      return {
        start: v.end,
        end: {
          line: v.end.line,
          character: v.end.character + 10 | 0
        }
      };
    };
    getReplacementEdit = function(doc) {
      return function(v) {
        return bind(bindAff)(liftEffect(monadEffectAff)(map(functorEffect)(replace$prime(regex("\n$")(noFlags))(""))(getTextAtRange(doc)(afterEnd(v.range)))))(function(afterText) {
          var replacementTrimSpaces = replace$prime(regex("\\s+\n")(global))("\n")(v.replacement);
          var removeTrailingNewline = !$$null2(afterText);
          var newText = function() {
            if (removeTrailingNewline) {
              return replace$prime(regex("\\s+\n$")(noFlags))("")(replacementTrimSpaces);
            }
            ;
            return replacementTrimSpaces;
          }();
          var range$prime = function() {
            var $145 = newText === "" && afterText === "";
            if ($145) {
              return toNextLine(v.range);
            }
            ;
            return v.range;
          }();
          return pure(applicativeAff)({
            range: range$prime,
            newText
          });
        });
      };
    };
    onReplaceAllSuggestions = function(docs) {
      return function(v) {
        return function(v1) {
          return function(args) {
            var v2 = function(v32) {
              return pure(applicativeAff)(unit);
            };
            if (v1.conn instanceof Just && args.length === 2) {
              var $154 = runExcept(readString(monadIdentity)(args[0]));
              if ($154 instanceof Right) {
                var $155 = runExcept(bind(bindExceptT(monadIdentity))(readArray(monadIdentity)(args[1]))(traverse(traversableArray)(applicativeExceptT(monadIdentity))(readSuggestion)));
                if ($155 instanceof Right) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($154.value0)))(function(doc) {
                    return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(doc1)))(function(version2) {
                        return bind(bindAff)(traverse(traversableArray)(applicativeAff)(getReplacementEdit(doc1))($155.value0))(function(edits) {
                          return $$void(functorAff)(applyEdit(v1.conn.value0)(workspaceEdit(v1.clientCapabilities)([{
                            textDocument: {
                              uri: $154.value0,
                              version: notNull(version2)
                            },
                            edits
                          }])));
                        });
                      });
                    });
                  });
                }
                ;
                return v2(true);
              }
              ;
              return v2(true);
            }
            ;
            return v2(true);
          };
        };
      };
    };
    onReplaceSuggestion = function(docs) {
      return function(v) {
        return function(v1) {
          return function(args) {
            var v2 = function(v32) {
              return pure(applicativeAff)(unit);
            };
            if (v1.conn instanceof Just && args.length === 3) {
              var $169 = runExcept(readString(monadIdentity)(args[0]));
              if ($169 instanceof Right) {
                var $170 = runExcept(readString(monadIdentity)(args[1]));
                if ($170 instanceof Right) {
                  var $171 = runExcept(readRange(args[2]));
                  if ($171 instanceof Right) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)($169.value0)))(function(doc) {
                      return for_(applicativeAff)(foldableMaybe)(toMaybe(doc))(function(doc1) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(getVersion(doc1)))(function(version2) {
                          return bind(bindAff)(getReplacementEdit(doc1)({
                            replacement: $170.value0,
                            range: $171.value0
                          }))(function(v32) {
                            var edit = makeWorkspaceEdit(v1.clientCapabilities)($169.value0)(version2)(v32.range)(v32.newText);
                            return $$void(functorAff)(applyEdit(v1.conn.value0)(edit));
                          });
                        });
                      });
                    });
                  }
                  ;
                  return v2(true);
                }
                ;
                return v2(true);
              }
              ;
              return v2(true);
            }
            ;
            return v2(true);
          };
        };
      };
    };
  }
});

// output/Data.Lens.Internal.Exchange/index.js
var init_Data_Lens_Internal = __esm({
  "output/Data.Lens.Internal.Exchange/index.js"() {
  }
});

// output/Data.Lens.Internal.Forget/index.js
var init_Data_Lens_Internal2 = __esm({
  "output/Data.Lens.Internal.Forget/index.js"() {
    init_Data26();
    init_Data16();
    init_Data19();
    init_Data23();
    init_Data7();
    init_Data22();
  }
});

// output/Data.Lens.Internal.Grating/index.js
var init_Data_Lens_Internal3 = __esm({
  "output/Data.Lens.Internal.Grating/index.js"() {
  }
});

// output/Data.Profunctor.Choice/index.js
var init_Data_Profunctor3 = __esm({
  "output/Data.Profunctor.Choice/index.js"() {
    init_Control2();
    init_Control();
    init_Data16();
    init_Data4();
    init_Data35();
  }
});

// output/Data.Lens.Internal.Wander/index.js
var init_Data_Lens_Internal4 = __esm({
  "output/Data.Lens.Internal.Wander/index.js"() {
    init_Data20();
    init_Data23();
    init_Data_Profunctor3();
    init_Data_Profunctor();
    init_Data_Profunctor2();
  }
});

// output/Data.Lens.Internal.Indexed/index.js
var init_Data_Lens_Internal5 = __esm({
  "output/Data.Lens.Internal.Indexed/index.js"() {
    init_Data16();
    init_Data_Lens_Internal4();
    init_Data35();
    init_Data_Profunctor3();
    init_Data_Profunctor2();
    init_Data22();
  }
});

// output/Data.Lens.Internal.Market/index.js
var init_Data_Lens_Internal6 = __esm({
  "output/Data.Lens.Internal.Market/index.js"() {
    init_Data24();
    init_Data16();
  }
});

// output/Data.Profunctor.Cochoice/index.js
var init_Data_Profunctor4 = __esm({
  "output/Data.Profunctor.Cochoice/index.js"() {
  }
});

// output/Data.Profunctor.Costrong/index.js
var init_Data_Profunctor5 = __esm({
  "output/Data.Profunctor.Costrong/index.js"() {
  }
});

// output/Data.Lens.Internal.Re/index.js
var init_Data_Lens_Internal7 = __esm({
  "output/Data.Lens.Internal.Re/index.js"() {
    init_Data35();
    init_Data_Profunctor3();
    init_Data_Profunctor4();
    init_Data_Profunctor5();
    init_Data_Profunctor2();
  }
});

// output/Data.Lens.Internal.Shop/index.js
var init_Data_Lens_Internal8 = __esm({
  "output/Data.Lens.Internal.Shop/index.js"() {
    init_Data22();
  }
});

// output/Data.Lens.Internal.Stall/index.js
var init_Data_Lens_Internal9 = __esm({
  "output/Data.Lens.Internal.Stall/index.js"() {
    init_Data24();
    init_Data16();
    init_Data4();
    init_Data22();
  }
});

// output/Data.Lens.Internal.Tagged/index.js
var init_Data_Lens_Internal10 = __esm({
  "output/Data.Lens.Internal.Tagged/index.js"() {
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data12();
  }
});

// output/Data.Lens.Types/index.js
var init_Data_Lens = __esm({
  "output/Data.Lens.Types/index.js"() {
    init_Data_Lens_Internal();
    init_Data_Lens_Internal2();
    init_Data_Lens_Internal3();
    init_Data_Lens_Internal5();
    init_Data_Lens_Internal6();
    init_Data_Lens_Internal7();
    init_Data_Lens_Internal8();
    init_Data_Lens_Internal9();
    init_Data_Lens_Internal10();
    init_Data_Lens_Internal4();
    init_Data_Lens_Internal();
    init_Data_Lens_Internal2();
    init_Data_Lens_Internal5();
    init_Data_Lens_Internal6();
    init_Data_Lens_Internal7();
    init_Data_Lens_Internal8();
    init_Data_Lens_Internal9();
    init_Data_Lens_Internal10();
    init_Data_Lens_Internal4();
  }
});

// output/Data.Lens.Iso/index.js
var init_Data_Lens2 = __esm({
  "output/Data.Lens.Iso/index.js"() {
    init_Control2();
    init_Data();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data_Lens_Internal();
    init_Data_Lens();
    init_Data15();
    init_Data23();
    init_Data35();
    init_Data22();
    init_Safe();
    init_Data_Lens();
  }
});

// output/LanguageServer.IdePurescript.Util.CST/index.js
var sourcePosToPosition, sourceRangeToRange;
var init_LanguageServer_IdePurescript_Util = __esm({
  "output/LanguageServer.IdePurescript.Util.CST/index.js"() {
    init_Data_Lens2();
    sourcePosToPosition = function(v) {
      return {
        line: v.line,
        character: v.column
      };
    };
    sourceRangeToRange = function(sr) {
      return {
        start: sourcePosToPosition(sr.start),
        end: sourcePosToPosition(sr.end)
      };
    };
  }
});

// output/Data.CatQueue/index.js
var CatQueue, uncons6, snoc3, $$null3, empty7;
var init_Data51 = __esm({
  "output/Data.CatQueue/index.js"() {
    init_Control4();
    init_Control3();
    init_Control7();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data38();
    init_Data_List();
    init_Data15();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data14();
    init_Data29();
    init_Data22();
    CatQueue = /* @__PURE__ */ function() {
      function CatQueue2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      CatQueue2.create = function(value0) {
        return function(value1) {
          return new CatQueue2(value0, value1);
        };
      };
      return CatQueue2;
    }();
    uncons6 = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
          $tco_done = true;
          return Nothing.value;
        }
        ;
        if (v.value0 instanceof Nil) {
          $copy_v = new CatQueue(reverse(v.value1), Nil.value);
          return;
        }
        ;
        if (v.value0 instanceof Cons) {
          $tco_done = true;
          return new Just(new Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
        }
        ;
        throw new Error("Failed pattern match at Data.CatQueue (line 82, column 1 - line 82, column 63): " + [v.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    snoc3 = function(v) {
      return function(a) {
        return new CatQueue(v.value0, new Cons(a, v.value1));
      };
    };
    $$null3 = function(v) {
      if (v.value0 instanceof Nil && v.value1 instanceof Nil) {
        return true;
      }
      ;
      return false;
    };
    empty7 = /* @__PURE__ */ function() {
      return new CatQueue(Nil.value, Nil.value);
    }();
  }
});

// output/Data.CatList/index.js
var CatNil, CatCons, link3, foldr3, uncons7, empty8, append2, semigroupCatList, snoc4;
var init_Data52 = __esm({
  "output/Data.CatList/index.js"() {
    init_Control4();
    init_Control3();
    init_Control7();
    init_Data51();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data_List();
    init_Data15();
    init_Data19();
    init_Data7();
    init_Data10();
    init_Data14();
    init_Data29();
    init_Data22();
    CatNil = /* @__PURE__ */ function() {
      function CatNil2() {
      }
      ;
      CatNil2.value = new CatNil2();
      return CatNil2;
    }();
    CatCons = /* @__PURE__ */ function() {
      function CatCons2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      CatCons2.create = function(value0) {
        return function(value1) {
          return new CatCons2(value0, value1);
        };
      };
      return CatCons2;
    }();
    link3 = function(v) {
      return function(v1) {
        if (v instanceof CatNil) {
          return v1;
        }
        ;
        if (v1 instanceof CatNil) {
          return v;
        }
        ;
        if (v instanceof CatCons) {
          return new CatCons(v.value0, snoc3(v.value1)(v1));
        }
        ;
        throw new Error("Failed pattern match at Data.CatList (line 108, column 1 - line 108, column 54): " + [v.constructor.name, v1.constructor.name]);
      };
    };
    foldr3 = function(k) {
      return function(b) {
        return function(q) {
          var foldl3 = function($copy_v) {
            return function($copy_c) {
              return function($copy_v1) {
                var $tco_var_v = $copy_v;
                var $tco_var_c = $copy_c;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v, c2, v1) {
                  if (v1 instanceof Nil) {
                    $tco_done = true;
                    return c2;
                  }
                  ;
                  if (v1 instanceof Cons) {
                    $tco_var_v = v;
                    $tco_var_c = v(c2)(v1.value0);
                    $copy_v1 = v1.value1;
                    return;
                  }
                  ;
                  throw new Error("Failed pattern match at Data.CatList (line 124, column 3 - line 124, column 59): " + [v.constructor.name, c2.constructor.name, v1.constructor.name]);
                }
                ;
                while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                }
                ;
                return $tco_result;
              };
            };
          };
          var go = function($copy_xs) {
            return function($copy_ys) {
              var $tco_var_xs = $copy_xs;
              var $tco_done1 = false;
              var $tco_result;
              function $tco_loop(xs, ys) {
                var v = uncons6(xs);
                if (v instanceof Nothing) {
                  $tco_done1 = true;
                  return foldl3(function(x) {
                    return function(i) {
                      return i(x);
                    };
                  })(b)(ys);
                }
                ;
                if (v instanceof Just) {
                  $tco_var_xs = v.value0.value1;
                  $copy_ys = new Cons(k(v.value0.value0), ys);
                  return;
                }
                ;
                throw new Error("Failed pattern match at Data.CatList (line 120, column 14 - line 122, column 67): " + [v.constructor.name]);
              }
              ;
              while (!$tco_done1) {
                $tco_result = $tco_loop($tco_var_xs, $copy_ys);
              }
              ;
              return $tco_result;
            };
          };
          return go(q)(Nil.value);
        };
      };
    };
    uncons7 = function(v) {
      if (v instanceof CatNil) {
        return Nothing.value;
      }
      ;
      if (v instanceof CatCons) {
        return new Just(new Tuple(v.value0, function() {
          var $45 = $$null3(v.value1);
          if ($45) {
            return CatNil.value;
          }
          ;
          return foldr3(link3)(CatNil.value)(v.value1);
        }()));
      }
      ;
      throw new Error("Failed pattern match at Data.CatList (line 99, column 1 - line 99, column 61): " + [v.constructor.name]);
    };
    empty8 = /* @__PURE__ */ function() {
      return CatNil.value;
    }();
    append2 = link3;
    semigroupCatList = {
      append: append2
    };
    snoc4 = function(cat) {
      return function(a) {
        return append2(cat)(new CatCons(a, empty7));
      };
    };
  }
});

// output/Control.Monad.Free/index.js
var $runtime_lazy8, Free, Return, Bind, toView, runFree, fromView, freeMonad, freeFunctor, freeBind, freeApplicative, $lazy_freeApply, freeApply;
var init_Control_Monad2 = __esm({
  "output/Control.Monad.Free/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control7();
    init_Control_Monad_Rec();
    init_Data52();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data29();
    init_Unsafe();
    $runtime_lazy8 = function(name2, moduleName, init3) {
      var state2 = 0;
      var val;
      return function(lineNumber) {
        if (state2 === 2)
          return val;
        if (state2 === 1)
          throw new ReferenceError(name2 + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state2 = 1;
        val = init3();
        state2 = 2;
        return val;
      };
    };
    Free = /* @__PURE__ */ function() {
      function Free2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Free2.create = function(value0) {
        return function(value1) {
          return new Free2(value0, value1);
        };
      };
      return Free2;
    }();
    Return = /* @__PURE__ */ function() {
      function Return2(value0) {
        this.value0 = value0;
      }
      ;
      Return2.create = function(value0) {
        return new Return2(value0);
      };
      return Return2;
    }();
    Bind = /* @__PURE__ */ function() {
      function Bind2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
      }
      ;
      Bind2.create = function(value0) {
        return function(value1) {
          return new Bind2(value0, value1);
        };
      };
      return Bind2;
    }();
    toView = function($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
        var runExpF = function(v22) {
          return v22;
        };
        var concatF = function(v22) {
          return function(r) {
            return new Free(v22.value0, append(semigroupCatList)(v22.value1)(r));
          };
        };
        if (v.value0 instanceof Return) {
          var v2 = uncons7(v.value1);
          if (v2 instanceof Nothing) {
            $tco_done = true;
            return new Return(v.value0.value0);
          }
          ;
          if (v2 instanceof Just) {
            $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
            return;
          }
          ;
          throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
        }
        ;
        if (v.value0 instanceof Bind) {
          $tco_done = true;
          return new Bind(v.value0.value0, function(a) {
            return concatF(v.value0.value1(a))(v.value1);
          });
        }
        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
      }
      ;
      while (!$tco_done) {
        $tco_result = $tco_loop($copy_v);
      }
      ;
      return $tco_result;
    };
    runFree = function(dictFunctor) {
      return function(k) {
        var go = function($copy_f) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(f) {
            var v = toView(f);
            if (v instanceof Return) {
              $tco_done = true;
              return v.value0;
            }
            ;
            if (v instanceof Bind) {
              $copy_f = k(map(dictFunctor)(v.value1)(v.value0));
              return;
            }
            ;
            throw new Error("Failed pattern match at Control.Monad.Free (line 178, column 10 - line 180, column 33): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($copy_f);
          }
          ;
          return $tco_result;
        };
        return go;
      };
    };
    fromView = function(f) {
      return new Free(f, empty8);
    };
    freeMonad = {
      Applicative0: function() {
        return freeApplicative;
      },
      Bind1: function() {
        return freeBind;
      }
    };
    freeFunctor = {
      map: function(k) {
        return function(f) {
          return bindFlipped(freeBind)(function() {
            var $119 = pure(freeApplicative);
            return function($120) {
              return $119(k($120));
            };
          }())(f);
        };
      }
    };
    freeBind = {
      bind: function(v) {
        return function(k) {
          return new Free(v.value0, snoc4(v.value1)(k));
        };
      },
      Apply0: function() {
        return $lazy_freeApply(0);
      }
    };
    freeApplicative = {
      pure: function($121) {
        return fromView(Return.create($121));
      },
      Apply0: function() {
        return $lazy_freeApply(0);
      }
    };
    $lazy_freeApply = /* @__PURE__ */ $runtime_lazy8("freeApply", "Control.Monad.Free", function() {
      return {
        apply: ap(freeMonad),
        Functor0: function() {
          return freeFunctor;
        }
      };
    });
    freeApply = /* @__PURE__ */ $lazy_freeApply(77);
  }
});

// output/Data.Bifoldable/index.js
var bifoldableTuple;
var init_Data53 = __esm({
  "output/Data.Bifoldable/index.js"() {
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data19();
    init_Data_Monoid();
    init_Data_Monoid2();
    init_Data_Monoid3();
    init_Data_Monoid4();
    init_Data23();
    init_Data7();
    init_Data3();
    bifoldableTuple = {
      bifoldMap: function(dictMonoid) {
        return function(f) {
          return function(g) {
            return function(v) {
              return append(dictMonoid.Semigroup0())(f(v.value0))(g(v.value1));
            };
          };
        };
      },
      bifoldr: function(f) {
        return function(g) {
          return function(z) {
            return function(v) {
              return f(v.value0)(g(v.value1)(z));
            };
          };
        };
      },
      bifoldl: function(f) {
        return function(g) {
          return function(z) {
            return function(v) {
              return g(f(z)(v.value0))(v.value1);
            };
          };
        };
      }
    };
  }
});

// output/Data.Functor.Clown/index.js
var init_Data_Functor8 = __esm({
  "output/Data.Functor.Clown/index.js"() {
    init_Control4();
    init_Control3();
    init_Data4();
    init_Data_Functor6();
    init_Data14();
  }
});

// output/Control.Biapply/index.js
var init_Control15 = __esm({
  "output/Control.Biapply/index.js"() {
    init_Control2();
    init_Data24();
    init_Data2();
    init_Data22();
  }
});

// output/Control.Biapplicative/index.js
var init_Control16 = __esm({
  "output/Control.Biapplicative/index.js"() {
    init_Control15();
    init_Data22();
  }
});

// output/Data.Functor.Flip/index.js
var init_Data_Functor9 = __esm({
  "output/Data.Functor.Flip/index.js"() {
    init_Control16();
    init_Control15();
    init_Control2();
    init_Control();
    init_Data24();
    init_Data35();
    init_Data14();
  }
});

// output/Data.Functor.Joker/index.js
var init_Data_Functor10 = __esm({
  "output/Data.Functor.Joker/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data16();
    init_Data4();
    init_Data23();
    init_Data14();
  }
});

// output/Data.Functor.Product2/index.js
var init_Data_Functor11 = __esm({
  "output/Data.Functor.Product2/index.js"() {
    init_Control16();
    init_Control15();
    init_Data24();
    init_Data8();
    init_Data4();
    init_Data12();
    init_Data9();
    init_Data35();
    init_Data14();
  }
});

// output/Data.Bitraversable/index.js
var bitraverse, ltraverse, bitraversableTuple;
var init_Data54 = __esm({
  "output/Data.Bitraversable/index.js"() {
    init_Control4();
    init_Control3();
    init_Control2();
    init_Data53();
    init_Data24();
    init_Data26();
    init_Data16();
    init_Data4();
    init_Data_Functor8();
    init_Data_Functor9();
    init_Data_Functor10();
    init_Data_Functor11();
    init_Data29();
    init_Data22();
    init_Data53();
    bitraverse = function(dict) {
      return dict.bitraverse;
    };
    ltraverse = function(dictBitraversable) {
      return function(dictApplicative) {
        return function(f) {
          return bitraverse(dictBitraversable)(dictApplicative)(f)(pure(dictApplicative));
        };
      };
    };
    bitraversableTuple = {
      bitraverse: function(dictApplicative) {
        return function(f) {
          return function(g) {
            return function(v) {
              return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(Tuple.create)(f(v.value0)))(g(v.value1));
            };
          };
        };
      },
      bisequence: function(dictApplicative) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(Tuple.create)(v.value0))(v.value1);
        };
      },
      Bifunctor0: function() {
        return bifunctorTuple;
      },
      Bifoldable1: function() {
        return bifoldableTuple;
      }
    };
  }
});

// output/PureScript.CST.Traversal/index.js
var traverseWrapped, traverseSeparated, traverseRecordUpdate, traverseRecordLabeled, traverseRecordAccessor, traversePatternGuard, traverseModuleBody, traverseModule, traverseLambda, traverseLabeled, traverseRow, traverseTypeVarBinding, traverseType, traverseIfThenElse, traverseWhere, traverseValueBindingFields, traverseLetBinding, traverseGuardedExpr, traverseGuarded, traverseInstanceBinding, traverseLetIn, traverseForeign, traverseDoStatement, traverseDoBlock, traverseDelimitedNonEmpty, traverseOneOrDelimited, traverseInstanceHead, traverseInstance, traverseDelimited, traverseDataHead, traverseDataCtor, traverseClassHead, traverseDecl, traverseCaseOf, traverseBinder, traverseAdoBlock, traverseExpr, defer3, topDownMonoidalTraversal, monoidalRewrite, foldMapBinder, foldMapModule, defaultMonoidalVisitor;
var init_PureScript_CST9 = __esm({
  "output/PureScript.CST.Traversal/index.js"() {
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control2();
    init_Control_Monad2();
    init_Control_Monad_Reader2();
    init_Data_Array_NonEmpty();
    init_Data54();
    init_Data26();
    init_Data2();
    init_Data4();
    init_Data_Functor4();
    init_Data20();
    init_Data19();
    init_Data23();
    init_Data29();
    init_Data22();
    init_Data3();
    init_PureScript_CST();
    traverseWrapped = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(function(value) {
            return {
              open: v.open,
              value,
              close: v.close
            };
          })(k(v.value));
        };
      };
    };
    traverseSeparated = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v1) {
            return function(v2) {
              return {
                head: v1,
                tail: v2
              };
            };
          })(k(v.head)))(traverse(traversableArray)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(k))(v.tail));
        };
      };
    };
    traverseRecordUpdate = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof RecordUpdateLeaf) {
            return map(dictApplicative.Apply0().Functor0())(RecordUpdateLeaf.create(v.value0)(v.value1))(k.onExpr(v.value2));
          }
          ;
          if (v instanceof RecordUpdateBranch) {
            return map(dictApplicative.Apply0().Functor0())(RecordUpdateBranch.create(v.value0))(traverseWrapped(dictApplicative)(traverseSeparated(dictApplicative)(traverseRecordUpdate(dictApplicative)(k)))(v.value1));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 409, column 26 - line 411, column 146): " + [v.constructor.name]);
        };
      };
    };
    traverseRecordLabeled = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof RecordPun) {
            return pure(dictApplicative)(new RecordPun(v.value0));
          }
          ;
          if (v instanceof RecordField) {
            return map(dictApplicative.Apply0().Functor0())(RecordField.create(v.value0)(v.value1))(k(v.value2));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 384, column 27 - line 386, column 57): " + [v.constructor.name]);
        };
      };
    };
    traverseRecordAccessor = function(dictApplicative) {
      return function(k) {
        return function(r) {
          return map(dictApplicative.Apply0().Functor0())(function(v) {
            return {
              expr: v,
              dot: r.dot,
              path: r.path
            };
          })(k.onExpr(r.expr));
        };
      };
    };
    traversePatternGuard = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(binder) {
            return function(expr) {
              return {
                binder,
                expr
              };
            };
          })(traverse(traversableMaybe)(dictApplicative)(ltraverse(bitraversableTuple)(dictApplicative)(k.onBinder))(v.binder)))(k.onExpr(v.expr));
        };
      };
    };
    traverseModuleBody = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(function(decls) {
            return {
              decls,
              trailingComments: v.trailingComments,
              end: v.end
            };
          })(traverse(traversableArray)(dictApplicative)(k.onDecl)(v.decls));
        };
      };
    };
    traverseModule = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(function(body) {
            return {
              header: v.header,
              body
            };
          })(traverseModuleBody(dictApplicative)(k)(v.body));
        };
      };
    };
    traverseLambda = function(dictApplicative) {
      return function(k) {
        return function(l) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                binders: v,
                body: v1,
                arrow: l.arrow,
                symbol: l.symbol
              };
            };
          })(traverse(traversableNonEmptyArray)(dictApplicative)(k.onBinder)(l.binders)))(k.onExpr(l.body));
        };
      };
    };
    traverseLabeled = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(function(value) {
            return {
              label: v.label,
              separator: v.separator,
              value
            };
          })(k(v.value));
        };
      };
    };
    traverseRow = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(labels) {
            return function(tail2) {
              return {
                labels,
                tail: tail2
              };
            };
          })(traverse(traversableMaybe)(dictApplicative)(traverseSeparated(dictApplicative)(traverseLabeled(dictApplicative)(k.onType)))(v.labels)))(traverse(traversableMaybe)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(k.onType))(v.tail));
        };
      };
    };
    traverseTypeVarBinding = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof TypeVarKinded) {
            return map(dictApplicative.Apply0().Functor0())(TypeVarKinded.create)(traverseWrapped(dictApplicative)(traverseLabeled(dictApplicative)(k.onType))(v.value0));
          }
          ;
          if (v instanceof TypeVarName) {
            return pure(dictApplicative)(new TypeVarName(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 319, column 28 - line 321, column 46): " + [v.constructor.name]);
        };
      };
    };
    traverseType = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof TypeRow) {
            return map(dictApplicative.Apply0().Functor0())(TypeRow.create)(traverseWrapped(dictApplicative)(traverseRow(dictApplicative)(k))(v.value0));
          }
          ;
          if (v instanceof TypeRecord) {
            return map(dictApplicative.Apply0().Functor0())(TypeRecord.create)(traverseWrapped(dictApplicative)(traverseRow(dictApplicative)(k))(v.value0));
          }
          ;
          if (v instanceof TypeForall) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(TypeForall.create(v.value0))(traverse(traversableNonEmptyArray)(dictApplicative)(traverseTypeVarBinding(dictApplicative)(k))(v.value1)))(v.value2))(k.onType(v.value3));
          }
          ;
          if (v instanceof TypeKinded) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(TypeKinded.create)(k.onType(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof TypeApp) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(TypeApp.create)(k.onType(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(k.onType)(v.value1));
          }
          ;
          if (v instanceof TypeOp) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(TypeOp.create)(k.onType(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(k.onType))(v.value1));
          }
          ;
          if (v instanceof TypeArrow) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(TypeArrow.create)(k.onType(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof TypeConstrained) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(TypeConstrained.create)(k.onType(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof TypeParens) {
            return map(dictApplicative.Apply0().Functor0())(TypeParens.create)(traverseWrapped(dictApplicative)(k.onType)(v.value0));
          }
          ;
          return pure(dictApplicative)(v);
        };
      };
    };
    traverseIfThenElse = function(dictApplicative) {
      return function(k) {
        return function(r) {
          return apply(dictApplicative.Apply0())(apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return function(v2) {
                return {
                  cond: v,
                  "true": v1,
                  "false": v2,
                  "else": r["else"],
                  keyword: r.keyword,
                  then: r.then
                };
              };
            };
          })(k.onExpr(r.cond)))(k.onExpr(r["true"])))(k.onExpr(r["false"]));
        };
      };
    };
    traverseWhere = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(expr) {
            return function(bindings) {
              return {
                expr,
                bindings
              };
            };
          })(k.onExpr(v.expr)))(traverse(traversableMaybe)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(traverse(traversableNonEmptyArray)(dictApplicative)(traverseLetBinding(dictApplicative)(k))))(v.bindings));
        };
      };
    };
    traverseValueBindingFields = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v1) {
            return function(v2) {
              return {
                binders: v1,
                guarded: v2,
                name: v.name
              };
            };
          })(traverse(traversableArray)(dictApplicative)(k.onBinder)(v.binders)))(traverseGuarded(dictApplicative)(k)(v.guarded));
        };
      };
    };
    traverseLetBinding = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof LetBindingSignature) {
            return map(dictApplicative.Apply0().Functor0())(LetBindingSignature.create)(traverseLabeled(dictApplicative)(k.onType)(v.value0));
          }
          ;
          if (v instanceof LetBindingName) {
            return map(dictApplicative.Apply0().Functor0())(LetBindingName.create)(traverseValueBindingFields(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof LetBindingPattern) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(LetBindingPattern.create)(k.onBinder(v.value0)))(v.value1))(traverseWhere(dictApplicative)(k)(v.value2));
          }
          ;
          if (v instanceof LetBindingError) {
            return pure(dictApplicative)(new LetBindingError(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 488, column 24 - line 492, column 48): " + [v.constructor.name]);
        };
      };
    };
    traverseGuardedExpr = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(ps) {
            return function(wh) {
              return {
                bar: v.bar,
                patterns: ps,
                separator: v.separator,
                where: wh
              };
            };
          })(traverseSeparated(dictApplicative)(traversePatternGuard(dictApplicative)(k))(v.patterns)))(traverseWhere(dictApplicative)(k)(v.where));
        };
      };
    };
    traverseGuarded = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof Unconditional) {
            return map(dictApplicative.Apply0().Functor0())(Unconditional.create(v.value0))(traverseWhere(dictApplicative)(k)(v.value1));
          }
          ;
          if (v instanceof Guarded) {
            return map(dictApplicative.Apply0().Functor0())(Guarded.create)(traverse(traversableNonEmptyArray)(dictApplicative)(traverseGuardedExpr(dictApplicative)(k))(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 449, column 21 - line 451, column 72): " + [v.constructor.name]);
        };
      };
    };
    traverseInstanceBinding = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof InstanceBindingSignature) {
            return map(dictApplicative.Apply0().Functor0())(InstanceBindingSignature.create)(traverseLabeled(dictApplicative)(k.onType)(v.value0));
          }
          ;
          if (v instanceof InstanceBindingName) {
            return map(dictApplicative.Apply0().Functor0())(InstanceBindingName.create)(traverseValueBindingFields(dictApplicative)(k)(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 246, column 29 - line 248, column 92): " + [v.constructor.name]);
        };
      };
    };
    traverseLetIn = function(dictApplicative) {
      return function(k) {
        return function(l) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                bindings: v,
                body: v1,
                "in": l["in"],
                keyword: l.keyword
              };
            };
          })(traverse(traversableNonEmptyArray)(dictApplicative)(traverseLetBinding(dictApplicative)(k))(l.bindings)))(k.onExpr(l.body));
        };
      };
    };
    traverseForeign = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof ForeignValue) {
            return map(dictApplicative.Apply0().Functor0())(ForeignValue.create)(traverseLabeled(dictApplicative)(k.onType)(v.value0));
          }
          ;
          if (v instanceof ForeignData) {
            return map(dictApplicative.Apply0().Functor0())(ForeignData.create(v.value0))(traverseLabeled(dictApplicative)(k.onType)(v.value1));
          }
          ;
          if (v instanceof ForeignKind) {
            return pure(dictApplicative)(v);
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 216, column 21 - line 219, column 40): " + [v.constructor.name]);
        };
      };
    };
    traverseDoStatement = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof DoLet) {
            return map(dictApplicative.Apply0().Functor0())(DoLet.create(v.value0))(traverse(traversableNonEmptyArray)(dictApplicative)(traverseLetBinding(dictApplicative)(k))(v.value1));
          }
          ;
          if (v instanceof DoDiscard) {
            return map(dictApplicative.Apply0().Functor0())(DoDiscard.create)(k.onExpr(v.value0));
          }
          ;
          if (v instanceof DoBind) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(DoBind.create)(k.onBinder(v.value0)))(v.value1))(k.onExpr(v.value2));
          }
          ;
          if (v instanceof DoError) {
            return pure(dictApplicative)(new DoError(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 519, column 25 - line 523, column 32): " + [v.constructor.name]);
        };
      };
    };
    traverseDoBlock = function(dictApplicative) {
      return function(k) {
        return function(d) {
          return map(dictApplicative.Apply0().Functor0())(function(v) {
            return {
              statements: v,
              keyword: d.keyword
            };
          })(traverse(traversableNonEmptyArray)(dictApplicative)(traverseDoStatement(dictApplicative)(k))(d.statements));
        };
      };
    };
    traverseDelimitedNonEmpty = function(dictApplicative) {
      return function(k) {
        return traverseWrapped(dictApplicative)(traverseSeparated(dictApplicative)(k));
      };
    };
    traverseOneOrDelimited = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof One) {
            return map(dictApplicative.Apply0().Functor0())(One.create)(k(v.value0));
          }
          ;
          if (v instanceof Many) {
            return map(dictApplicative.Apply0().Functor0())(Many.create)(traverseDelimitedNonEmpty(dictApplicative)(k)(v.value0));
          }
          ;
          throw new Error("Failed pattern match at PureScript.CST.Traversal (line 265, column 28 - line 267, column 55): " + [v.constructor.name]);
        };
      };
    };
    traverseInstanceHead = function(dictApplicative) {
      return function(k) {
        return function(head4) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                constraints: v,
                types: v1,
                className: head4.className,
                keyword: head4.keyword,
                name: head4.name
              };
            };
          })(traverse(traversableMaybe)(dictApplicative)(ltraverse(bitraversableTuple)(dictApplicative)(traverseOneOrDelimited(dictApplicative)(k.onType)))(head4.constraints)))(traverse(traversableArray)(dictApplicative)(k.onType)(head4.types));
        };
      };
    };
    traverseInstance = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(head4) {
            return function(body) {
              return {
                head: head4,
                body
              };
            };
          })(traverseInstanceHead(dictApplicative)(k)(v.head)))(traverse(traversableMaybe)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(traverse(traversableNonEmptyArray)(dictApplicative)(traverseInstanceBinding(dictApplicative)(k))))(v.body));
        };
      };
    };
    traverseDelimited = function(dictApplicative) {
      return function(k) {
        return traverseWrapped(dictApplicative)(traverse(traversableMaybe)(dictApplicative)(traverseSeparated(dictApplicative)(k)));
      };
    };
    traverseDataHead = function(dictApplicative) {
      return function(k) {
        return function(head4) {
          return map(dictApplicative.Apply0().Functor0())(function(v) {
            return {
              vars: v,
              keyword: head4.keyword,
              name: head4.name
            };
          })(traverse(traversableArray)(dictApplicative)(traverseTypeVarBinding(dictApplicative)(k))(head4.vars));
        };
      };
    };
    traverseDataCtor = function(dictApplicative) {
      return function(k) {
        return function(v) {
          return map(dictApplicative.Apply0().Functor0())(function(fields) {
            return {
              name: v.name,
              fields
            };
          })(traverse(traversableArray)(dictApplicative)(k.onType)(v.fields));
        };
      };
    };
    traverseClassHead = function(dictApplicative) {
      return function(k) {
        return function(head4) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                "super": v,
                vars: v1,
                fundeps: head4.fundeps,
                keyword: head4.keyword,
                name: head4.name
              };
            };
          })(traverse(traversableMaybe)(dictApplicative)(ltraverse(bitraversableTuple)(dictApplicative)(traverseOneOrDelimited(dictApplicative)(k.onType)))(head4["super"])))(traverse(traversableArray)(dictApplicative)(traverseTypeVarBinding(dictApplicative)(k))(head4.vars));
        };
      };
    };
    traverseDecl = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof DeclData) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(DeclData.create)(traverseDataHead(dictApplicative)(k)(v.value0)))(traverse(traversableMaybe)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(traverseSeparated(dictApplicative)(traverseDataCtor(dictApplicative)(k))))(v.value1));
          }
          ;
          if (v instanceof DeclType2) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(DeclType2.create)(traverseDataHead(dictApplicative)(k)(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof DeclNewtype) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(DeclNewtype.create)(traverseDataHead(dictApplicative)(k)(v.value0)))(v.value1))(v.value2))(k.onType(v.value3));
          }
          ;
          if (v instanceof DeclClass) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(DeclClass.create)(traverseClassHead(dictApplicative)(k)(v.value0)))(traverse(traversableMaybe)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(traverse(traversableNonEmptyArray)(dictApplicative)(traverseLabeled(dictApplicative)(k.onType))))(v.value1));
          }
          ;
          if (v instanceof DeclInstanceChain) {
            return map(dictApplicative.Apply0().Functor0())(DeclInstanceChain.create)(traverseSeparated(dictApplicative)(traverseInstance(dictApplicative)(k))(v.value0));
          }
          ;
          if (v instanceof DeclDerive) {
            return map(dictApplicative.Apply0().Functor0())(DeclDerive.create(v.value0)(v.value1))(traverseInstanceHead(dictApplicative)(k)(v.value2));
          }
          ;
          if (v instanceof DeclKindSignature) {
            return map(dictApplicative.Apply0().Functor0())(DeclKindSignature.create(v.value0))(traverseLabeled(dictApplicative)(k.onType)(v.value1));
          }
          ;
          if (v instanceof DeclSignature) {
            return map(dictApplicative.Apply0().Functor0())(DeclSignature.create)(traverseLabeled(dictApplicative)(k.onType)(v.value0));
          }
          ;
          if (v instanceof DeclValue2) {
            return map(dictApplicative.Apply0().Functor0())(DeclValue2.create)(traverseValueBindingFields(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof DeclForeign) {
            return map(dictApplicative.Apply0().Functor0())(DeclForeign.create(v.value0)(v.value1))(traverseForeign(dictApplicative)(k)(v.value2));
          }
          ;
          return pure(dictApplicative)(v);
        };
      };
    };
    traverseCaseOf = function(dictApplicative) {
      return function(k) {
        return function(r) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                head: v,
                branches: v1,
                keyword: r.keyword,
                of: r.of
              };
            };
          })(traverseSeparated(dictApplicative)(k.onExpr)(r.head)))(traverse(traversableNonEmptyArray)(dictApplicative)(bitraverse(bitraversableTuple)(dictApplicative)(traverseSeparated(dictApplicative)(k.onBinder))(traverseGuarded(dictApplicative)(k)))(r.branches));
        };
      };
    };
    traverseBinder = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof BinderNamed) {
            return map(dictApplicative.Apply0().Functor0())(BinderNamed.create(v.value0)(v.value1))(k.onBinder(v.value2));
          }
          ;
          if (v instanceof BinderConstructor) {
            return map(dictApplicative.Apply0().Functor0())(BinderConstructor.create(v.value0))(traverse(traversableArray)(dictApplicative)(k.onBinder)(v.value1));
          }
          ;
          if (v instanceof BinderArray) {
            return map(dictApplicative.Apply0().Functor0())(BinderArray.create)(traverseDelimited(dictApplicative)(k.onBinder)(v.value0));
          }
          ;
          if (v instanceof BinderRecord) {
            return map(dictApplicative.Apply0().Functor0())(BinderRecord.create)(traverseDelimited(dictApplicative)(traverseRecordLabeled(dictApplicative)(k.onBinder))(v.value0));
          }
          ;
          if (v instanceof BinderParens) {
            return map(dictApplicative.Apply0().Functor0())(BinderParens.create)(traverseWrapped(dictApplicative)(k.onBinder)(v.value0));
          }
          ;
          if (v instanceof BinderTyped) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(BinderTyped.create)(k.onBinder(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof BinderOp) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(BinderOp.create)(k.onBinder(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(k.onBinder))(v.value1));
          }
          ;
          return pure(dictApplicative)(v);
        };
      };
    };
    traverseAdoBlock = function(dictApplicative) {
      return function(k) {
        return function(a) {
          return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(function(v) {
            return function(v1) {
              return {
                statements: v,
                result: v1,
                "in": a["in"],
                keyword: a.keyword
              };
            };
          })(traverse(traversableArray)(dictApplicative)(traverseDoStatement(dictApplicative)(k))(a.statements)))(k.onExpr(a.result));
        };
      };
    };
    traverseExpr = function(dictApplicative) {
      return function(k) {
        return function(v) {
          if (v instanceof ExprArray) {
            return map(dictApplicative.Apply0().Functor0())(ExprArray.create)(traverseDelimited(dictApplicative)(k.onExpr)(v.value0));
          }
          ;
          if (v instanceof ExprRecord) {
            return map(dictApplicative.Apply0().Functor0())(ExprRecord.create)(traverseDelimited(dictApplicative)(traverseRecordLabeled(dictApplicative)(k.onExpr))(v.value0));
          }
          ;
          if (v instanceof ExprParens) {
            return map(dictApplicative.Apply0().Functor0())(ExprParens.create)(traverseWrapped(dictApplicative)(k.onExpr)(v.value0));
          }
          ;
          if (v instanceof ExprTyped) {
            return apply(dictApplicative.Apply0())(flap(dictApplicative.Apply0().Functor0())(map(dictApplicative.Apply0().Functor0())(ExprTyped.create)(k.onExpr(v.value0)))(v.value1))(k.onType(v.value2));
          }
          ;
          if (v instanceof ExprInfix) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(ExprInfix.create)(k.onExpr(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(bitraverse(bitraversableTuple)(dictApplicative)(traverseWrapped(dictApplicative)(k.onExpr))(k.onExpr))(v.value1));
          }
          ;
          if (v instanceof ExprOp) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(ExprOp.create)(k.onExpr(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(traverse(traversableTuple)(dictApplicative)(k.onExpr))(v.value1));
          }
          ;
          if (v instanceof ExprNegate) {
            return map(dictApplicative.Apply0().Functor0())(ExprNegate.create(v.value0))(k.onExpr(v.value1));
          }
          ;
          if (v instanceof ExprRecordAccessor) {
            return map(dictApplicative.Apply0().Functor0())(ExprRecordAccessor.create)(traverseRecordAccessor(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprRecordUpdate) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(ExprRecordUpdate.create)(k.onExpr(v.value0)))(traverseWrapped(dictApplicative)(traverseSeparated(dictApplicative)(traverseRecordUpdate(dictApplicative)(k)))(v.value1));
          }
          ;
          if (v instanceof ExprApp) {
            return apply(dictApplicative.Apply0())(map(dictApplicative.Apply0().Functor0())(ExprApp.create)(k.onExpr(v.value0)))(traverse(traversableNonEmptyArray)(dictApplicative)(k.onExpr)(v.value1));
          }
          ;
          if (v instanceof ExprLambda) {
            return map(dictApplicative.Apply0().Functor0())(ExprLambda.create)(traverseLambda(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprIf) {
            return map(dictApplicative.Apply0().Functor0())(ExprIf.create)(traverseIfThenElse(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprCase) {
            return map(dictApplicative.Apply0().Functor0())(ExprCase.create)(traverseCaseOf(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprLet) {
            return map(dictApplicative.Apply0().Functor0())(ExprLet.create)(traverseLetIn(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprDo) {
            return map(dictApplicative.Apply0().Functor0())(ExprDo.create)(traverseDoBlock(dictApplicative)(k)(v.value0));
          }
          ;
          if (v instanceof ExprAdo) {
            return map(dictApplicative.Apply0().Functor0())(ExprAdo.create)(traverseAdoBlock(dictApplicative)(k)(v.value0));
          }
          ;
          return pure(dictApplicative)(v);
        };
      };
    };
    defer3 = function(dictMonad) {
      return function(v) {
        return bind(dictMonad.Bind1())(pure(dictMonad.Applicative0())(unit))(v);
      };
    };
    topDownMonoidalTraversal = function(dictMonoid) {
      return function(visitor) {
        var visitor$prime = {
          onBinder: function(a) {
            return apply(applyCompose(freeApply)(applyConst(dictMonoid.Semigroup0())))(pure(freeApplicative)(visitor.onBinder(a)))(defer3(freeMonad)(function(v) {
              return un()(Compose)(traverseBinder(applicativeCompose(freeApplicative)(applicativeConst(dictMonoid)))(visitor$prime)(a));
            }));
          },
          onExpr: function(a) {
            return apply(applyCompose(freeApply)(applyConst(dictMonoid.Semigroup0())))(pure(freeApplicative)(visitor.onExpr(a)))(defer3(freeMonad)(function(v) {
              return un()(Compose)(traverseExpr(applicativeCompose(freeApplicative)(applicativeConst(dictMonoid)))(visitor$prime)(a));
            }));
          },
          onDecl: function(a) {
            return apply(applyCompose(freeApply)(applyConst(dictMonoid.Semigroup0())))(pure(freeApplicative)(visitor.onDecl(a)))(defer3(freeMonad)(function(v) {
              return un()(Compose)(traverseDecl(applicativeCompose(freeApplicative)(applicativeConst(dictMonoid)))(visitor$prime)(a));
            }));
          },
          onType: function(a) {
            return apply(applyCompose(freeApply)(applyConst(dictMonoid.Semigroup0())))(pure(freeApplicative)(visitor.onType(a)))(defer3(freeMonad)(function(v) {
              return un()(Compose)(traverseType(applicativeCompose(freeApplicative)(applicativeConst(dictMonoid)))(visitor$prime)(a));
            }));
          }
        };
        return visitor$prime;
      };
    };
    monoidalRewrite = function(dictMonoid) {
      return function(traversal) {
        return function(visitor) {
          return function(g) {
            var visitor$prime = topDownMonoidalTraversal(dictMonoid)(visitor);
            return un()(Const)(runFree(functorIdentity)(un()(Identity))(un()(Compose)(traversal(visitor$prime)(g))));
          };
        };
      };
    };
    foldMapBinder = function(dictMonoid) {
      return monoidalRewrite(dictMonoid)(function(v) {
        return v.onBinder;
      });
    };
    foldMapModule = function(dictMonoid) {
      return monoidalRewrite(dictMonoid)(traverseModule(applicativeCompose(freeApplicative)(applicativeConst(dictMonoid))));
    };
    defaultMonoidalVisitor = function(dictMonoid) {
      return {
        onBinder: mempty(monoidFn(dictMonoid)),
        onDecl: mempty(monoidFn(dictMonoid)),
        onExpr: mempty(monoidFn(dictMonoid)),
        onType: mempty(monoidFn(dictMonoid))
      };
    };
  }
});

// output/LanguageServer.IdePurescript.CodeLens.ExportManagement/index.js
var WithConstructors, NoConstructors, semigroupDeclNameInfo, eqDeclConstructorInfo, withConstructors, printExports, printExport, getDeclNameInfo, formatDeclName, exportsToArray, mkCodeLenses, exportManagementCodeLenses;
var init_LanguageServer_IdePurescript_CodeLens = __esm({
  "output/LanguageServer.IdePurescript.CodeLens.ExportManagement/index.js"() {
    init_Control4();
    init_Data39();
    init_Data8();
    init_Data25();
    init_Data4();
    init_Data_List();
    init_Data50();
    init_Data_Map();
    init_Data15();
    init_Data19();
    init_Data41();
    init_Data12();
    init_Data7();
    init_Data22();
    init_Effect6();
    init_Foreign();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_IdePurescript_Util();
    init_LanguageServer_Protocol3();
    init_PureScript();
    init_PureScript_CST9();
    init_PureScript_CST();
    WithConstructors = /* @__PURE__ */ function() {
      function WithConstructors2() {
      }
      ;
      WithConstructors2.value = new WithConstructors2();
      return WithConstructors2;
    }();
    NoConstructors = /* @__PURE__ */ function() {
      function NoConstructors2() {
      }
      ;
      NoConstructors2.value = new NoConstructors2();
      return NoConstructors2;
    }();
    semigroupDeclNameInfo = {
      append: function(sr1) {
        return function(v) {
          return sr1;
        };
      }
    };
    eqDeclConstructorInfo = {
      eq: function(x) {
        return function(y) {
          if (x instanceof WithConstructors && y instanceof WithConstructors) {
            return true;
          }
          ;
          if (x instanceof NoConstructors && y instanceof NoConstructors) {
            return true;
          }
          ;
          return false;
        };
      }
    };
    withConstructors = function(s) {
      return s + "(..)";
    };
    printExports = function(exports2) {
      return "\n  ( " + (intercalate3(monoidString)("\n  , ")(sort(ordString)(exports2)) + "\n  )\n  ");
    };
    printExport = function(v) {
      if (v instanceof ExportOp) {
        return new Just("(" + (v.value0.name + ")"));
      }
      ;
      if (v instanceof ExportType) {
        return new Just(v.value0.name + guard(monoidString)(isJust(v.value1))("(..)"));
      }
      ;
      if (v instanceof ExportTypeOp) {
        return new Just("type (" + (v.value1.name + ")"));
      }
      ;
      if (v instanceof ExportClass) {
        return new Just("class " + v.value1.name);
      }
      ;
      if (v instanceof ExportModule) {
        return new Just("module " + v.value1.name);
      }
      ;
      if (v instanceof ExportValue) {
        return new Just(v.value0.name);
      }
      ;
      if (v instanceof ExportError) {
        return Nothing.value;
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLens.ExportManagement (line 56, column 15 - line 68, column 31): " + [v.constructor.name]);
    };
    getDeclNameInfo = /* @__PURE__ */ function() {
      var entry = function(name2) {
        return function(range3) {
          return function(ctors) {
            return singleton6(name2)({
              range: sourceRangeToRange(range3),
              ctors,
              name: name2
            });
          };
        };
      };
      return foldMapModule(monoidSemigroupMap(ordString)(semigroupDeclNameInfo))({
        onBinder: defaultMonoidalVisitor(monoidSemigroupMap(ordString)(semigroupDeclNameInfo)).onBinder,
        onDecl: function(v1) {
          if (v1 instanceof DeclSignature) {
            return entry(v1.value0.label.name)(v1.value0.label.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclKindSignature && (v1.value0.value instanceof TokLowerName && (v1.value0.value.value0 instanceof Nothing && v1.value0.value.value1 === "class"))) {
            return entry("class " + v1.value1.label.name)(v1.value1.label.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclKindSignature) {
            return entry(v1.value1.label.name)(v1.value1.label.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclValue2) {
            return entry(v1.value0.name.name)(v1.value0.name.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclData) {
            return entry(v1.value0.name.name)(v1.value0.name.token.range)(WithConstructors.value);
          }
          ;
          if (v1 instanceof DeclNewtype) {
            return entry(v1.value0.name.name)(v1.value0.name.token.range)(WithConstructors.value);
          }
          ;
          if (v1 instanceof DeclType2) {
            return entry(v1.value0.name.name)(v1.value0.name.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclClass) {
            return entry("class " + v1.value0.name.name)(v1.value0.name.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclFixity && v1.value0.operator instanceof FixityValue) {
            return entry("(" + (v1.value0.operator.value2.name + ")"))(v1.value0.operator.value2.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclFixity && v1.value0.operator instanceof FixityType) {
            return entry("type (" + (v1.value0.operator.value3.name + ")"))(v1.value0.operator.value3.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclForeign && v1.value2 instanceof ForeignValue) {
            return entry(v1.value2.value0.label.name)(v1.value2.value0.label.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclForeign && v1.value2 instanceof ForeignData) {
            return entry(v1.value2.value1.label.name)(v1.value2.value1.label.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclForeign && v1.value2 instanceof ForeignKind) {
            return entry(v1.value2.value1.name)(v1.value2.value1.token.range)(NoConstructors.value);
          }
          ;
          if (v1 instanceof DeclInstanceChain) {
            return mempty(monoidSemigroupMap(ordString)(semigroupDeclNameInfo));
          }
          ;
          if (v1 instanceof DeclDerive) {
            return mempty(monoidSemigroupMap(ordString)(semigroupDeclNameInfo));
          }
          ;
          if (v1 instanceof DeclRole) {
            return mempty(monoidSemigroupMap(ordString)(semigroupDeclNameInfo));
          }
          ;
          if (v1 instanceof DeclError) {
            return mempty(monoidSemigroupMap(ordString)(semigroupDeclNameInfo));
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLens.ExportManagement (line 94, column 13 - line 148, column 40): " + [v1.constructor.name]);
        },
        onExpr: defaultMonoidalVisitor(monoidSemigroupMap(ordString)(semigroupDeclNameInfo)).onExpr,
        onType: defaultMonoidalVisitor(monoidSemigroupMap(ordString)(semigroupDeclNameInfo)).onType
      });
    }();
    formatDeclName = function(v) {
      if (v.ctors instanceof NoConstructors) {
        return v.name;
      }
      ;
      if (v.ctors instanceof WithConstructors) {
        return v.name + "(..)";
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLens.ExportManagement (line 80, column 49 - line 82, column 37): " + [v.ctors.constructor.name]);
    };
    exportsToArray = function(v) {
      return cons2(v.head)(map(functorArray)(snd)(v.tail));
    };
    mkCodeLenses = function(uri) {
      return function(v) {
        var mkCodeLensResult = function(codeLensRange) {
          return function(replaceCommand) {
            return {
              range: codeLensRange,
              command: notNull(replaceCommand),
              data: unsafeToForeign(nullImpl)
            };
          };
        };
        var start = sourcePosToPosition(v.header.name.token.range.end);
        var noExplicitExports = isNothing(v.header.exports);
        var exportArray = function() {
          if (v.header.exports instanceof Nothing) {
            return [];
          }
          ;
          if (v.header.exports instanceof Just) {
            return exportsToArray(v.header.exports.value0.value);
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLens.ExportManagement (line 176, column 19 - line 182, column 45): " + [v.header.exports.constructor.name]);
        }();
        var exportNames = mapMaybe2(printExport)(exportArray);
        var end2 = sourcePosToPosition(v.header.where.range.start);
        var exportsRange = {
          start,
          end: end2
        };
        var v1 = getDeclNameInfo(v);
        var moduleLens = function() {
          if (noExplicitExports) {
            return new Just(mkCodeLensResult(sourceRangeToRange(v.header.keyword.range))(replaceSuggestion("implicit module exports - make all explicit")(uri)(printExports(fromFoldable2(foldableList)(map(functorList)(formatDeclName)(values(v1)))))(exportsRange)));
          }
          ;
          return Nothing.value;
        }();
        var declToCodeLens = function(v2) {
          var replace3 = function(title) {
            return function(exps) {
              return singleton5(mkCodeLensResult(v2.range)(replaceSuggestion(title)(uri)(printExports(exps))(exportsRange)));
            };
          };
          var exported = elem2(eqString)(v2.name)(exportNames);
          if (noExplicitExports) {
            return append(semigroupArray)(replace3("exported (export only this)")([v2.name]))(replace3("(export everything else)")($$delete(eqString)(v2.name)(fromFoldable2(foldableList)(map(functorList)(formatDeclName)(values(v1))))));
          }
          ;
          var $143 = eq(eqDeclConstructorInfo)(v2.ctors)(WithConstructors.value) && elem2(eqString)(withConstructors(v2.name))(exportNames);
          if ($143) {
            var otherNames = $$delete(eqString)(withConstructors(v2.name))(exportNames);
            return append(semigroupArray)(replace3("exported with constructors (export only type)")(cons2(v2.name)(otherNames)))(replace3("(remove from exports)")(otherNames));
          }
          ;
          var $144 = eq(eqDeclConstructorInfo)(v2.ctors)(WithConstructors.value) && exported;
          if ($144) {
            var otherNames = $$delete(eqString)(v2.name)(exportNames);
            return append(semigroupArray)(replace3("exported without constructors (export constructors)")(cons2(withConstructors(v2.name))(otherNames)))(replace3("(remove from exports)")(otherNames));
          }
          ;
          if (exported) {
            return replace3("exported (remove from exports)")($$delete(eqString)(v2.name)(exportNames));
          }
          ;
          return replace3("private (add to exports)")(snoc2(exportNames)(formatDeclName(v2)));
        };
        var privatePublicCodeLenses = foldMap(foldableList)(monoidArray)(declToCodeLens)(values(v1));
        return append(semigroupArray)(fromFoldable2(foldableMaybe)(moduleLens))(privatePublicCodeLenses);
      };
    };
    exportManagementCodeLenses = function(_documentStore) {
      return function(_settings) {
        return function(v) {
          return function(uri) {
            var v1 = map(functorMaybe)(function(v2) {
              return v2.parsed;
            })(lookup(ordDocumentUri)(uri)(v.parsedModules));
            if (v1 instanceof Just && v1.value0 instanceof ParseSucceeded) {
              return pure(applicativeAff)(mkCodeLenses(uri)(v1.value0.value0));
            }
            ;
            if (v1 instanceof Just && v1.value0 instanceof ParseSucceededWithErrors) {
              return pure(applicativeAff)(mkCodeLenses(uri)(v1.value0.value0));
            }
            ;
            return pure(applicativeAff)([]);
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Util/index.js
var maybeParseResult, launchAffLog;
var init_LanguageServer_IdePurescript11 = __esm({
  "output/LanguageServer.IdePurescript.Util/index.js"() {
    init_Control4();
    init_Data16();
    init_Data2();
    init_Data14();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect2();
    init_IdePurescript3();
    init_PureScript();
    init_PureScript_CST8();
    maybeParseResult = function($$default) {
      return function(f) {
        return function(v) {
          if (v instanceof ParseSucceeded) {
            return f(rangeOfVoid)(tokensOfVoid)(v.value0);
          }
          ;
          if (v instanceof ParseSucceededWithErrors) {
            return f(rangeOfRecoveredError)(tokensOfRecoveredError)(v.value0);
          }
          ;
          if (v instanceof ParseFailed) {
            return $$default;
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Util (line 27, column 3 - line 30, column 32): " + [v.constructor.name]);
        };
      };
    };
    launchAffLog = function(notify) {
      return runAff(either(function() {
        var $6 = notify($$Error.value);
        var $7 = show(showError);
        return function($8) {
          return $6($7($8));
        };
      }())($$const(pure(applicativeEffect)(unit))));
    };
  }
});

// output/LanguageServer.IdePurescript.CodeLens.TopLevelDeclarations/index.js
var getDecls, ensureSpaceAfterFirstLine, topLevelDeclarationLenses;
var init_LanguageServer_IdePurescript_CodeLens2 = __esm({
  "output/LanguageServer.IdePurescript.CodeLens.TopLevelDeclarations/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data25();
    init_Data4();
    init_Data_Map();
    init_Data15();
    init_Data41();
    init_Data12();
    init_Data48();
    init_Data_String3();
    init_Data_String6();
    init_Effect6();
    init_Foreign();
    init_IdePurescript2();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_IdePurescript11();
    init_LanguageServer_Protocol3();
    init_PureScript_CST();
    getDecls = function(v) {
      var sig = function(v1) {
        if (v1 instanceof DeclSignature) {
          return new Just(v1.value0.label.name);
        }
        ;
        return Nothing.value;
      };
      var signatures = fromFoldable5(foldableArray)(ordString)(mapMaybe2(sig)(v.body.decls));
      var go = function(v1) {
        if (v1 instanceof DeclValue2 && (v1.value0.guarded instanceof Unconditional && (v1.value0.guarded.value1.expr instanceof ExprTyped && v1.value0.guarded.value1.bindings instanceof Nothing))) {
          return Nothing.value;
        }
        ;
        if (v1 instanceof DeclValue2 && !member3(ordString)(v1.value0.name.name)(signatures)) {
          return new Just({
            name: v1.value0.name.name,
            range: v1.value0.name.token.range
          });
        }
        ;
        return Nothing.value;
      };
      return {
        moduleName: v.header.name.name,
        decls: mapMaybe2(go)(v.body.decls)
      };
    };
    ensureSpaceAfterFirstLine = /* @__PURE__ */ function() {
      var prependSpaceIfNecessary = function(i) {
        return function(s) {
          var $33 = i === 0 || startsWith(" ")(s);
          if ($33) {
            return s;
          }
          ;
          return " " + s;
        };
      };
      var $56 = joinWith("\n");
      var $57 = mapWithIndex2(prependSpaceIfNecessary);
      return function($58) {
        return $56($57(lines($58)));
      };
    }();
    topLevelDeclarationLenses = function(_docs) {
      return function(_settings) {
        return function(v) {
          return function(uri) {
            var mkReplaceCommand = function(name2) {
              return function(ty) {
                return function(range3) {
                  var signature = name2 + (" \u2237 " + trim(ty));
                  return {
                    command: cmdName(replaceSuggestionCmd),
                    title: signature,
                    "arguments": notNull([unsafeToForeign(uri), unsafeToForeign(ensureSpaceAfterFirstLine(signature) + "\n"), unsafeToForeign(range3)])
                  };
                };
              };
            };
            var mkCodeLensResult = function(types) {
              return function(v1) {
                var range3 = {
                  start: {
                    line: v1.range.start.line,
                    character: 0
                  },
                  end: {
                    line: v1.range.end.line,
                    character: 0
                  }
                };
                var lookupType = findMap2(function(v2) {
                  var $41 = v2.identifier === v1.name;
                  if ($41) {
                    return new Just(v2["type'"]);
                  }
                  ;
                  return Nothing.value;
                })(types);
                return map(functorMaybe)(function(ty) {
                  return {
                    range: range3,
                    command: notNull(mkReplaceCommand(v1.name)(ty)(range3)),
                    data: unsafeToForeign(nullImpl)
                  };
                })(lookupType);
              };
            };
            var binds = bindFlipped(bindMaybe)(maybeParseResult(Nothing.value)(function(dictRangeOf) {
              return function(dictTokensOf) {
                return function($59) {
                  return Just.create(getDecls($59));
                };
              };
            }))(map(functorMaybe)(function(v1) {
              return v1.parsed;
            })(lookup(ordDocumentUri)(uri)(v.parsedModules)));
            if (v.port instanceof Just && binds instanceof Just) {
              return bind(bindAff)(typesInModule(v.port.value0)(binds.value0.moduleName))(function(types) {
                return pure(applicativeAff)(mapMaybe2(mkCodeLensResult(types))(binds.value0.decls));
              });
            }
            ;
            return pure(applicativeAff)([]);
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.CodeLenses/index.js
var supportsRefresh, getCodeLenses;
var init_LanguageServer_IdePurescript12 = __esm({
  "output/LanguageServer.IdePurescript.CodeLenses/index.js"() {
    init_Control4();
    init_Control5();
    init_Data15();
    init_Data41();
    init_Data7();
    init_Data3();
    init_Effect6();
    init_LanguageServer_IdePurescript_CodeLens();
    init_LanguageServer_IdePurescript_CodeLens2();
    init_LanguageServer_IdePurescript2();
    supportsRefresh = function(v) {
      if (v instanceof Just) {
        return fromMaybe(false)(bind(bindMaybe)(bind(bindMaybe)(toMaybe(v.value0.workspace))(function($21) {
          return toMaybe(function(v1) {
            return v1.codeLens;
          }($21));
        }))(function($22) {
          return toMaybe(function(v1) {
            return v1.refreshSupport;
          }($22));
        }));
      }
      ;
      if (v instanceof Nothing) {
        return false;
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLenses (line 52, column 1 - line 52, column 55): " + [v.constructor.name]);
    };
    getCodeLenses = function(_notify) {
      return function(_stateRef) {
        return function(documentStore) {
          return function(settings) {
            return function(state2) {
              return function(v) {
                return discard(discardUnit)(bindAff)(function() {
                  if (state2.runningRebuild instanceof Just) {
                    return joinFiber(state2.runningRebuild.value0.fiber);
                  }
                  ;
                  if (state2.runningRebuild instanceof Nothing) {
                    return pure(applicativeAff)(unit);
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.CodeLenses (line 36, column 3 - line 40, column 16): " + [state2.runningRebuild.constructor.name]);
                }())(function() {
                  var guard3 = function(b) {
                    return function(m) {
                      if (b) {
                        return m;
                      }
                      ;
                      return pure(applicativeAff)([]);
                    };
                  };
                  return bind(bindAff)(guard3(declarationTypeCodeLens(settings))(topLevelDeclarationLenses(documentStore)(settings)(state2)(v.textDocument.uri)))(function(topLevelDeclarations) {
                    return bind(bindAff)(guard3(exportsCodeLens(settings))(exportManagementCodeLenses(documentStore)(settings)(state2)(v.textDocument.uri)))(function(exportManagement) {
                      return pure(applicativeAff)(append(semigroupArray)(topLevelDeclarations)(exportManagement));
                    });
                  });
                });
              };
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.SuggestionRank/index.js
var SuggestionRank, toString7, semigroupSuggestionRank, fromInt, eqSuggestionRank, ordSuggestionRank, boundedSuggestionRank, monoidSuggestionRank, cmapRanking, semigroupRanking;
var init_LanguageServer_IdePurescript13 = __esm({
  "output/LanguageServer.IdePurescript.SuggestionRank/index.js"() {
    init_Data();
    init_Data13();
    init_Data49();
    init_Data8();
    init_Data2();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data12();
    init_Data9();
    init_Data7();
    init_Data_String5();
    SuggestionRank = function(x) {
      return x;
    };
    toString7 = function(v) {
      return singleton8(codePointFromChar(fromMaybe(" ")(fromCharCode3(65 + v | 0))));
    };
    semigroupSuggestionRank = {
      append: function(v) {
        return function(v1) {
          return min(ordInt)(v)(v1);
        };
      }
    };
    fromInt = /* @__PURE__ */ function() {
      var $28 = clamp(ordInt)(0)(25);
      return function($29) {
        return SuggestionRank($28($29));
      };
    }();
    eqSuggestionRank = {
      eq: function(x) {
        return function(y) {
          return x === y;
        };
      }
    };
    ordSuggestionRank = {
      compare: function(v) {
        return function(v1) {
          return invert(compare(ordInt)(v)(v1));
        };
      },
      Eq0: function() {
        return eqSuggestionRank;
      }
    };
    boundedSuggestionRank = {
      top: 0,
      bottom: 25,
      Ord0: function() {
        return ordSuggestionRank;
      }
    };
    monoidSuggestionRank = {
      mempty: /* @__PURE__ */ bottom(boundedSuggestionRank),
      Semigroup0: function() {
        return semigroupSuggestionRank;
      }
    };
    cmapRanking = function(k) {
      return function(r) {
        var $31 = maybe(mempty(monoidSuggestionRank))(unwrap()(r));
        return function($32) {
          return $31(k($32));
        };
      };
    };
    semigroupRanking = {
      append: function(v) {
        return function(v1) {
          return function(a) {
            var rank = v(a);
            var $27 = eq(eqSuggestionRank)(rank)(top(boundedSuggestionRank));
            if ($27) {
              return rank;
            }
            ;
            return append(semigroupSuggestionRank)(rank)(v1(a));
          };
        };
      }
    };
  }
});

// output/LanguageServer.IdePurescript.Completion/index.js
var rankSub, rankSegmentPrefix, rankQualifiedWithType, rankQualifiedWithSegment, rankQualifiedWithConcat, rankModuleAbv, rankQualifiedWithAbv, rankUnknownQualified, rankSuggestion, getCompletions;
var init_LanguageServer_IdePurescript14 = __esm({
  "output/LanguageServer.IdePurescript.Completion/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data13();
    init_Data28();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data7();
    init_Data_String5();
    init_Data_String3();
    init_Data_String6();
    init_Effect6();
    init_Effect4();
    init_IdePurescript7();
    init_IdePurescript5();
    init_IdePurescript2();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_IdePurescript3();
    init_LanguageServer_IdePurescript13();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    rankSub = function(v) {
      var v1 = indexOf2(v.sub)(v.str);
      if (v1 instanceof Just) {
        return fromInt((1 + v1.value0 | 0) * ((1 + length5(v.sub) | 0) - (length5(v.str) + v1.value0 | 0) | 0) | 0);
      }
      ;
      if (v1 instanceof Nothing) {
        return bottom(boundedSuggestionRank);
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Completion (line 255, column 5 - line 258, column 24): " + [v1.constructor.name]);
    };
    rankSegmentPrefix = function(v) {
      var v1 = indexOf2(v.prefix)(v.segment);
      if (v1 instanceof Just && v1.value0 === 0) {
        return fromInt(((1 + v.ix | 0) * (1 + (length5(v.segment) - length5(v.prefix) | 0) | 0) | 0) + (v.len - v.ix | 0) | 0);
      }
      ;
      return bottom(boundedSuggestionRank);
    };
    rankQualifiedWithType = function(opts) {
      var v = getModuleFromUnknownQualifier(opts.qualifier)(opts.state);
      if (v instanceof Just && getModuleName(v.value0) === opts.mod) {
        return top(boundedSuggestionRank);
      }
      ;
      return bottom(boundedSuggestionRank);
    };
    rankQualifiedWithSegment = function(opts) {
      var segments = split(".")(opts.mod);
      return foldMapWithIndex(foldableWithIndexArray)(monoidSuggestionRank)(function(ix2) {
        return function(segment) {
          return unwrap()(rankSegmentPrefix)({
            len: length4(segments),
            ix: ix2,
            segment,
            prefix: opts.qualifier
          });
        };
      })(segments);
    };
    rankQualifiedWithConcat = /* @__PURE__ */ flip(cmapRanking)(rankSub)(function(opts) {
      return new Just({
        sub: opts.qualifier,
        str: replaceAll(".")("")(opts.mod)
      });
    });
    rankModuleAbv = /* @__PURE__ */ flip(cmapRanking)(rankSub)(function(v) {
      var modAbv = joinWith("")(filter2(function(ch) {
        return toUpper(ch) === ch;
      })(toCharArray2(replaceAll(".")("")(v.mod))));
      return new Just({
        sub: v.abv,
        str: modAbv
      });
    });
    rankQualifiedWithAbv = /* @__PURE__ */ flip(cmapRanking)(rankModuleAbv)(function(opts) {
      var $38 = toUpper(opts.qualifier) === opts.qualifier;
      if ($38) {
        return new Just({
          abv: opts.qualifier,
          mod: opts.mod
        });
      }
      ;
      return Nothing.value;
    });
    rankUnknownQualified = /* @__PURE__ */ append(semigroupRanking)(rankQualifiedWithType)(/* @__PURE__ */ append(semigroupRanking)(rankQualifiedWithSegment)(/* @__PURE__ */ append(semigroupRanking)(rankQualifiedWithAbv)(rankQualifiedWithConcat)));
    rankSuggestion = /* @__PURE__ */ flip(cmapRanking)(rankUnknownQualified)(function(v) {
      if (v.suggestion instanceof IdentSuggestion && (v.suggestion.value0.qualifier instanceof Just && $$null(getQualModule(v.suggestion.value0.qualifier.value0)(v.state)))) {
        return new Just({
          state: v.state,
          qualifier: v.suggestion.value0.qualifier.value0,
          mod: v.suggestion.value0.exportMod
        });
      }
      ;
      return Nothing.value;
    });
    getCompletions = function(notify) {
      return function(docs) {
        return function(settings) {
          return function(state2) {
            return function(v) {
              var result2 = function(arr) {
                return {
                  items: arr,
                  isIncomplete: true
                };
              };
              var mkRange = function(pos) {
                return {
                  start: over()()(Position)(function(v1) {
                    return {
                      character: 0,
                      line: v1.line
                    };
                  })(pos),
                  end: pos
                };
              };
              var edit = function(newText) {
                return function(prefix) {
                  return {
                    range: {
                      start: over()()(Position)(function(pos) {
                        return {
                          character: pos.character - length5(prefix) | 0,
                          line: pos.line
                        };
                      })(v.position),
                      end: v.position
                    },
                    newText
                  };
                };
              };
              var convertSuggest = function(v1) {
                if (v1 instanceof Module) {
                  return Module2.value;
                }
                ;
                if (v1 instanceof Value) {
                  return Value2.value;
                }
                ;
                if (v1 instanceof $$Function) {
                  return $$Function2.value;
                }
                ;
                if (v1 instanceof Type2) {
                  return Class.value;
                }
                ;
                if (v1 instanceof DCtor) {
                  return Enum.value;
                }
                ;
                if (v1 instanceof Kind) {
                  return Interface.value;
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Completion (line 96, column 20 - line 102, column 25): " + [v1.constructor.name]);
              };
              var convert = function(v1) {
                return function(v2) {
                  if (v2 instanceof QualifierSuggestion) {
                    return over()()(CompletionItem)(function(v32) {
                      return {
                        detail: toNullable(new Just(v2.value0.mod)),
                        additionalTextEdits: v32.additionalTextEdits,
                        command: v32.command,
                        documentation: v32.documentation,
                        filterText: v32.filterText,
                        insertText: v32.insertText,
                        kind: v32.kind,
                        label: v32.label,
                        labelDetails: v32.labelDetails,
                        sortText: v32.sortText,
                        textEdit: v32.textEdit
                      };
                    })(completionItem(v2.value0.text)(Module2.value));
                  }
                  ;
                  if (v2 instanceof ModuleSuggestion) {
                    return over()()(CompletionItem)(function(v32) {
                      return {
                        textEdit: toNullable(new Just(edit(v2.value0.text)(v2.value0.prefix))),
                        additionalTextEdits: v32.additionalTextEdits,
                        command: v32.command,
                        detail: v32.detail,
                        documentation: v32.documentation,
                        filterText: v32.filterText,
                        insertText: v32.insertText,
                        kind: v32.kind,
                        label: v32.label,
                        labelDetails: v32.labelDetails,
                        sortText: v32.sortText
                      };
                    })(completionItem(v2.value0.text)(convertSuggest(v2.value0.suggestType)));
                  }
                  ;
                  if (v2 instanceof IdentSuggestion) {
                    var rankText = toString7(unwrap()(rankSuggestion)({
                      state: unwrap()(state2).modules,
                      suggestion: v2
                    }));
                    var exportText = "\n*From: " + (function() {
                      var $61 = v2.value0.exportMod === v2.value0.origMod;
                      if ($61) {
                        return v2.value0.origMod;
                      }
                      ;
                      return v2.value0.exportMod + (" (re-exported from " + (v2.value0.origMod + ")"));
                    }() + "*");
                    return over()()(CompletionItem)(function(v32) {
                      return {
                        detail: toNullable(new Just(v2.value0.valueType)),
                        labelDetails: toNullable(new Just({
                          detail: toNullable(new Just(" " + v2.value0.valueType)),
                          description: toNullable(new Just(v2.value0.exportMod))
                        })),
                        documentation: toNullable(new Just(markupContent(fromMaybe("")(v2.value0.documentation) + exportText))),
                        command: toNullable(new Just(addCompletionImport(v2.value0.identifier)(new Just(v2.value0.exportMod))(v2.value0.qualifier)(v1)(maybe("")(showNS)(v2.value0.namespace)))),
                        textEdit: toNullable(new Just(edit(v2.value0.identifier)(v2.value0.prefix))),
                        sortText: toNullable(new Just(rankText + ("." + v2.value0.identifier))),
                        additionalTextEdits: v32.additionalTextEdits,
                        filterText: v32.filterText,
                        insertText: v32.insertText,
                        kind: v32.kind,
                        label: v32.label
                      };
                    })(completionItem(v2.value0.identifier)(convertSuggest(v2.value0.suggestType)));
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Completion (line 115, column 3 - line 121, column 12): " + [v1.constructor.name, v2.constructor.name]);
                };
              };
              var uri = function(v1) {
                return v1.uri;
              }(un()(TextDocumentIdentifier)(v.textDocument));
              return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(uri)))(function(doc) {
                return maybe(pure(applicativeAff)(result2([])))(function(doc1) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(mkRange(v.position))))(function(line) {
                    var autoCompleteAllModules2 = autoCompleteAllModules(settings);
                    var v1 = unwrap()(state2);
                    var getQualifiedModule = flip(getQualModule)(v1.modules);
                    if (v1.port instanceof Just) {
                      return bind(bindAff)(function() {
                        if (autoCompleteAllModules2) {
                          return getLoadedModules(v1.port.value0);
                        }
                        ;
                        return pure(applicativeAff)(getUnqualActiveModules(v1.modules)(Nothing.value));
                      }())(function(usedModules) {
                        var qualifiers = mapMaybe2(function(v2) {
                          return map(functorMaybe)(function(v32) {
                            return {
                              moduleName: v2.moduleName,
                              qualifier: v32
                            };
                          })(v2.qualifier);
                        })(v1.modules.modules);
                        return bind(bindAff)(getSuggestions(notify)(v1.port.value0)({
                          line,
                          moduleInfo: {
                            modules: usedModules,
                            openModules: getUnqualActiveModules(v1.modules)(Nothing.value),
                            candidateModules: function() {
                              var $86 = getUnqualActiveModules(v1.modules);
                              return function($87) {
                                return $86(Just.create($87));
                              };
                            }(),
                            getQualifiedModule,
                            mainModule: v1.modules.main,
                            importedModules: getAllActiveModules(v1.modules)
                          },
                          qualifiers,
                          maxResults: autocompleteLimit(settings),
                          groupCompletions: autocompleteGrouped(settings),
                          preferredModules: importsPreferredModules(settings)
                        }))(function(v2) {
                          return pure(applicativeAff)({
                            items: map(functorArray)(convert(uri))(v2.results),
                            isIncomplete: v2.isIncomplete
                          });
                        });
                      });
                    }
                    ;
                    return pure(applicativeAff)(result2([]));
                  });
                })(toMaybe(doc));
              });
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.FoldingRanges/index.js
var makeRange, makeRange$prime, getRanges, getFoldingRanges;
var init_LanguageServer_IdePurescript15 = __esm({
  "output/LanguageServer.IdePurescript.FoldingRanges/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data4();
    init_Data_Map();
    init_Data15();
    init_Data41();
    init_Data7();
    init_Data14();
    init_Effect6();
    init_Effect4();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript11();
    init_LanguageServer_Protocol3();
    init_PureScript_CST8();
    makeRange = function(kind) {
      return function(startPos) {
        return function(endPos) {
          return {
            startLine: startPos.line,
            startCharacter: notNull(startPos.column),
            endLine: endPos.line,
            endCharacter: notNull(endPos.column),
            kind
          };
        };
      };
    };
    makeRange$prime = function(range3) {
      return makeRange(nullImpl)(range3.start)(range3.end);
    };
    getRanges = function(dictRangeOf) {
      return function(v) {
        var importRanges = function() {
          var v1 = last2(v.header.imports);
          var v2 = head(v.header.imports);
          if (v2 instanceof Just && v1 instanceof Just) {
            return [makeRange(notNull("imports"))(rangeOf(rangeOfImportDecl)(v2.value0).start)(rangeOf(rangeOfImportDecl)(v1.value0).end)];
          }
          ;
          return [];
        }();
        var bodyRanges = map(functorArray)(function() {
          var $30 = rangeOf(rangeOfDecl(dictRangeOf));
          return function($31) {
            return makeRange$prime($30($31));
          };
        }())(v.body.decls);
        return append(semigroupArray)(importRanges)(bodyRanges);
      };
    };
    getFoldingRanges = function(notify) {
      return function(_docs) {
        return function(v) {
          return function(v1) {
            return function(v2) {
              var v32 = lookup(ordDocumentUri)(v2.textDocument.uri)(v1.parsedModules);
              if (v32 instanceof Just) {
                return pure(applicativeAff)(maybeParseResult([])(function(dictRangeOf) {
                  return function(dictTokensOf) {
                    return getRanges(dictRangeOf);
                  };
                })(v32.value0.parsed));
              }
              ;
              if (v32 instanceof Nothing) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(notify(Warning.value)("getFoldingRanges - no parsed CST for " + show(showDocumentUri)(v2.textDocument.uri))))(function() {
                  return pure(applicativeAff)([]);
                });
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.FoldingRanges (line 36, column 3 - line 42, column 14): " + [v32.constructor.name]);
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Formatting/index.js
var purtyCommand, pursTidyCommand, poseCommand, mkTextEdit, formatCmd, format, getFormattedDocument;
var init_LanguageServer_IdePurescript16 = __esm({
  "output/LanguageServer.IdePurescript.Formatting/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data41();
    init_Data10();
    init_Data14();
    init_Data_String6();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_Effect3();
    init_Foreign();
    init_IdePurescript9();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol6();
    init_Node6();
    init_Node_Buffer();
    init_Node7();
    init_Node5();
    init_Node9();
    purtyCommand = /* @__PURE__ */ function() {
      return new Command("purty", ["format", "-"]);
    }();
    pursTidyCommand = /* @__PURE__ */ function() {
      return new Command("purs-tidy", ["format"]);
    }();
    poseCommand = /* @__PURE__ */ function() {
      return new Command("prettier", ["--parser", "purescript"]);
    }();
    mkTextEdit = function(oldText) {
      return function(text) {
        var range3 = {
          start: {
            line: 0,
            character: 0
          },
          end: {
            line: length(foldableArray)(semiringInt)(lines(oldText)) + 1 | 0,
            character: 0
          }
        };
        return {
          range: range3,
          newText: text
        };
      };
    };
    formatCmd = function(v) {
      if (v instanceof Purty) {
        return purtyCommand;
      }
      ;
      if (v instanceof PursTidy) {
        return pursTidyCommand;
      }
      ;
      if (v instanceof Pose) {
        return poseCommand;
      }
      ;
      if (v instanceof NoFormatter) {
        return new Command("echo", []);
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Formatting (line 86, column 13 - line 90, column 35): " + [v.constructor.name]);
    };
    format = function(_logCb) {
      return function(settings) {
        return function(state2) {
          return function(formatter2) {
            return function(text) {
              var v = formatCmd(formatter2);
              if (state2.root instanceof Just) {
                return makeAff(function(cb) {
                  var succ2 = function($34) {
                    return cb(Right.create($34));
                  };
                  var err = function($35) {
                    return cb(Left.create($35));
                  };
                  return function __do2() {
                    var cp = spawn3({
                      command: v,
                      directory: state2.root.value0,
                      useNpmDir: addNpmPath(settings)
                    })();
                    onError(cp)(function($36) {
                      return err(toStandardError($36));
                    })();
                    var result2 = $$new([])();
                    var res = function(s) {
                      return modify_(function(v1) {
                        return snoc2(v1)(s);
                      })(result2);
                    };
                    catchException(err)(onDataString(stderr(cp))(UTF8.value)(function($37) {
                      return err(error($37));
                    }))();
                    catchException(err)(onData(stdout(cp))(res))();
                    onClose(cp)(function(exit2) {
                      if (exit2 instanceof Normally && (exit2.value0 === 0 || exit2.value0 === 1)) {
                        return bind(bindEffect)(bind(bindEffect)(bind(bindEffect)(read(result2))(concat3(mutableBufferEffect)))(toString2(mutableBufferEffect)(UTF8.value)))(succ2);
                      }
                      ;
                      return err(error(v.value0 + " process exited abnormally"));
                    })();
                    when(applicativeEffect)(!isUndefined(unsafeToForeign(pid(cp))))(function __do3() {
                      catchException(err)($$void(functorEffect)(writeString3(stdin(cp))(UTF8.value)(text)($$const(pure(applicativeEffect)(unit)))))();
                      return catchException(err)(end(stdin(cp))($$const(pure(applicativeEffect)(unit))))();
                    })();
                    return mempty(monoidCanceler);
                  };
                });
              }
              ;
              return pure(applicativeAff)("");
            };
          };
        };
      };
    };
    getFormattedDocument = function(logCb) {
      return function(docs) {
        return function(settings) {
          return function(serverState) {
            return function(v) {
              var v1 = formatter(settings);
              if (v1 instanceof NoFormatter) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Warning.value)("Trying to format document: no `formatter` value set in settings!")))(function() {
                  return pure(applicativeAff)([]);
                });
              }
              ;
              return bind(bindAff)(liftEffect(monadEffectAff)(map(functorEffect)(toMaybe)(getDocument(docs)(v.textDocument.uri))))(function(maybeDoc) {
                if (maybeDoc instanceof Nothing) {
                  return pure(applicativeAff)([]);
                }
                ;
                if (maybeDoc instanceof Just) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(v.textDocument.uri)))(function(file) {
                    return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(logCb(Info.value)("Formatting document " + (file + (" with " + function(v2) {
                      return v2.value0;
                    }(formatCmd(v1)))))))(function() {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getText(maybeDoc.value0)))(function(text) {
                        return bind(bindAff)(attempt(format(logCb)(settings)(serverState)(v1)(text)))(function(newTextEither) {
                          if (newTextEither instanceof Left) {
                            return voidLeft(functorAff)(liftEffect(monadEffectAff)(logCb($$Error.value)(show(showError)(newTextEither.value0))))([]);
                          }
                          ;
                          if (newTextEither instanceof Right && newTextEither.value0 === "") {
                            return pure(applicativeAff)([]);
                          }
                          ;
                          if (newTextEither instanceof Right) {
                            return pure(applicativeAff)([mkTextEdit(text)(newTextEither.value0)]);
                          }
                          ;
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Formatting (line 71, column 11 - line 74, column 62): " + [newTextEither.constructor.name]);
                        });
                      });
                    });
                  });
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Formatting (line 60, column 7 - line 74, column 62): " + [maybeDoc.constructor.name]);
              });
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Util.TypeInfo/index.js
var parseImports, dependencyFilterAvailable, getTypeInfoMaybeNew;
var init_LanguageServer_IdePurescript_Util2 = __esm({
  "output/LanguageServer.IdePurescript.Util.TypeInfo/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data_Map();
    init_Data15();
    init_Data19();
    init_Data12();
    init_Data14();
    init_Data_String3();
    init_Effect6();
    init_Effect4();
    init_IdePurescript5();
    init_IdePurescript2();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript11();
    init_LanguageServer_Protocol3();
    init_PureScript_CST2();
    init_PureScript_CST8();
    init_PureScript_CST_Range();
    parseImports = function(dictTokensOf) {
      return function(v) {
        var printImport = function(imp) {
          return trim(foldMap(foldableArray)(monoidString)(printSourceToken)(toArray6(tokensOf(tokensOfImportDecl(dictTokensOf))(imp))));
        };
        return cons2("import " + v.header.name.name)(map(functorArray)(printImport)(v.header.imports));
      };
    };
    dependencyFilterAvailable = function(v) {
      var v1 = function(v2) {
        return false;
      };
      if (v.purs instanceof Just && v.purs.value0.value1 instanceof Just) {
        var $16 = parseVersion(v.purs.value0.value1.value0);
        if ($16 instanceof Just) {
          return greaterThanOrEq(ordVersion)($16.value0)(new Version(0, 15, 7, Nothing.value));
        }
        ;
        return v1(true);
      }
      ;
      return v1(true);
    };
    getTypeInfoMaybeNew = function(notify) {
      return function(v) {
        return function(uri) {
          return function(text) {
            return function(qualifier) {
              var getImports = function() {
                var v1 = lookup(ordDocumentUri)(uri)(v.parsedModules);
                if (v1 instanceof Just) {
                  return pure(applicativeAff)(maybeParseResult([])(function(dictRangeOf) {
                    return function(dictTokensOf) {
                      return parseImports(dictTokensOf);
                    };
                  })(v1.value0.parsed));
                }
                ;
                if (v1 instanceof Nothing) {
                  return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(notify(Warning.value)("typeinfo - no parsed CST for " + show(showDocumentUri)(uri))))(function() {
                    return pure(applicativeAff)([]);
                  });
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Util.TypeInfo (line 46, column 5 - line 51, column 16): " + [v1.constructor.name]);
              }();
              if (v.port instanceof Just) {
                var $32 = dependencyFilterAvailable(v);
                if ($32) {
                  return bind(bindAff)(getImports)(function(imports) {
                    return getTypeInfoWithImportFilter(v.port.value0)(text)(v.modules.main)(qualifier)(imports);
                  });
                }
                ;
                return getTypeInfo(v.port.value0)(text)(v.modules.main)(qualifier)(getUnqualActiveModules(v.modules)(new Just(text)))(flip(getQualModule)(v.modules));
              }
              ;
              if (v.port instanceof Nothing) {
                return pure(applicativeAff)(Nothing.value);
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Util.TypeInfo (line 35, column 3 - line 42, column 28): " + [v.port.constructor.name]);
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Symbols/index.js
var rangeOfDoStatementsScope, guard$prime, getLocalDefinitions, convPosition, convTypePosition, getSymbols, getDocumentSymbols, getWorkspaceSymbols, getDefinition;
var init_LanguageServer_IdePurescript17 = __esm({
  "output/LanguageServer.IdePurescript.Symbols/index.js"() {
    init_Control6();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Data39();
    init_Data_Array2();
    init_Data_Array_NonEmpty();
    init_Data16();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data_Map();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data41();
    init_Data12();
    init_Data7();
    init_Data48();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data29();
    init_Data22();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_IdePurescript2();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_IdePurescript_Util();
    init_LanguageServer_IdePurescript_Util2();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_Node();
    init_PureScript();
    init_PureScript_CST8();
    init_PureScript_CST9();
    init_PureScript_CST();
    rangeOfDoStatementsScope = function(dictRangeOf) {
      return {
        rangeOf: function(v) {
          return foldl12(function(a) {
            return function(b) {
              return {
                start: a.start,
                end: b.end
              };
            };
          })(map(functorNonEmptyArray)(either(rangeOf(rangeOfExpr(dictRangeOf)))(rangeOf(rangeOfDoStatement(dictRangeOf))))(v));
        }
      };
    };
    guard$prime = function(dictMonoid) {
      return function(cond) {
        return function(f) {
          if (cond) {
            return f(unit);
          }
          ;
          return mempty(dictMonoid);
        };
      };
    };
    getLocalDefinitions = function(dictRangeOf) {
      return function(uri) {
        return function(position) {
          return function(ident) {
            return function(mod2) {
              var onBinder = function(dictRangeOf1) {
                return function(eScope) {
                  return foldMapBinder(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "scope";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "start";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "line";
                    }
                  })(ordInt))()({
                    reflectSymbol: function() {
                      return "column";
                    }
                  })(ordInt))))()({
                    reflectSymbol: function() {
                      return "end";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "line";
                    }
                  })(ordInt))()({
                    reflectSymbol: function() {
                      return "column";
                    }
                  })(ordInt))))))()({
                    reflectSymbol: function() {
                      return "ident";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "start";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "line";
                    }
                  })(ordInt))()({
                    reflectSymbol: function() {
                      return "column";
                    }
                  })(ordInt))))()({
                    reflectSymbol: function() {
                      return "end";
                    }
                  })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                    reflectSymbol: function() {
                      return "line";
                    }
                  })(ordInt))()({
                    reflectSymbol: function() {
                      return "column";
                    }
                  })(ordInt))))))))({
                    onBinder: function(v1) {
                      if (v1 instanceof BinderVar && v1.value0.name === ident) {
                        return singleton10({
                          ident: v1.value0.token.range,
                          scope: rangeOf(dictRangeOf1)(eScope)
                        });
                      }
                      ;
                      if (v1 instanceof BinderNamed && v1.value0.name === ident) {
                        return singleton10({
                          ident: v1.value0.token.range,
                          scope: rangeOf(dictRangeOf1)(eScope)
                        });
                      }
                      ;
                      return empty6;
                    },
                    onDecl: defaultMonoidalVisitor(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt)))))))).onDecl,
                    onExpr: defaultMonoidalVisitor(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt)))))))).onExpr,
                    onType: defaultMonoidalVisitor(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt)))))))).onType
                  });
                };
              };
              var onLetBind = function(dictRangeOf1) {
                return function(eScope) {
                  return function(v) {
                    if (v instanceof LetBindingName) {
                      return append(semigroupSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(guard$prime(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(v.value0.name.name === ident)(function(v1) {
                        return singleton10({
                          ident: v.value0.name.token.range,
                          scope: rangeOf(dictRangeOf1)(eScope)
                        });
                      }))(foldMap(foldableArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(onBinder(rangeOfGuarded(dictRangeOf))(v.value0.guarded))(v.value0.binders));
                    }
                    ;
                    if (v instanceof LetBindingPattern) {
                      return onBinder(dictRangeOf1)(eScope)(v.value0);
                    }
                    ;
                    return empty6;
                  };
                };
              };
              var onStmt = function(stmt) {
                return function(acc) {
                  if (stmt instanceof DoLet) {
                    var res$prime = maybe(empty6)(function(scopeStmts) {
                      return foldMap(foldableNonEmptyArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(onLetBind(rangeOfDoStatementsScope(dictRangeOf))(scopeStmts))(stmt.value1);
                    })(fromArray4(acc.scope));
                    return {
                      res: append(semigroupSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(acc.res)(res$prime),
                      scope: cons2(new Right(stmt))(acc.scope)
                    };
                  }
                  ;
                  if (stmt instanceof DoBind) {
                    var res$prime = maybe(empty6)(function(scopeStmts) {
                      return onBinder(rangeOfDoStatementsScope(dictRangeOf))(scopeStmts)(stmt.value0);
                    })(fromArray4(acc.scope));
                    return {
                      res: append(semigroupSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(acc.res)(res$prime),
                      scope: cons2(new Right(stmt))(acc.scope)
                    };
                  }
                  ;
                  return {
                    res: acc.res,
                    scope: cons2(new Right(stmt))(acc.scope)
                  };
                };
              };
              var res = function(range3) {
                return gotoDefinitionResult(new Left({
                  uri,
                  range: sourceRangeToRange(range3)
                }));
              };
              var containsPosition = function(v) {
                var target = new Tuple(position.line, position.character);
                return greaterThanOrEq(ordTuple(ordInt)(ordInt))(target)(new Tuple(v.start.line, v.start.column)) && lessThanOrEq(ordTuple(ordInt)(ordInt))(target)(new Tuple(v.end.line, v.end.column));
              };
              var toRes = function(ranges) {
                var validRanges = filter2(function($276) {
                  return containsPosition(function(v) {
                    return v.scope;
                  }($276));
                })(fromFoldable2(foldableSet)(ranges));
                return pure(applicativeAff)(map(functorMaybe)(function($277) {
                  return res(function(v) {
                    return v.ident;
                  }($277));
                })(last2(validRanges)));
              };
              return toRes(foldMapModule(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "scope";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "start";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "line";
                }
              })(ordInt))()({
                reflectSymbol: function() {
                  return "column";
                }
              })(ordInt))))()({
                reflectSymbol: function() {
                  return "end";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "line";
                }
              })(ordInt))()({
                reflectSymbol: function() {
                  return "column";
                }
              })(ordInt))))))()({
                reflectSymbol: function() {
                  return "ident";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "start";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "line";
                }
              })(ordInt))()({
                reflectSymbol: function() {
                  return "column";
                }
              })(ordInt))))()({
                reflectSymbol: function() {
                  return "end";
                }
              })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "line";
                }
              })(ordInt))()({
                reflectSymbol: function() {
                  return "column";
                }
              })(ordInt))))))))({
                onBinder: defaultMonoidalVisitor(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "scope";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "start";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))()({
                  reflectSymbol: function() {
                    return "end";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))))()({
                  reflectSymbol: function() {
                    return "ident";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "start";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))()({
                  reflectSymbol: function() {
                    return "end";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt)))))))).onBinder,
                onDecl: function(d) {
                  var onMod = function(x) {
                    return function(token2) {
                      return guard$prime(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(x === ident)(function(v1) {
                        return singleton10({
                          ident: token2.range,
                          scope: rangeOf(rangeOfModule)(mod2)
                        });
                      });
                    };
                  };
                  if (d instanceof DeclValue2) {
                    return append(semigroupSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))))(onMod(d.value0.name.name)(d.value0.name.token))(foldMap(foldableArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))))(onBinder(rangeOfDecl(dictRangeOf))(d))(d.value0.binders));
                  }
                  ;
                  if (d instanceof DeclData) {
                    return onMod(d.value0.name.name)(d.value0.name.token);
                  }
                  ;
                  if (d instanceof DeclNewtype) {
                    return onMod(d.value0.name.name)(d.value0.name.token);
                  }
                  ;
                  if (d instanceof DeclClass) {
                    return onMod(d.value0.name.name)(d.value0.name.token);
                  }
                  ;
                  if (d instanceof DeclType2) {
                    return onMod(d.value0.name.name)(d.value0.name.token);
                  }
                  ;
                  if (d instanceof DeclFixity && d.value0.operator instanceof FixityValue) {
                    return onMod(d.value0.operator.value2.name)(d.value0.operator.value2.token);
                  }
                  ;
                  if (d instanceof DeclFixity && d.value0.operator instanceof FixityType) {
                    return onMod(d.value0.operator.value3.name)(d.value0.operator.value3.token);
                  }
                  ;
                  if (d instanceof DeclForeign && d.value2 instanceof ForeignValue) {
                    return onMod(d.value2.value0.label.name)(d.value2.value0.label.token);
                  }
                  ;
                  if (d instanceof DeclForeign && d.value2 instanceof ForeignData) {
                    return onMod(d.value2.value1.label.name)(d.value2.value1.label.token);
                  }
                  ;
                  if (d instanceof DeclForeign && d.value2 instanceof ForeignKind) {
                    return onMod(d.value2.value1.name)(d.value2.value1.token);
                  }
                  ;
                  return empty6;
                },
                onExpr: function(e) {
                  if (e instanceof ExprLet) {
                    return foldMap(foldableNonEmptyArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))))(onLetBind(rangeOfExpr(dictRangeOf))(e))(e.value0.bindings);
                  }
                  ;
                  if (e instanceof ExprLambda) {
                    return foldMap(foldableNonEmptyArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))))(onBinder(rangeOfExpr(dictRangeOf))(e.value0.body))(e.value0.binders);
                  }
                  ;
                  if (e instanceof ExprCase) {
                    return foldMap(foldableNonEmptyArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "scope";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))()({
                      reflectSymbol: function() {
                        return "ident";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "start";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))()({
                      reflectSymbol: function() {
                        return "end";
                      }
                    })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                      reflectSymbol: function() {
                        return "line";
                      }
                    })(ordInt))()({
                      reflectSymbol: function() {
                        return "column";
                      }
                    })(ordInt))))))))(function(v1) {
                      return foldMap(foldableArray)(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "scope";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))()({
                        reflectSymbol: function() {
                          return "ident";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "start";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))()({
                        reflectSymbol: function() {
                          return "end";
                        }
                      })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                        reflectSymbol: function() {
                          return "line";
                        }
                      })(ordInt))()({
                        reflectSymbol: function() {
                          return "column";
                        }
                      })(ordInt))))))))(onBinder(rangeOfGuarded(dictRangeOf))(v1.value1))(cons2(v1.value0.head)(map(functorArray)(snd)(v1.value0.tail)));
                    })(e.value0.branches);
                  }
                  ;
                  if (e instanceof ExprDo) {
                    return function(v1) {
                      return v1.res;
                    }(foldr2(onStmt)({
                      scope: [],
                      res: empty6
                    })(toArray5(e.value0.statements)));
                  }
                  ;
                  if (e instanceof ExprAdo) {
                    return function(v1) {
                      return v1.res;
                    }(foldr2(onStmt)({
                      scope: [new Left(e.value0.result)],
                      res: empty6
                    })(e.value0.statements));
                  }
                  ;
                  return empty6;
                },
                onType: defaultMonoidalVisitor(monoidSet(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "scope";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "start";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))()({
                  reflectSymbol: function() {
                    return "end";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))))()({
                  reflectSymbol: function() {
                    return "ident";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "start";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt))))()({
                  reflectSymbol: function() {
                    return "end";
                  }
                })(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                  reflectSymbol: function() {
                    return "line";
                  }
                })(ordInt))()({
                  reflectSymbol: function() {
                    return "column";
                  }
                })(ordInt)))))))).onType
              })(mod2));
            };
          };
        };
      };
    };
    convPosition = function(v) {
      return {
        line: v.line - 1 | 0,
        character: v.column - 1 | 0
      };
    };
    convTypePosition = function(v) {
      return {
        start: convPosition(v.start),
        end: convPosition(v.end)
      };
    };
    getSymbols = function(root) {
      return function(port) {
        return function(prefix) {
          return function(modules) {
            var getName = function(v) {
              return resolve([root])(v.name);
            };
            var getInfo = function(v) {
              if (v.definedAt instanceof Just) {
                return function __do2() {
                  var fileName = getName(v.definedAt.value0)();
                  var kind = function() {
                    var $189 = take5(1)(v.identifier) === toUpper(take5(1)(v.identifier));
                    if ($189) {
                      return ClassSymbolKind.value;
                    }
                    ;
                    var $190 = contains("->")(v.identifier);
                    if ($190) {
                      return FunctionSymbolKind.value;
                    }
                    ;
                    return PropertySymbolKind.value;
                  }();
                  var uri = filenameToUri(fileName)();
                  return new Just({
                    name: v.identifier,
                    kind: symbolKindToInt(kind),
                    location: {
                      uri,
                      range: convTypePosition(v.definedAt.value0)
                    },
                    containerName: toNullable(new Just(v["module'"]))
                  });
                };
              }
              ;
              return pure(applicativeEffect)(Nothing.value);
            };
            var opts = {
              maxResults: Nothing.value,
              groupReexports: true
            };
            return bind(bindAff)(getCompletion(port)(prefix)(Nothing.value)(Nothing.value)(modules)($$const([]))(opts))(function(completions) {
              return bind(bindAff)(liftEffect(monadEffectAff)(traverse(traversableArray)(applicativeEffect)(getInfo)(completions)))(function(res) {
                return pure(applicativeAff)(catMaybes2(res));
              });
            });
          };
        };
      };
    };
    getDocumentSymbols = function(v) {
      return function(state2) {
        return function(v1) {
          var v2 = un()(ServerState)(state2);
          if (v2.port instanceof Just && v2.root instanceof Just) {
            return getSymbols(v2.root.value0)(v2.port.value0)("")(maybe([])(singleton5)(v2.modules.main));
          }
          ;
          return pure(applicativeAff)([]);
        };
      };
    };
    getWorkspaceSymbols = function(v) {
      return function(state2) {
        return function(v1) {
          var v2 = un()(ServerState)(state2);
          if (v2.port instanceof Just && v2.root instanceof Just) {
            return bind(bindAff)(getLoadedModules(v2.port.value0))(function(allModules) {
              return getSymbols(v2.root.value0)(v2.port.value0)(v1.query)(allModules);
            });
          }
          ;
          return pure(applicativeAff)([]);
        };
      };
    };
    getDefinition = function(v) {
      return function(v1) {
        return function(v2) {
          return function(v32) {
            return function(v42) {
              if (v32.clientCapabilities instanceof Just) {
                var typeInfo = function(uri) {
                  return function(v52) {
                    return bind(bindAff)(getTypeInfoMaybeNew(v)(v32)(uri)(v52.word)(v52.qualifier))(function(info3) {
                      return pure(applicativeAff)(function() {
                        if (info3 instanceof Just && info3.value0.definedAt instanceof Just) {
                          return new Just({
                            typePos: info3.value0.definedAt.value0,
                            originRange: Nothing.value
                          });
                        }
                        ;
                        return Nothing.value;
                      }());
                    });
                  };
                };
                var mkNewRange = function(pos) {
                  return function(left2) {
                    return function(right2) {
                      return {
                        start: over()()(Position)(function(v52) {
                          return {
                            character: left2,
                            line: v52.line
                          };
                        })(pos),
                        end: over()()(Position)(function(v52) {
                          return {
                            character: right2,
                            line: v52.line
                          };
                        })(pos)
                      };
                    };
                  };
                };
                var moduleInfo = function(port$prime) {
                  return function(v52) {
                    return function(v6) {
                      var fullModule = function() {
                        if (v52.qualifier instanceof Just) {
                          return v52.qualifier.value0 + ("." + v52.word);
                        }
                        ;
                        if (v52.qualifier instanceof Nothing) {
                          return v52.word;
                        }
                        ;
                        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Symbols (line 122, column 20 - line 124, column 24): " + [v52.qualifier.constructor.name]);
                      }();
                      var left2 = v6.right - length5(fullModule) | 0;
                      return bind(bindAff)(getModuleInfo(port$prime)(fullModule))(function(info3) {
                        return pure(applicativeAff)(function() {
                          if (info3 instanceof Just && info3.value0.definedAt instanceof Just) {
                            return new Just({
                              typePos: info3.value0.definedAt.value0,
                              originRange: new Just(mkNewRange(v42.position)(left2)(v6.right))
                            });
                          }
                          ;
                          return Nothing.value;
                        }());
                      });
                    };
                  };
                };
                var mkLineRange = function(pos) {
                  return {
                    start: over()()(Position)(function(v52) {
                      return {
                        character: 0,
                        line: v52.line
                      };
                    })(pos),
                    end: over()()(Position)(function(c2) {
                      return {
                        character: c2.character + 100 | 0,
                        line: c2.line
                      };
                    })(pos)
                  };
                };
                var locationLinkSupported = function(c2) {
                  return isJust(bind(bindMaybe)(bind(bindMaybe)(toMaybe(function(v52) {
                    return v52.textDocument;
                  }(c2)))(function($278) {
                    return toMaybe(function(v52) {
                      return v52.definition;
                    }($278));
                  }))(function($279) {
                    return toMaybe(function(v52) {
                      return v52.linkSupport;
                    }($279));
                  }));
                };
                var mkResult = function(uri) {
                  return function(v52) {
                    return function(range3) {
                      if (v52 instanceof Just) {
                        var $242 = locationLinkSupported(v32.clientCapabilities.value0);
                        if ($242) {
                          var targetRange = over()()(Range)(function(rr) {
                            return {
                              start: over()()(Position)(function(pp) {
                                return {
                                  character: 0,
                                  line: pp.line
                                };
                              })(rr.start),
                              end: over()()(Position)(function(pp) {
                                return {
                                  line: pp.line + 1 | 0,
                                  character: pp.character
                                };
                              })(rr.end)
                            };
                          })(range3);
                          return gotoDefinitionResult(new Right({
                            originSelectionRange: toNullable(new Just(v52.value0)),
                            targetRange,
                            targetSelectionRange: targetRange,
                            targetUri: uri
                          }));
                        }
                        ;
                        return gotoDefinitionResult(new Left({
                          uri,
                          range: range3
                        }));
                      }
                      ;
                      if (v52 instanceof Nothing) {
                        return gotoDefinitionResult(new Left({
                          uri,
                          range: range3
                        }));
                      }
                      ;
                      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Symbols (line 150, column 3 - line 173, column 60): " + [uri.constructor.name, v52.constructor.name, range3.constructor.name]);
                    };
                  };
                };
                var localDefn = function(uri) {
                  return function(ident) {
                    var v52 = map(functorMaybe)(function(v6) {
                      return v6.parsed;
                    })(lookup(ordDocumentUri)(uri)(v32.parsedModules));
                    if (v52 instanceof Just && v52.value0 instanceof ParseSucceeded) {
                      return getLocalDefinitions(rangeOfVoid)(uri)(v42.position)(ident)(v52.value0.value0);
                    }
                    ;
                    if (v52 instanceof Just && v52.value0 instanceof ParseSucceededWithErrors) {
                      return getLocalDefinitions(rangeOfRecoveredError)(uri)(v42.position)(ident)(v52.value0.value0);
                    }
                    ;
                    return pure(applicativeAff)(Nothing.value);
                  };
                };
                return map(functorAff)(toNullable)(function() {
                  var uri = function(v52) {
                    return v52.uri;
                  }(un()(TextDocumentIdentifier)(v42.textDocument));
                  return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(v1)(uri)))(function(maybeDoc) {
                    var v52 = toMaybe(maybeDoc);
                    if (v52 instanceof Nothing) {
                      return pure(applicativeAff)(Nothing.value);
                    }
                    ;
                    if (v52 instanceof Just) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(v52.value0)(mkLineRange(v42.position))))(function(text) {
                        var v6 = un()(ServerState)(v32);
                        var v7 = identifierAtPoint(text)(function(v10) {
                          return v10.character;
                        }(un()(Position)(v42.position)));
                        if (v6.port instanceof Just && (v6.root instanceof Just && v7 instanceof Just)) {
                          return bind(bindAff)(localDefn(uri)(v7.value0.word))(function(v10) {
                            if (v10 instanceof Just && isNothing(v7.value0.qualifier)) {
                              return pure(applicativeAff)(new Just(v10.value0));
                            }
                            ;
                            return bind(bindAff)(lift2(applyAff)(alt(altMaybe))(moduleInfo(v6.port.value0)(v7.value0)(v7.value0.range))(typeInfo(uri)(v7.value0)))(function(info3) {
                              return $$for(applicativeAff)(traversableMaybe)(info3)(function(v11) {
                                return bind(bindAff)(liftEffect(monadEffectAff)(bindFlipped(bindEffect)(filenameToUri)(resolve([v6.root.value0])(v11.typePos.name))))(function(defnUri) {
                                  var startRange = {
                                    start: convPosition(v11.typePos.start),
                                    end: convPosition(v11.typePos.start)
                                  };
                                  return pure(applicativeAff)(mkResult(defnUri)(v11.originRange)(startRange));
                                });
                              });
                            });
                          });
                        }
                        ;
                        return pure(applicativeAff)(Nothing.value);
                      });
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Symbols (line 78, column 7 - line 109, column 36): " + [v52.constructor.name]);
                  });
                }());
              }
              ;
              return pure(applicativeAff)(toNullable(Nothing.value));
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.References/index.js
var getReferences;
var init_LanguageServer_IdePurescript18 = __esm({
  "output/LanguageServer.IdePurescript.References/index.js"() {
    init_Control4();
    init_Control5();
    init_Data16();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data_String6();
    init_Data29();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript17();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_IdePurescript_Util2();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_Node();
    init_PscIde2();
    init_PscIde();
    getReferences = function(notify) {
      return function(docs) {
        return function(v) {
          return function(state2) {
            return function(v1) {
              var mkRange = function(pos) {
                return {
                  start: over()()(Position)(function(v22) {
                    return {
                      character: 0,
                      line: v22.line
                    };
                  })(pos),
                  end: over()()(Position)(function(c2) {
                    return {
                      character: c2.character + 100 | 0,
                      line: c2.line
                    };
                  })(pos)
                };
              };
              var convLocation = function(root) {
                return function(v22) {
                  return function __do2() {
                    var uri2 = bindFlipped(bindEffect)(filenameToUri)(resolve([root])(v22.name))();
                    return {
                      uri: uri2,
                      range: {
                        start: convPosition(v22.start),
                        end: convPosition(v22.end)
                      }
                    };
                  };
                };
              };
              var v2 = un()(ServerState)(state2);
              var uri = function(v32) {
                return v32.uri;
              }(un()(TextDocumentIdentifier)(v1.textDocument));
              return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(uri)))(function(doc) {
                return maybe(pure(applicativeAff)([]))(function(doc1) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc1)(mkRange(v1.position))))(function(text) {
                    var v32 = identifierAtPoint(text)(function(v6) {
                      return v6.character;
                    }(un()(Position)(v1.position)));
                    if (v2.port instanceof Just && (v2.root instanceof Just && v32 instanceof Just)) {
                      return bind(bindAff)(getTypeInfoMaybeNew(notify)(state2)(uri)(v32.value0.word)(v32.value0.qualifier))(function(info3) {
                        if (info3 instanceof Just) {
                          var ns = function() {
                            if (info3["value0"]["type'"] === "Type") {
                              return NSType.value;
                            }
                            ;
                            if (endsWith("-> Type")(info3["value0"]["type'"])) {
                              return NSType.value;
                            }
                            ;
                            return NSValue.value;
                          }();
                          return bind(bindAff)(usages(v2.port.value0)(info3["value0"]["module'"])(ns)(v32.value0.word))(function(usg) {
                            return liftEffect(monadEffectAff)(either(pure(applicativeFn)(pure(applicativeEffect)([])))(traverse(traversableArray)(applicativeEffect)(convLocation(v2.root.value0)))(usg));
                          });
                        }
                        ;
                        return pure(applicativeAff)([]);
                      });
                    }
                    ;
                    return pure(applicativeAff)([]);
                  });
                })(toMaybe(doc));
              });
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Rename.CST/index.js
var getDeclSignatureName, delimitedToArray$prime, delimitedToArray, findCtor, getExportedRanges, getImportedRanges;
var init_LanguageServer_IdePurescript_Rename = __esm({
  "output/LanguageServer.IdePurescript.Rename.CST/index.js"() {
    init_Control4();
    init_Data39();
    init_Data();
    init_Data8();
    init_Data4();
    init_Data15();
    init_Data19();
    init_Data23();
    init_Data22();
    init_LanguageServer_IdePurescript_Util();
    init_PureScript_CST();
    getDeclSignatureName = function(v) {
      return function(isType) {
        return function(name2) {
          return map(functorMaybe)(sourceRangeToRange)(findMap2(function(v1) {
            if (v1 instanceof DeclSignature && v1.value0.label.name === name2) {
              return new Just(v1.value0.label.token.range);
            }
            ;
            if (v1 instanceof DeclKindSignature && (isType && v1.value1.label.name === name2)) {
              return new Just(v1.value1.label.token.range);
            }
            ;
            return Nothing.value;
          })(v.body.decls));
        };
      };
    };
    delimitedToArray$prime = function(v) {
      return cons2(v.value.head)(map(functorArray)(snd)(v.value.tail));
    };
    delimitedToArray = function(v) {
      if (v.value instanceof Just) {
        return cons2(v.value.value0.head)(map(functorArray)(snd)(v.value.value0.tail));
      }
      ;
      return [];
    };
    findCtor = function(name2) {
      return function(ctors) {
        return findMap2(function(c2) {
          var $40 = unwrap()(c2.name) === name2;
          if ($40) {
            return new Just(c2.token.range);
          }
          ;
          return Nothing.value;
        })(map(functorArray)(unwrap())(delimitedToArray(ctors)));
      };
    };
    getExportedRanges = function(v) {
      return function(isType) {
        return function(name2) {
          var go = function(v1) {
            if (v1 instanceof ExportValue && v1.value0.name === name2) {
              return pure(applicativeArray)(v1.value0.token.range);
            }
            ;
            if (v1 instanceof ExportType && (isType && v1.value0.name === name2)) {
              return pure(applicativeArray)(v1.value0.token.range);
            }
            ;
            if (v1 instanceof ExportType && (v1.value1 instanceof Just && (v1.value1.value0 instanceof DataEnumerated && !isType))) {
              return maybe([])(pure(applicativeArray))(findCtor(name2)(v1.value1.value0.value0));
            }
            ;
            if (v1 instanceof ExportOp && (!isType && v1.value0.name === name2)) {
              return pure(applicativeArray)(v1.value0.token.range);
            }
            ;
            if (v1 instanceof ExportTypeOp && (isType && v1.value1.name === name2)) {
              return pure(applicativeArray)(v1.value1.token.range);
            }
            ;
            if (v1 instanceof ExportClass && (isType && name2 === v1.value1.name)) {
              return pure(applicativeArray)(v1.value1.token.range);
            }
            ;
            return [];
          };
          return map(functorArray)(sourceRangeToRange)(foldMap2(monoidArray)(go)(maybe([])(delimitedToArray$prime)(v.header.exports)));
        };
      };
    };
    getImportedRanges = function(v) {
      return function(isType) {
        return function(name2) {
          return function(moduleName) {
            var goName = function(v1) {
              return foldMap2(monoidArray)(function(v2) {
                if (v2 instanceof ImportValue && (!isType && v2.value0.name === name2)) {
                  return pure(applicativeArray)(v2.value0.token.range);
                }
                ;
                if (v2 instanceof ImportType && (isType && v2.value0.name === name2)) {
                  return pure(applicativeArray)(v2.value0.token.range);
                }
                ;
                if (v2 instanceof ImportType && (v2.value1 instanceof Just && (v2.value1.value0 instanceof DataEnumerated && !isType))) {
                  return maybe([])(pure(applicativeArray))(findCtor(name2)(v2.value1.value0.value0));
                }
                ;
                if (v2 instanceof ImportOp && (!isType && v2.value0.name === name2)) {
                  return pure(applicativeArray)(v2.value0.token.range);
                }
                ;
                if (v2 instanceof ImportTypeOp && (isType && v2.value1.name === name2)) {
                  return pure(applicativeArray)(v2.value1.token.range);
                }
                ;
                if (v2 instanceof ImportClass && (isType && name2 === v2.value1.name)) {
                  return pure(applicativeArray)(v2.value1.token.range);
                }
                ;
                return [];
              })(delimitedToArray$prime(v1.value1));
            };
            var go = function(v1) {
              if (eq(eqModuleName)(v1.module.name)(moduleName)) {
                return maybe([])(goName)(v1.names);
              }
              ;
              if (otherwise) {
                return [];
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename.CST (line 71, column 3 - line 73, column 21): " + [v1.constructor.name]);
            };
            return map(functorArray)(sourceRangeToRange)(foldMap2(monoidArray)(go)(v.header.imports));
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Rename/index.js
var typeInfoToNs, splitLines, isNSType, getTextAtRangeInLines, findWordInRange, getTextEdits, eitherToErr2, comparePositions, checkPositionNested, getTypeInfoWithUsages, getIdentInfo, prepareRename, renameIdentifier;
var init_LanguageServer_IdePurescript19 = __esm({
  "output/LanguageServer.IdePurescript.Rename/index.js"() {
    init_Control4();
    init_Control5();
    init_Control2();
    init_Control_Monad_Error();
    init_Data39();
    init_Data();
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data_Map();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data12();
    init_Data7();
    init_Data10();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data_String4();
    init_Data_String_Regex();
    init_Data22();
    init_Data32();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect2();
    init_IdePurescript5();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript_Rename();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_IdePurescript11();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol4();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_Node5();
    init_Node_FS6();
    init_PscIde2();
    init_PscIde();
    init_PureScript();
    typeInfoToNs = function(v) {
      return maybe(NSValue.value)(function(v1) {
        if (v1 instanceof DeclValue) {
          return NSValue.value;
        }
        ;
        if (v1 instanceof DeclType) {
          return NSType.value;
        }
        ;
        if (v1 instanceof DeclTypeSynonym) {
          return NSType.value;
        }
        ;
        if (v1 instanceof DeclDataConstructor) {
          return NSValue.value;
        }
        ;
        if (v1 instanceof DeclTypeClass) {
          return NSType.value;
        }
        ;
        if (v1 instanceof DeclValueOperator) {
          return NSValue.value;
        }
        ;
        if (v1 instanceof DeclTypeOperator) {
          return NSType.value;
        }
        ;
        if (v1 instanceof DeclModule) {
          return NSType.value;
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 560, column 5 - line 568, column 27): " + [v1.constructor.name]);
      })(v.declarationType);
    };
    splitLines = /* @__PURE__ */ split("\n");
    isNSType = function(v) {
      if (v instanceof NSType) {
        return true;
      }
      ;
      return false;
    };
    getTextAtRangeInLines = function(lines2) {
      return function(v) {
        var cutStart = function(ln) {
          var v1 = uncons2(ln);
          if (v1 instanceof Just) {
            return cons2(drop4(v.start.character)(v1.value0.head))(v1.value0.tail);
          }
          ;
          return ln;
        };
        var cutEnd = function(ln) {
          var v1 = unsnoc2(ln);
          if (v1 instanceof Just) {
            return snoc2(v1.value0.init)(take5(v.end.character)(v1.value0.last));
          }
          ;
          return ln;
        };
        return joinWith("\n")(cutStart(cutEnd(slice2(v.start.line)(v.end.line + 1 | 0)(lines2))));
      };
    };
    findWordInRange = function(v) {
      return function(text) {
        return function(range3) {
          var isOp = maybe(false)(function() {
            var $240 = not(heytingAlgebraBoolean);
            var $241 = flip(test)(v);
            return function($242) {
              return $240($241($242));
            };
          }())(hush(regex("[a-z]")(ignoreCase)));
          var searchIndex = function(line) {
            if (isOp) {
              return indexOf2(v)(line);
            }
            ;
            if (otherwise) {
              return bind(bindMaybe)(hush(regex("\\b" + (v + "\\b"))(noFlags)))(flip(search)(line));
            }
            ;
            throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 620, column 3 - line 626, column 33): " + [line.constructor.name]);
          };
          return findMap2(function(v1) {
            return mapFlipped(functorMaybe)(searchIndex(v1.value1))(function(startChar) {
              var line = range3.start.line + v1.value0 | 0;
              var character = range3.start.character + startChar | 0;
              return {
                start: {
                  line,
                  character
                },
                end: {
                  line,
                  character: character + length5(v) | 0
                }
              };
            });
          })(mapWithIndex2(function(idx) {
            return function(s) {
              return new Tuple(idx, s);
            };
          })(split("\n")(text)));
        };
      };
    };
    getTextEdits = function(typeInfo) {
      return function(usages2) {
        return function(docsToEdit) {
          return function(newText) {
            return function(oldName) {
              var removeDups = map(functorMap)(nub2(ordRecord()(ordRecordCons(ordRecordCons(ordRecordNil)()({
                reflectSymbol: function() {
                  return "range";
                }
              })(ordRange))()({
                reflectSymbol: function() {
                  return "newText";
                }
              })(ordString))));
              var toRangePos = function(v) {
                return {
                  line: v.line - 1 | 0,
                  character: v.column - 1 | 0
                };
              };
              var rangeShiftLeft = function(charNum) {
                return function(v) {
                  return {
                    start: {
                      line: v.start.line,
                      character: v.start.character + charNum | 0
                    },
                    end: v.end
                  };
                };
              };
              var rangeFromTypePos = function(v) {
                return {
                  start: toRangePos(v.start),
                  end: toRangePos(v.end)
                };
              };
              var isType = isNSType(typeInfoToNs(typeInfo));
              var isCtor = startsWithCapitalLetter(oldName) && !isType;
              var cancelEdit = $$const(Nothing.value);
              var addEdit = function(key) {
                return function(edit) {
                  return function(m) {
                    return mapFlipped(functorMaybe)(m)(alter(ordTuple(ordDocumentUri)(ordMaybe(ordNumber)))(function() {
                      var $243 = maybe([edit])(cons2(edit));
                      return function($244) {
                        return Just.create($243($244));
                      };
                    }())(key));
                  };
                };
              };
              var addImportsEdits = function(edits) {
                var getName = function(v) {
                  return v.name;
                };
                var defFileName = mapFlipped(functorMaybe)(typeInfo.definedAt)(getName);
                var files = maybe(identity(categoryFn))(function(defFile) {
                  return filter2(function(name2) {
                    return name2 !== defFile;
                  });
                })(defFileName)(nub2(ordString)(mapFlipped(functorArray)(usages2)(getName)));
                return foldl2(function(editsMap) {
                  return function(fileName) {
                    var v = lookup(ordString)(fileName)(docsToEdit);
                    if (v instanceof Just) {
                      var addEdit$prime = function(range3) {
                        return addEdit(new Tuple(v.value0.uri, v.value0.version))({
                          range: range3,
                          newText
                        });
                      };
                      var fixRange = function(range3) {
                        var rangeText = v.value0.docTextAtRange(range3);
                        var mbRange = findWordInRange(oldName)(rangeText)(range3);
                        return maybe(cancelEdit)(addEdit$prime)(mbRange);
                      };
                      return maybeParseResult(identity(categoryFn))(function(dictRangeOf) {
                        return function(dictTokensOf) {
                          return function(m) {
                            return flip(foldl2(applyFlipped))(map(functorArray)(fixRange)(getImportedRanges(m)(isType)(oldName)(typeInfo["module'"])));
                          };
                        };
                      })(v.value0.parsed)(editsMap);
                    }
                    ;
                    if (v instanceof Nothing) {
                      return editsMap;
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 253, column 11 - line 275, column 23): " + [v.constructor.name]);
                  };
                })(edits)(files);
              };
              var addTypeDefEdit = function(edits) {
                var getDefined = function(v2) {
                  return bind(bindMaybe)(v2.definedAt)(function(v1) {
                    return mapFlipped(functorMaybe)(lookup(ordString)(v1.name)(docsToEdit))(function(doc) {
                      return new Tuple(v1, doc);
                    });
                  });
                };
                var v = getDefined(typeInfo);
                if (v instanceof Nothing) {
                  return edits;
                }
                ;
                if (v instanceof Just) {
                  var defRange = rangeFromTypePos(v.value0.value0);
                  var addEdit$prime = function(range3) {
                    return addEdit(new Tuple(v.value0.value1.uri, v.value0.value1.version))({
                      range: range3,
                      newText
                    });
                  };
                  var fixRange = function(range3) {
                    var rangeText = v.value0.value1.docTextAtRange(range3);
                    var mbRange = findWordInRange(oldName)(rangeText)(range3);
                    return maybe(cancelEdit)(addEdit$prime)(mbRange);
                  };
                  return maybeParseResult(identity(categoryFn))(function(dictRangeOf) {
                    return function(dictTokensOf) {
                      return function(m) {
                        var $245 = maybe(identity(categoryFn))(addEdit$prime)(getDeclSignatureName(m)(isType)(oldName));
                        var $246 = flip(foldl2(applyFlipped))(map(functorArray)(fixRange)(getExportedRanges(m)(isType)(oldName)));
                        return function($247) {
                          return $245($246($247));
                        };
                      };
                    };
                  })(v.value0.value1.parsed)(fixRange(defRange)(edits));
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 207, column 5 - line 238, column 23): " + [v.constructor.name]);
              };
              var addUsagesEdits = function(edits) {
                return foldl2(function(editsMap) {
                  return function(v) {
                    var v1 = lookup(ordString)(v.name)(docsToEdit);
                    if (v1 instanceof Nothing) {
                      return editsMap;
                    }
                    ;
                    if (v1 instanceof Just) {
                      var useRange = rangeFromTypePos(v);
                      var rangeText = v1.value0.docTextAtRange(useRange);
                      var qualIdx = maybe(0)(add(semiringInt)(1))(indexOf2(".")(rangeText));
                      var handleCtorImport = function(t) {
                        var v2 = function(v32) {
                          return t;
                        };
                        if (isCtor) {
                          var $125 = lastIndexOf2(oldName)(t);
                          if ($125 instanceof Just) {
                            var $126 = $125.value0 > 0;
                            if ($126) {
                              return "_" + drop4(1)(t);
                            }
                            ;
                            return v2(true);
                          }
                          ;
                          return v2(true);
                        }
                        ;
                        return v2(true);
                      };
                      var mbRange = findWordInRange(oldName)(handleCtorImport(drop4(qualIdx)(rangeText)))(rangeShiftLeft(qualIdx)(useRange));
                      var addEdit$prime = function(range3) {
                        return addEdit(new Tuple(v1.value0.uri, v1.value0.version))({
                          range: range3,
                          newText
                        });
                      };
                      return maybe(cancelEdit)(addEdit$prime)(mbRange)(editsMap);
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 170, column 11 - line 200, column 61): " + [v1.constructor.name]);
                  };
                })(edits)(usages2);
              };
              return removeDups(fromMaybe(empty2)(addImportsEdits(addTypeDefEdit(addUsagesEdits(new Just(empty2))))));
            };
          };
        };
      };
    };
    eitherToErr2 = function(c2) {
      return bind(bindAff)(c2)(function(r) {
        if (r instanceof Left) {
          return throwError(monadThrowAff)(error(r.value0));
        }
        ;
        if (r instanceof Right) {
          return pure(applicativeAff)(r.value0);
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 547, column 3 - line 549, column 26): " + [r.constructor.name]);
      });
    };
    comparePositions = function(v) {
      return function(v1) {
        var comparePaths = function(p1) {
          return function(p2) {
            return toLower(p1) === toLower(p2);
          };
        };
        return comparePaths(v.name)(v1.name) && eq(eqRec()(eqRowCons(eqRowCons(eqRowNil)()({
          reflectSymbol: function() {
            return "line";
          }
        })(eqInt))()({
          reflectSymbol: function() {
            return "column";
          }
        })(eqInt)))(v.start)(v1.start);
      };
    };
    checkPositionNested = function(v) {
      return function(v1) {
        var toTup = function(v2) {
          return new Tuple(v2.line, v2.column);
        };
        var comparePaths = function(p1) {
          return function(p2) {
            return toLower(p1) === toLower(p2);
          };
        };
        return comparePaths(v.name)(v1.name) && (lessThanOrEq(ordTuple(ordInt)(ordInt))(toTup(v1.start))(toTup(v.start)) && lessThanOrEq(ordTuple(ordInt)(ordInt))(toTup(v.end))(toTup(v1.end)));
      };
    };
    getTypeInfoWithUsages = function(port) {
      return function(word) {
        return function(wordPos) {
          return function(qualifier) {
            return function(moduleState) {
              var isTypeOrFnDecl = function(v) {
                if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclValue) {
                  return true;
                }
                ;
                if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclType) {
                  return true;
                }
                ;
                if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclTypeSynonym) {
                  return true;
                }
                ;
                if (v.declarationType instanceof Just && v.declarationType.value0 instanceof DeclTypeClass) {
                  return true;
                }
                ;
                return false;
              };
              var isMaybeTypeCtor = startsWithCapitalLetter(word);
              var unqualModules = function() {
                if (isMaybeTypeCtor) {
                  return getAllUnqualActiveModules(moduleState);
                }
                ;
                return getUnqualActiveModules(moduleState)(new Just(word));
              }();
              var getUsages = function(v) {
                return map(functorAff)(nubByEq2(comparePositions))(eitherToErr2(usages(port)(v["module'"])(typeInfoToNs(v))(word)));
              };
              var getQualifiedModule = flip(getQualModule)(moduleState);
              var moduleFilters = [new ModuleFilter(maybe(unqualModules)(getQualifiedModule)(qualifier))];
              var findInDefined = function(typeInfos) {
                return findMap2(function(v) {
                  return bind(bindMaybe)(mapFlipped(functorMaybe)(v.definedAt)(function(tp) {
                    return checkPositionNested(wordPos)(tp);
                  }))(function(v1) {
                    if (v1) {
                      return new Just(v);
                    }
                    ;
                    if (!v1) {
                      return Nothing.value;
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 396, column 17 - line 398, column 31): " + [v1.constructor.name]);
                  });
                })(reverse2(typeInfos));
              };
              var comparePositionFile = function(v) {
                return function(v1) {
                  return toLower(v.name) === toLower(v1.name);
                };
              };
              var findTypeInDefined = function(typeInfos) {
                return findMap2(function(v) {
                  return bind(bindMaybe)(mapFlipped(functorMaybe)(v.definedAt)(function(tp) {
                    return isTypeOrFnDecl(v) && comparePositionFile(wordPos)(tp);
                  }))(function(v1) {
                    if (v1) {
                      return new Just(v);
                    }
                    ;
                    if (!v1) {
                      return Nothing.value;
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 412, column 17 - line 414, column 31): " + [v1.constructor.name]);
                  });
                })(reverse2(typeInfos));
              };
              var checkPosition = comparePositions(wordPos);
              var getCheckedUsages = function(info3) {
                return mapFlipped(functorAff)(getUsages(info3))(function(usages2) {
                  return mapFlipped(functorMaybe)(find2(checkPosition)(usages2))($$const(new Tuple(info3, usages2)));
                });
              };
              return bind(bindAff)(eitherToErr2(type$prime(port)(word)(moduleFilters)(moduleState.main)))(function(typeInfos) {
                var v = findInDefined(typeInfos);
                if (v instanceof Just) {
                  return mapFlipped(functorAff)(getUsages(v.value0))(function() {
                    var $248 = Tuple.create(v.value0);
                    return function($249) {
                      return Just.create($248($249));
                    };
                  }());
                }
                ;
                if (v instanceof Nothing) {
                  var findTy = function() {
                    var v1 = findTypeInDefined(typeInfos);
                    if (v1 instanceof Just) {
                      return mapFlipped(functorAff)(getUsages(v1.value0))(function() {
                        var $250 = Tuple.create(v1.value0);
                        return function($251) {
                          return Just.create($250($251));
                        };
                      }());
                    }
                    ;
                    if (v1 instanceof Nothing) {
                      return pure(applicativeAff)(Nothing.value);
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 350, column 16 - line 352, column 32): " + [v1.constructor.name]);
                  }();
                  var f = foldM2(monadAff)(function(res) {
                    return function(info3) {
                      return maybe(getCheckedUsages(info3))(function() {
                        var $252 = pure(applicativeAff);
                        return function($253) {
                          return $252(Just.create($253));
                        };
                      }())(res);
                    };
                  })(Nothing.value)(typeInfos);
                  return bind(bindAff)(f)(maybe(findTy)(function() {
                    var $254 = pure(applicativeAff);
                    return function($255) {
                      return $254(Just.create($255));
                    };
                  }()));
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 339, column 3 - line 352, column 32): " + [v.constructor.name]);
              });
            };
          };
        };
      };
    };
    getIdentInfo = function(docs) {
      return function(v) {
        return function(state2) {
          return function(v1) {
            var rangePosToTypePos = function(v22) {
              return {
                column: v22.character + 1 | 0,
                line: v22.line + 1 | 0
              };
            };
            var mkWordRange = function(pos) {
              return function(v22) {
                return function(qualifier) {
                  var mkStart = function(v32) {
                    return {
                      character: v22.left + maybe(0)(function(s) {
                        return length5(s) + 1 | 0;
                      })(qualifier) | 0,
                      line: v32.line
                    };
                  };
                  return {
                    start: over()()(Position)(mkStart)(pos),
                    end: over()()(Position)(function(c2) {
                      return {
                        character: v22.right,
                        line: c2.line
                      };
                    })(pos)
                  };
                };
              };
            };
            var mkTypePosition = function(filePath) {
              return function(v22) {
                return {
                  name: filePath,
                  start: rangePosToTypePos(v22.start),
                  end: rangePosToTypePos(v22.end)
                };
              };
            };
            var mkRange = function(pos) {
              return {
                start: over()()(Position)(function(v22) {
                  return {
                    character: 0,
                    line: v22.line
                  };
                })(pos),
                end: over()()(Position)(function(c2) {
                  return {
                    character: c2.character + 100 | 0,
                    line: c2.line
                  };
                })(pos)
              };
            };
            var isLibType = function(v22) {
              if (v22.definedAt instanceof Just) {
                return contains(".spago")(v22.definedAt.value0.name);
              }
              ;
              return false;
            };
            var getIdentFromLine = function(lineText) {
              return identifierAtPoint(lineText)(function(v22) {
                return v22.character;
              }(un()(Position)(v1.position)));
            };
            var v2 = un()(ServerState)(state2);
            var uri = function(v32) {
              return v32.uri;
            }(un()(TextDocumentIdentifier)(v1.textDocument));
            return bind(bindAff)(liftEffect(monadEffectAff)(map(functorEffect)(toMaybe)(getDocument(docs)(uri))))(function(mbDoc) {
              return maybe(pure(applicativeAff)(Nothing.value))(function(doc) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(doc)(mkRange(v1.position))))(function(lineText) {
                  var v32 = getIdentFromLine(lineText);
                  if (v2.port instanceof Just && v32 instanceof Just) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(uri)))(function(modulePath) {
                      return bind(bindAff)(getTypeInfoWithUsages(v2.port.value0)(v32.value0.word)(mkTypePosition(modulePath)(mkWordRange(v1.position)(v32.value0.range)(Nothing.value)))(v32.value0.qualifier)(v2.modules))(function(infoUsage) {
                        return pure(applicativeAff)(function() {
                          if (infoUsage instanceof Just) {
                            if (isLibType(infoUsage.value0.value0)) {
                              return Nothing.value;
                            }
                            ;
                            if (otherwise) {
                              var $188 = isNSType(typeInfoToNs(infoUsage.value0.value0)) && $$null(infoUsage.value0.value1);
                              if ($188) {
                                return Nothing.value;
                              }
                              ;
                              return new Just({
                                word: v32.value0.word,
                                range: mkWordRange(v1.position)(v32.value0.range)(v32.value0.qualifier),
                                found: new Right({
                                  typeInfo: infoUsage.value0.value0,
                                  usages: infoUsage.value0.value1
                                })
                              });
                            }
                            ;
                          }
                          ;
                          return Nothing.value;
                        }());
                      });
                    });
                  }
                  ;
                  return pure(applicativeAff)(Nothing.value);
                });
              })(mbDoc);
            });
          };
        };
      };
    };
    prepareRename = function(docs) {
      return function(settings) {
        return function(state2) {
          return function(v) {
            return bind(bindAff)(getIdentInfo(docs)(settings)(state2)({
              textDocument: v.textDocument,
              position: v.position
            }))(function(identInfo) {
              return pure(applicativeAff)(toNullable(map(functorMaybe)(function(v1) {
                return v1.range;
              })(identInfo)));
            });
          };
        };
      };
    };
    renameIdentifier = function(docs) {
      return function(settings) {
        return function(state2) {
          return function(v) {
            var wsEditEmpty = {
              documentChanges: nullImpl,
              changes: nullImpl
            };
            var v1 = un()(ServerState)(state2);
            var toMultiEdits = function(m) {
              return mapFlipped(functorArray)(toUnfoldable3(unfoldableArray)(m))(function(v2) {
                return {
                  uri: v2.value0.value0,
                  version: v2.value0.value1,
                  edits: v2.value1
                };
              });
            };
            var goFile = function(dcs) {
              return function(path2) {
                return bind(bindAff)(liftEffect(monadEffectAff)(filenameToUri(path2)))(function(uri) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(uri)))(function(mbDoc) {
                    return bind(bindAff)(function() {
                      var v2 = toMaybe(mbDoc);
                      if (v2 instanceof Nothing) {
                        return bind(bindAff)(readTextFile3(UTF8.value)(path2))(function(docText) {
                          return pure(applicativeAff)(new Tuple(docText, Nothing.value));
                        });
                      }
                      ;
                      if (v2 instanceof Just) {
                        return liftEffect(monadEffectAff)(function __do2() {
                          var version2 = getVersion(v2.value0)();
                          var docText = getText(v2.value0)();
                          return new Tuple(docText, new Just(version2));
                        });
                      }
                      ;
                      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 109, column 7 - line 121, column 41): " + [v2.constructor.name]);
                    }())(function(v2) {
                      return pure(applicativeAff)(insert(ordString)(path2)({
                        uri,
                        docTextAtRange: getTextAtRangeInLines(splitLines(v2.value0)),
                        version: v2.value1,
                        parsed: parseModule2(v2.value0)
                      })(dcs));
                    });
                  });
                });
              };
            };
            var getDocsToEdit = function(v2) {
              return function(usages2) {
                var getName = function(v32) {
                  return v32.name;
                };
                var files = nub2(ordString)(append(semigroupArray)(mapFlipped(functorArray)(usages2)(getName))(maybe([])(singleton5)(mapFlipped(functorMaybe)(v2.definedAt)(getName))));
                return foldM2(monadAff)(goFile)(empty2)(files);
              };
            };
            return bind(bindAff)(getIdentInfo(docs)(settings)(state2)({
              textDocument: v.textDocument,
              position: v.position
            }))(function(identInfo) {
              if (identInfo instanceof Just && identInfo.value0.found instanceof Right) {
                return bind(bindAff)(getDocsToEdit(identInfo.value0.found.value0.typeInfo)(identInfo.value0.found.value0.usages))(function(docsToEdit) {
                  return liftEffect(monadEffectAff)(function() {
                    var usgEdits = getTextEdits(identInfo.value0.found.value0.typeInfo)(identInfo.value0.found.value0.usages)(docsToEdit)(v.newName)(identInfo.value0.word);
                    return pure(applicativeEffect)(makeMultiWorkspaceEdit(v1.clientCapabilities)(toMultiEdits(usgEdits)));
                  }());
                });
              }
              ;
              if (identInfo instanceof Just && identInfo.value0.found instanceof Left) {
                return pure(applicativeAff)(wsEditEmpty);
              }
              ;
              if (identInfo instanceof Nothing) {
                return pure(applicativeAff)(wsEditEmpty);
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Rename (line 71, column 3 - line 84, column 23): " + [identInfo.constructor.name]);
            });
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.Search/index.js
var encodeSearchResult, search2;
var init_LanguageServer_IdePurescript20 = __esm({
  "output/LanguageServer.IdePurescript.Search/index.js"() {
    init_Control4();
    init_Control5();
    init_Control_Monad();
    init_Control_Monad_Except();
    init_Data16();
    init_Data2();
    init_Data4();
    init_Data20();
    init_Data15();
    init_Data29();
    init_Effect6();
    init_Foreign();
    init_Foreign4();
    init_IdePurescript5();
    init_IdePurescript2();
    init_PscIde2();
    init_PscIde();
    encodeSearchResult = unsafeToForeign;
    search2 = function(v) {
      return function(v1) {
        return function(state2) {
          return function(args) {
            var toResult = function(v22) {
              return encodeSearchResult({
                typ: v22["type'"],
                identifier: v22.identifier,
                mod: v22["module'"]
              });
            };
            var v2 = runExcept(traverse(traversableArray)(applicativeExceptT(monadIdentity))(readString(monadIdentity))(args));
            if (state2.port instanceof Just && (v2 instanceof Right && v2.value0.length === 1)) {
              return bind(bindAff)(getLoadedModules(state2.port.value0))(function(loadedModules) {
                var getQualifiedModule = flip(getQualModule)(state2.modules);
                return bind(bindAff)(getCompletion$prime(new Just(new Flex(v2["value0"][0])))([])(state2.port.value0)(state2.modules.main)(Nothing.value)(loadedModules)(getQualifiedModule)(defaultCompletionOptions))(function(results) {
                  return pure(applicativeAff)(unsafeToForeign(map(functorArray)(toResult)(results)));
                });
              });
            }
            ;
            return pure(applicativeAff)(unsafeToForeign([]));
          };
        };
      };
    };
  }
});

// output/Literals.Undefined/foreign.js
var _undefined3;
var init_foreign88 = __esm({
  "output/Literals.Undefined/foreign.js"() {
    _undefined3 = void 0;
  }
});

// output/Literals.Undefined/index.js
var $$undefined;
var init_Literals = __esm({
  "output/Literals.Undefined/index.js"() {
    init_foreign88();
    $$undefined = _undefined3;
  }
});

// output/Untagged.Castable/index.js
var cast;
var init_Untagged = __esm({
  "output/Untagged.Castable/index.js"() {
    init_Unsafe();
    cast = function() {
      return unsafeCoerce2;
    };
  }
});

// output/Untagged.TypeCheck/foreign.js
var init_foreign89 = __esm({
  "output/Untagged.TypeCheck/foreign.js"() {
  }
});

// output/Untagged.TypeCheck/index.js
var init_Untagged2 = __esm({
  "output/Untagged.TypeCheck/index.js"() {
    init_foreign89();
    init_Data15();
    init_Data5();
    init_Foreign();
    init_Foreign3();
    init_Type();
  }
});

// output/Untagged.Union/index.js
var asOneOf;
var init_Untagged3 = __esm({
  "output/Untagged.Union/index.js"() {
    init_Data16();
    init_Data8();
    init_Data2();
    init_Data15();
    init_Foreign();
    init_Literals();
    init_Type();
    init_Unsafe();
    init_Untagged();
    init_Untagged2();
    asOneOf = cast;
  }
});

// output/LanguageServer.IdePurescript.Tooltips/index.js
var getTooltips;
var init_LanguageServer_IdePurescript21 = __esm({
  "output/LanguageServer.IdePurescript.Tooltips/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data8();
    init_Data4();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data_String5();
    init_Effect6();
    init_Effect4();
    init_IdePurescript5();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_IdePurescript_Util2();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_Literals();
    init_Untagged3();
    getTooltips = function(notify) {
      return function(docs) {
        return function(v) {
          return function(state2) {
            return function(v1) {
              var wordRange = function(v2) {
                return function(v32) {
                  return {
                    start: {
                      line: v2.line,
                      character: v32.left
                    },
                    end: {
                      line: v2.line,
                      character: v32.right
                    }
                  };
                };
              };
              var lineRange2 = function(v2) {
                return {
                  start: {
                    line: v2.line,
                    character: 0
                  },
                  end: {
                    line: v2.line,
                    character: v2.character + 100 | 0
                  }
                };
              };
              var convertInfo = function(word) {
                return function(v2) {
                  var showExpanded = isJust(v2.expandedType) && notEq(eqMaybe(eqString))(v2.expandedType)(new Just(v2["type'"]));
                  var expandedTypeStr = word + (" :: " + fromMaybe("")(v2.expandedType));
                  var compactTypeStr = word + (" :: " + v2["type'"]);
                  var typeStr = "```purescript\n" + (compactTypeStr + (function() {
                    if (showExpanded) {
                      return "\n" + expandedTypeStr;
                    }
                    ;
                    return "";
                  }() + "\n```"));
                  return {
                    contents: markupContent(typeStr + ("\n" + fromMaybe("")(v2.documentation))),
                    range: asOneOf()($$undefined)
                  };
                };
              };
              return map(functorAff)(toNullable)(function() {
                var uri = function(v2) {
                  return v2.uri;
                }(un()(TextDocumentIdentifier)(v1.textDocument));
                return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(docs)(uri)))(function(maybeDoc) {
                  var v2 = toMaybe(maybeDoc);
                  if (v2 instanceof Nothing) {
                    return pure(applicativeAff)(Nothing.value);
                  }
                  ;
                  if (v2 instanceof Just) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtRange(v2.value0)(lineRange2(v1.position))))(function(text) {
                      var $$char2 = function(v33) {
                        return v33.character;
                      }(un()(Position)(v1.position));
                      var v32 = identifierAtPoint(text)($$char2);
                      if (v32 instanceof Just) {
                        if (v32.value0.qualifier instanceof Just && $$char2 < (v32.value0.range.left + length5(v32.value0.qualifier.value0) | 0)) {
                          var mod2 = getQualModule(v32.value0.qualifier.value0)(un()(ServerState)(state2).modules);
                          return pure(applicativeAff)(map(functorMaybe)(function(v42) {
                            return {
                              contents: markupContent(v42.head),
                              range: asOneOf()(wordRange(v1.position)({
                                right: v32.value0.range.left + length5(v32.value0.qualifier.value0) | 0,
                                left: v32.value0.range.left
                              }))
                            };
                          })(uncons2(mod2)));
                        }
                        ;
                        return map(functorAff)(map(functorMaybe)(convertInfo(v32.value0.word)))(getTypeInfoMaybeNew(notify)(state2)(uri)(v32.value0.word)(v32.value0.qualifier));
                      }
                      ;
                      return pure(applicativeAff)(Nothing.value);
                    });
                  }
                  ;
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Tooltips (line 32, column 3 - line 52, column 26): " + [v2.constructor.name]);
                });
              }());
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.IdePurescript.WatchedFiles/index.js
var moduleNameFromFolderStructure, inferModuleName, insertModuleHeader, ifJsFileEvaluatePsFfi, handleFileCreated, handleDidChangeWatchedFiles;
var init_LanguageServer_IdePurescript22 = __esm({
  "output/LanguageServer.IdePurescript.WatchedFiles/index.js"() {
    init_Control4();
    init_Control5();
    init_Data39();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data_Map();
    init_Data15();
    init_Data41();
    init_Data_String5();
    init_Data_String2();
    init_Data_String3();
    init_Data3();
    init_Effect();
    init_Effect6();
    init_Effect4();
    init_Effect3();
    init_IdePurescript6();
    init_LanguageServer_IdePurescript4();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_IdePurescript5();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol4();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    moduleNameFromFolderStructure = function(path2) {
      var dirs = split("/")(path2);
      var parentIndex = fromMaybe(-1 | 0)(findLastIndex2(function() {
        var $41 = not(heytingAlgebraBoolean);
        return function($42) {
          return $41(startsWithCapitalLetter($42));
        };
      }())(dirs));
      var parts = drop3(parentIndex + 1 | 0)(dirs);
      var parts$prime = function() {
        var v = index2(dirs)(parentIndex);
        if (v instanceof Just && (v.value0 === "test" && notEq(eqMaybe(eqString))(index2(parts)(0))(new Just("Test")))) {
          return cons2("Test")(parts);
        }
        ;
        return parts;
      }();
      return joinWith(".")(parts$prime);
    };
    inferModuleName = function(v) {
      return map(functorMaybe)(function(v1) {
        return moduleNameFromFolderStructure(v1);
      })(function() {
        var v1 = stripSuffix(".purs")(v);
        if (v1 instanceof Nothing) {
          return stripSuffix(".js")(v);
        }
        ;
        if (v1 instanceof Just) {
          return new Just(v1.value0);
        }
        ;
        throw new Error("Failed pattern match at LanguageServer.IdePurescript.WatchedFiles (line 109, column 5 - line 111, column 23): " + [v1.constructor.name]);
      }());
    };
    insertModuleHeader = function(configRef) {
      return function(connection) {
        return function(stateRef) {
          return function(documents) {
            return function(uri) {
              return bind(bindAff)(liftEffect(monadEffectAff)(read(stateRef)))(function(v) {
                return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(documents)(uri)))(function(maybeDoc) {
                  return for_(applicativeAff)(foldableMaybe)(toMaybe(maybeDoc))(function(doc) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(getTextAtVersion(doc)))(function(v1) {
                      return when(applicativeAff)(v1.text === "")(for_(applicativeAff)(foldableMaybe)(inferModuleName(uri))(function(inferredModuleName) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(read(configRef)))(function(config) {
                          var preludeModule2 = preludeModule(config);
                          var toInsert = "module " + (inferredModuleName + (" where\n\nimport " + (preludeModule2 + "\n")));
                          var edit = makeWorkspaceEdit(v.clientCapabilities)(uri)(v1.version)(lineRange$prime(0)(length5(toInsert)))(toInsert);
                          return applyEdit(connection)(edit);
                        });
                      }));
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
    ifJsFileEvaluatePsFfi = function(serverStateRef) {
      return function(documentStore) {
        return function(documentUri) {
          var queueForFastBuild = function(ssRef) {
            return function(docUri) {
              return function(textDocument) {
                return flip(modify_)(ssRef)(function(v2) {
                  return {
                    port: v2.port,
                    root: v2.root,
                    deactivate: v2.deactivate,
                    purs: v2.purs,
                    conn: v2.conn,
                    clientCapabilities: v2.clientCapabilities,
                    runningRebuild: v2.runningRebuild,
                    rebuildRunning: v2.rebuildRunning,
                    fastRebuildQueue: insert(ordDocumentUri)(docUri)(textDocument)(v2.fastRebuildQueue),
                    diagnosticsQueue: v2.diagnosticsQueue,
                    fullBuildWaiting: v2.fullBuildWaiting,
                    savedCacheDb: v2.savedCacheDb,
                    revertCacheDbTimeout: v2.revertCacheDbTimeout,
                    modules: v2.modules,
                    modulesFile: v2.modulesFile,
                    diagnostics: v2.diagnostics,
                    parsedModules: v2.parsedModules
                  };
                });
              };
            };
          };
          var v = jsUriToMayPsUri(documentUri);
          if (v instanceof Nothing) {
            return pure(applicativeAff)(unit);
          }
          ;
          if (v instanceof Just) {
            return liftEffect(monadEffectAff)(function __do2() {
              var mayDoc = map(functorEffect)(toMaybe)(getDocument(documentStore)(v.value0))();
              if (mayDoc instanceof Nothing) {
                return unit;
              }
              ;
              if (mayDoc instanceof Just) {
                return queueForFastBuild(serverStateRef)(v.value0)(mayDoc.value0)();
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.WatchedFiles (line 60, column 7 - line 62, column 63): " + [mayDoc.constructor.name]);
            });
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.WatchedFiles (line 54, column 3 - line 62, column 63): " + [v.constructor.name]);
        };
      };
    };
    handleFileCreated = function(configRef) {
      return function(connection) {
        return function(stateRef) {
          return function(documents) {
            return function(uri) {
              return insertModuleHeader(configRef)(connection)(stateRef)(documents)(uri);
            };
          };
        };
      };
    };
    handleDidChangeWatchedFiles = function(configRef) {
      return function(conn) {
        return function(stateRef) {
          return function(documents) {
            return function(v) {
              return for_(applicativeAff)(foldableArray)(v.changes)(function(v1) {
                var v2 = uriToRelevantFileType(v1.uri);
                if (v2 instanceof PureScriptFile) {
                  var v32 = fromFileChangeTypeCode(v1.type);
                  if (v32 instanceof Just && v32.value0 instanceof CreatedChangeType) {
                    return handleFileCreated(configRef)(conn)(stateRef)(documents)(v1.uri);
                  }
                  ;
                  return pure(applicativeAff)(unit);
                }
                ;
                if (v2 instanceof JavaScriptFile) {
                  return ifJsFileEvaluatePsFfi(stateRef)(documents)(v1.uri);
                }
                ;
                if (v2 instanceof UnsupportedFile) {
                  return pure(applicativeAff)(unit);
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.WatchedFiles (line 39, column 5 - line 47, column 45): " + [v2.constructor.name]);
              });
            };
          };
        };
      };
    };
  }
});

// output/LanguageServer.Protocol.Setup/foreign.js
var import_node, import_vscode_languageserver_textdocument, initConnection, initDocumentStore, getConfigurationImpl;
var init_foreign90 = __esm({
  "output/LanguageServer.Protocol.Setup/foreign.js"() {
    import_node = __toModule(require("vscode-languageserver/node.js"));
    import_vscode_languageserver_textdocument = __toModule(require("vscode-languageserver-textdocument"));
    initConnection = function(commands2) {
      return function(cb) {
        return function() {
          var conn = (0, import_node.createConnection)();
          conn.listen();
          conn.onInitialize(function(params) {
            cb({
              params,
              conn
            })();
            return {
              capabilities: {
                textDocumentSync: {
                  save: { includeText: false },
                  change: import_node.TextDocumentSyncKind.Incremental,
                  openClose: true
                },
                completionProvider: {
                  resolveProvider: false,
                  triggerCharacters: ["."]
                },
                codeLensProvider: {
                  resolveProvider: false
                },
                hoverProvider: true,
                definitionProvider: true,
                workspaceSymbolProvider: true,
                documentSymbolProvider: true,
                codeActionProvider: {
                  codeActionKinds: [
                    import_node.CodeActionKind.Empty,
                    import_node.CodeActionKind.SourceOrganizeImports,
                    "source.sortImports",
                    import_node.CodeActionKind.SourceFixAll,
                    import_node.CodeActionKind.Source
                  ]
                },
                renameProvider: {
                  prepareProvider: true,
                  workDoneProgress: true
                },
                executeCommandProvider: (params.initializationOptions || {}).executeCommandProvider === false ? void 0 : {
                  commands: commands2
                },
                referencesProvider: true,
                foldingRangeProvider: true,
                documentFormattingProvider: true
              }
            };
          });
          return conn;
        };
      };
    };
    initDocumentStore = function(conn) {
      return function() {
        var documents = new import_node.TextDocuments(import_vscode_languageserver_textdocument.TextDocument);
        documents.listen(conn);
        return documents;
      };
    };
    getConfigurationImpl = function(conn) {
      return function() {
        return conn.workspace.getConfiguration("purescript").then(function(config) {
          return { purescript: config };
        });
      };
    };
  }
});

// output/LanguageServer.Protocol.Setup/index.js
var getConfiguration;
var init_LanguageServer_Protocol9 = __esm({
  "output/LanguageServer.Protocol.Setup/index.js"() {
    init_foreign90();
    init_Control13();
    init_foreign90();
    getConfiguration = function(conn) {
      return toAffE(getConfigurationImpl(conn));
    };
  }
});

// output/LanguageServer.Protocol.Workspace/foreign.js
var import_node2, codeLensRefresh;
var init_foreign91 = __esm({
  "output/LanguageServer.Protocol.Workspace/foreign.js"() {
    import_node2 = __toModule(require("vscode-languageserver/node.js"));
    codeLensRefresh = function(conn) {
      return function() {
        return conn.sendRequest(import_node2.CodeLensRefreshRequest.type);
      };
    };
  }
});

// output/LanguageServer.Protocol.Workspace/index.js
var init_LanguageServer_Protocol10 = __esm({
  "output/LanguageServer.Protocol.Workspace/index.js"() {
    init_foreign91();
    init_foreign91();
  }
});

// output/Literals.Null/foreign.js
var _null;
var init_foreign92 = __esm({
  "output/Literals.Null/foreign.js"() {
    _null = null;
  }
});

// output/Literals.Null/index.js
var $$null4;
var init_Literals2 = __esm({
  "output/Literals.Null/index.js"() {
    init_foreign92();
    $$null4 = _null;
  }
});

// output/LanguageServer.IdePurescript.Main/index.js
var LanguageServer_IdePurescript_exports = {};
__export(LanguageServer_IdePurescript_exports, {
  main: () => main
});
var readState2, parseArgs, muteReexportsWarn, modifyState2, modifyState_2, updateModules, mkStopPscIdeServer, mkRunHandler, mkNotify, getTextDocUri, handleEvents, defaultServerState, connect, cleanProject, buildWarningDialog, mkStartPscIdeServer, handleCommands, autoStartPcsIdeServer, handleConfig, main$prime, main;
var init_LanguageServer_IdePurescript23 = __esm({
  "output/LanguageServer.IdePurescript.Main/index.js"() {
    init_foreign();
    init_Control4();
    init_Control3();
    init_Control5();
    init_Control_Monad_Error();
    init_Control_Monad();
    init_Control13();
    init_Data39();
    init_Data16();
    init_Data8();
    init_Data25();
    init_Data2();
    init_Data4();
    init_Data21();
    init_Data_Map();
    init_Data15();
    init_Data23();
    init_Data41();
    init_Data_Profunctor2();
    init_Data14();
    init_Data_String2();
    init_Data29();
    init_Data22();
    init_Data3();
    init_Effect();
    init_Effect7();
    init_Effect6();
    init_Effect_Aff();
    init_Effect4();
    init_Effect8();
    init_Effect2();
    init_Effect3();
    init_Foreign();
    init_Foreign2();
    init_Foreign3();
    init_IdePurescript5();
    init_IdePurescript3();
    init_LanguageServer_IdePurescript4();
    init_LanguageServer_IdePurescript8();
    init_LanguageServer_IdePurescript9();
    init_LanguageServer_IdePurescript10();
    init_LanguageServer_IdePurescript12();
    init_LanguageServer_IdePurescript();
    init_LanguageServer_IdePurescript14();
    init_LanguageServer_IdePurescript2();
    init_LanguageServer_IdePurescript5();
    init_LanguageServer_IdePurescript15();
    init_LanguageServer_IdePurescript16();
    init_LanguageServer_IdePurescript3();
    init_LanguageServer_IdePurescript18();
    init_LanguageServer_IdePurescript19();
    init_LanguageServer_IdePurescript20();
    init_LanguageServer_IdePurescript6();
    init_LanguageServer_IdePurescript17();
    init_LanguageServer_IdePurescript21();
    init_LanguageServer_IdePurescript7();
    init_LanguageServer_IdePurescript11();
    init_LanguageServer_IdePurescript22();
    init_LanguageServer_Protocol8();
    init_LanguageServer_Protocol();
    init_LanguageServer_Protocol2();
    init_LanguageServer_Protocol9();
    init_LanguageServer_Protocol5();
    init_LanguageServer_Protocol3();
    init_LanguageServer_Protocol6();
    init_LanguageServer_Protocol7();
    init_LanguageServer_Protocol10();
    init_Literals2();
    init_Node5();
    init_Node_FS4();
    init_Node();
    init_Node3();
    readState2 = function(state2) {
      return function(get2) {
        return map(functorEffect)(map(functorFn)(get2)(un()(ServerState)))(read(state2));
      };
    };
    parseArgs = function(allArgs) {
      var defaultArgs = {
        config: Nothing.value,
        filename: Nothing.value,
        version: false
      };
      var args = drop3(2)(allArgs);
      var go = function($copy_i) {
        return function($copy_c) {
          var $tco_var_i = $copy_i;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(i, c2) {
            var v = index2(args)(i);
            if (v instanceof Just && v.value0 === "--config") {
              var v1 = index2(args)(i + 1 | 0);
              if (v1 instanceof Just) {
                $tco_var_i = i + 2 | 0;
                $copy_c = {
                  config: new Just(v1.value0),
                  filename: c2.filename,
                  version: c2.version
                };
                return;
              }
              ;
              if (v1 instanceof Nothing) {
                $tco_done = true;
                return Nothing.value;
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 137, column 26 - line 139, column 27): " + [v1.constructor.name]);
            }
            ;
            if (v instanceof Just && v.value0 === "--log") {
              var v1 = index2(args)(i + 1 | 0);
              if (v1 instanceof Just) {
                $tco_var_i = i + 2 | 0;
                $copy_c = {
                  config: c2.config,
                  filename: new Just(v1.value0),
                  version: c2.version
                };
                return;
              }
              ;
              if (v1 instanceof Nothing) {
                $tco_done = true;
                return Nothing.value;
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 140, column 23 - line 142, column 27): " + [v1.constructor.name]);
            }
            ;
            if (v instanceof Just && v.value0 === "--version") {
              $tco_var_i = i + 1 | 0;
              $copy_c = {
                config: c2.config,
                filename: c2.filename,
                version: true
              };
              return;
            }
            ;
            if (v instanceof Just) {
              $tco_var_i = i + 1 | 0;
              $copy_c = c2;
              return;
            }
            ;
            if (v instanceof Nothing) {
              $tco_done = true;
              return new Just(c2);
            }
            ;
            throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 136, column 5 - line 146, column 24): " + [v.constructor.name]);
          }
          ;
          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_i, $copy_c);
          }
          ;
          return $tco_result;
        };
      };
      return go(0)(defaultArgs);
    };
    muteReexportsWarn = function(logFn) {
      return function(con) {
        return function(str) {
          var $57 = contains("Failed to resolve reexports for Type.")(str);
          if ($57) {
            return pure(applicativeEffect)(unit);
          }
          ;
          return logFn(con)(str);
        };
      };
    };
    modifyState2 = function(state2) {
      return function(mod2) {
        return modify(over()()(ServerState)(mod2))(state2);
      };
    };
    modifyState_2 = function(state2) {
      return function(mod2) {
        return $$void(functorEffect)(modifyState2(state2)(mod2));
      };
    };
    updateModules = function(state2) {
      return function(documents) {
        return function(uri) {
          return bind(bindAff)(liftEffect(monadEffectAff)(read(state2)))(function(v) {
            if (v.port instanceof Just && notEq(eqMaybe(eqDocumentUri))(v.modulesFile)(new Just(uri))) {
              return bind(bindAff)(liftEffect(monadEffectAff)(getDocument(documents)(uri)))(function(maybeDoc) {
                return $$for(applicativeAff)(traversableMaybe)(toMaybe(maybeDoc))(function(doc) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getText(doc)))(function(text) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(uriToFilename(uri)))(function(path2) {
                      return bind(bindAff)(getModulesForFileTemp(v.port.value0)(path2)(text))(function(modules) {
                        return liftEffect(monadEffectAff)(modifyState2(state2)(function(v1) {
                          return {
                            port: v1.port,
                            root: v1.root,
                            deactivate: v1.deactivate,
                            purs: v1.purs,
                            conn: v1.conn,
                            clientCapabilities: v1.clientCapabilities,
                            runningRebuild: v1.runningRebuild,
                            rebuildRunning: v1.rebuildRunning,
                            fastRebuildQueue: v1.fastRebuildQueue,
                            diagnosticsQueue: v1.diagnosticsQueue,
                            fullBuildWaiting: v1.fullBuildWaiting,
                            savedCacheDb: v1.savedCacheDb,
                            revertCacheDbTimeout: v1.revertCacheDbTimeout,
                            modules,
                            modulesFile: new Just(uri),
                            diagnostics: v1.diagnostics,
                            parsedModules: v1.parsedModules
                          };
                        }));
                      });
                    });
                  });
                });
              });
            }
            ;
            return pure(applicativeAff)(Nothing.value);
          });
        };
      };
    };
    mkStopPscIdeServer = function(state2) {
      return function(notify) {
        return bind(bindAff)(liftEffect(monadEffectAff)(map(functorEffect)(map(functorFn)(function(v) {
          return v.deactivate;
        })(unwrap()))(read(state2))))(function(quit2) {
          return discard(discardUnit)(bindAff)(quit2)(function() {
            return liftEffect(monadEffectAff)(function __do2() {
              modify_(over()()(ServerState)(function(v) {
                return {
                  port: Nothing.value,
                  deactivate: pure(applicativeAff)(unit),
                  modules: initialModulesState,
                  runningRebuild: Nothing.value,
                  clientCapabilities: v.clientCapabilities,
                  conn: v.conn,
                  diagnostics: v.diagnostics,
                  diagnosticsQueue: v.diagnosticsQueue,
                  fastRebuildQueue: v.fastRebuildQueue,
                  fullBuildWaiting: v.fullBuildWaiting,
                  modulesFile: v.modulesFile,
                  parsedModules: v.parsedModules,
                  purs: v.purs,
                  rebuildRunning: v.rebuildRunning,
                  revertCacheDbTimeout: v.revertCacheDbTimeout,
                  root: v.root,
                  savedCacheDb: v.savedCacheDb
                };
              }))(state2)();
              return notify(Success.value)("Stopped IDE server")();
            });
          });
        });
      };
    };
    mkRunHandler = function(config) {
      return function(state2) {
        return function(documents) {
          return function(_handlerName) {
            return function(maybeGetDocUri) {
              return function(f) {
                return function(b) {
                  return fromAff(function() {
                    var v = maybeGetDocUri(b);
                    var v1 = function(v2) {
                      return bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(c2) {
                        return bind(bindAff)(maybe(pure(applicativeAff)(Nothing.value))(updateModules(state2)(documents))(v))(function(ms) {
                          return bind(bindAff)(maybe$prime(function(v32) {
                            return liftEffect(monadEffectAff)(read(state2));
                          })(pure(applicativeAff))(ms))(function(s) {
                            return f(c2)(s)(b);
                          });
                        });
                      });
                    };
                    if (v instanceof Just) {
                      var $64 = uriToRelevantFileType(v.value0);
                      if ($64 instanceof JavaScriptFile) {
                        return pure(applicativeAff)($$null4);
                      }
                      ;
                      return v1(true);
                    }
                    ;
                    return v1(true);
                  }());
                };
              };
            };
          };
        };
      };
    };
    mkNotify = function(logFile) {
      return function(state2) {
        return function(l) {
          return function(s) {
            return function __do2() {
              bind(bindEffect)(readState2(state2)(function(v) {
                return v.conn;
              }))(maybe(pure(applicativeEffect)(unit))(flip(function() {
                if (l instanceof Success) {
                  return log3;
                }
                ;
                if (l instanceof Info) {
                  return muteReexportsWarn(info2);
                }
                ;
                if (l instanceof Warning) {
                  return warn2;
                }
                ;
                if (l instanceof $$Error) {
                  return error3;
                }
                ;
                throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 217, column 11 - line 221, column 27): " + [l.constructor.name]);
              }())(s)))();
              if (logFile instanceof Just) {
                return appendTextFile(UTF8.value)(logFile.value0)("[" + (show(showErrorLevel)(l) + ("] " + (s + "\n"))))();
              }
              ;
              if (logFile instanceof Nothing) {
                return unit;
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 224, column 3 - line 228, column 25): " + [logFile.constructor.name]);
            };
          };
        };
      };
    };
    getTextDocUri = /* @__PURE__ */ function() {
      var $125 = un()(TextDocumentIdentifier);
      return function($126) {
        return Just.create(function(v) {
          return v.uri;
        }($125(function(v) {
          return v.textDocument;
        }($126))));
      };
    }();
    handleEvents = function(config) {
      return function(conn) {
        return function(state2) {
          return function(documents) {
            return function(notify) {
              var stopPscIdeServer = mkStopPscIdeServer(state2)(notify);
              var runHandler = mkRunHandler(config)(state2)(documents);
              return function __do2() {
                onCompletion(conn)(runHandler("onCompletion")(getTextDocUri)(getCompletions(notify)(documents)))();
                onDefinition(conn)(runHandler("onDefinition")(getTextDocUri)(getDefinition(notify)(documents)))();
                onDocumentSymbol(conn)(runHandler("onDocumentSymbol")(getTextDocUri)(getDocumentSymbols))();
                onWorkspaceSymbol(conn)(runHandler("onWorkspaceSymbol")($$const(Nothing.value))(getWorkspaceSymbols))();
                onFoldingRanges(conn)(runHandler("onFoldingRanges")(getTextDocUri)(getFoldingRanges(notify)(documents)))();
                onDocumentFormatting(conn)(runHandler("onDocumentFormatting")(getTextDocUri)(getFormattedDocument(notify)(documents)))();
                onPrepareRename(conn)(runHandler("onPrepareRename")(getTextDocUri)(prepareRename(documents)))();
                onRenameRequest(conn)(runHandler("onRenameRequest")(getTextDocUri)(renameIdentifier(documents)))();
                onReferences(conn)(runHandler("onReferences")(getTextDocUri)(getReferences(notify)(documents)))();
                onHover(conn)(runHandler("onHover")(getTextDocUri)(getTooltips(notify)(documents)))();
                onCodeAction(conn)(runHandler("onCodeAction")(getTextDocUri)(getActions(documents)))();
                onCodeLens(conn)(runHandler("onCodeLens")(getTextDocUri)(getCodeLenses(notify)(state2)(documents)))();
                onShutdown(conn)(fromAff(stopPscIdeServer))();
                onDidChangeWatchedFiles(conn)(function() {
                  var $127 = handleDidChangeWatchedFiles(config)(conn)(state2)(documents);
                  return function($128) {
                    return launchAff_($127($128));
                  };
                }())();
                onDidChangeContent(documents)(function(v) {
                  return handleDocumentChange(config)(conn)(state2)(notify)(v.document)(documents);
                })();
                onDidSaveDocument(documents)(function(v) {
                  return handleDocumentSave(config)(conn)(state2)(notify)(v.document)(documents);
                })();
                return onDidCloseDocument(documents)(function(v) {
                  return handleDocumentClose(config)(conn)(state2)(notify)(v.document)(documents);
                })();
              };
            };
          };
        };
      };
    };
    defaultServerState = /* @__PURE__ */ function() {
      return {
        port: Nothing.value,
        deactivate: pure(applicativeAff)(unit),
        root: Nothing.value,
        purs: Nothing.value,
        conn: Nothing.value,
        modules: initialModulesState,
        modulesFile: Nothing.value,
        runningRebuild: Nothing.value,
        fastRebuildQueue: empty2,
        diagnosticsQueue: empty2,
        fullBuildWaiting: Nothing.value,
        rebuildRunning: Nothing.value,
        savedCacheDb: Nothing.value,
        revertCacheDbTimeout: Nothing.value,
        diagnostics: empty2,
        clientCapabilities: Nothing.value,
        parsedModules: empty2
      };
    }();
    connect = function(state2) {
      return initConnection(commands)(function(v) {
        return function __do2() {
          (function __do3() {
            var args = argv();
            return log3(v.conn)("Starting with args: " + show(showArray(showString))(args))();
          })();
          var root = function() {
            var v1 = toMaybe(v.params.rootPath);
            var v2 = toMaybe(v.params.rootUri);
            if (v2 instanceof Just) {
              return map(functorEffect)(Just.create)(uriToFilename(v2.value0))();
            }
            ;
            if (v1 instanceof Just) {
              return new Just(v1.value0);
            }
            ;
            if (v2 instanceof Nothing && v1 instanceof Nothing) {
              return Nothing.value;
            }
            ;
            throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 316, column 15 - line 319, column 41): " + [v2.constructor.name, v1.constructor.name]);
          }();
          var workingRoot = maybe(cwd)(pure(applicativeEffect))(root)();
          modifyState_2(state2)(function(v1) {
            return {
              port: v1.port,
              root: new Just(workingRoot),
              deactivate: v1.deactivate,
              purs: v1.purs,
              conn: v1.conn,
              clientCapabilities: new Just(v.params.capabilities),
              runningRebuild: v1.runningRebuild,
              rebuildRunning: v1.rebuildRunning,
              fastRebuildQueue: v1.fastRebuildQueue,
              diagnosticsQueue: v1.diagnosticsQueue,
              fullBuildWaiting: v1.fullBuildWaiting,
              savedCacheDb: v1.savedCacheDb,
              revertCacheDbTimeout: v1.revertCacheDbTimeout,
              modules: v1.modules,
              modulesFile: v1.modulesFile,
              diagnostics: v1.diagnostics,
              parsedModules: v1.parsedModules
            };
          })();
          bindFlipped(bindEffect)(function(v1) {
            return log3(v.conn)("Starting with cwd: " + (v1.value0 + (" and using root path: " + v1.value1)));
          })(apply(applyEffect)(map(functorEffect)(Tuple.create)(cwd))(pure(applicativeEffect)(workingRoot)))();
          return modify_(over()()(ServerState)(function(v1) {
            return {
              conn: new Just(v.conn),
              clientCapabilities: v1.clientCapabilities,
              deactivate: v1.deactivate,
              diagnostics: v1.diagnostics,
              diagnosticsQueue: v1.diagnosticsQueue,
              fastRebuildQueue: v1.fastRebuildQueue,
              fullBuildWaiting: v1.fullBuildWaiting,
              modules: v1.modules,
              modulesFile: v1.modulesFile,
              parsedModules: v1.parsedModules,
              port: v1.port,
              purs: v1.purs,
              rebuildRunning: v1.rebuildRunning,
              revertCacheDbTimeout: v1.revertCacheDbTimeout,
              root: v1.root,
              runningRebuild: v1.runningRebuild,
              savedCacheDb: v1.savedCacheDb
            };
          }))(state2)();
        };
      });
    };
    cleanProject = function(conn) {
      return function(config) {
        return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(sendCleanBegin(conn)))(function() {
          return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(info2(conn)("Started cleaning compiled output")))(function() {
            return discard(discardUnit)(bindAff)(bind(bindAff)(clean(config))(function(v) {
              if (v instanceof Left) {
                return liftEffect(monadEffectAff)(function __do2() {
                  error3(conn)(v.value0)();
                  return showError2(conn)(v.value0)();
                });
              }
              ;
              if (v instanceof Right) {
                return liftEffect(monadEffectAff)(log3(conn)(v.value0));
              }
              ;
              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 341, column 9 - line 348, column 25): " + [v.constructor.name]);
            }))(function() {
              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(info2(conn)("Finished cleaning compiled output")))(function() {
                return liftEffect(monadEffectAff)(sendCleanEnd(conn));
              });
            });
          });
        });
      };
    };
    buildWarningDialog = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return function(msg) {
              return bind(bindAff)(showWarningWithActions(conn)(msg + ". \n\nEnsure project is built with the same purs version as the IDE server is using")(["Build project"]))(function(action) {
                return when(applicativeAff)(eq(eqMaybe(eqString))(action)(new Just("Build project")))(discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(info2(conn)("Building by request from warning dialog")))(function() {
                  return liftEffect(monadEffectAff)(requestFullBuild(config)(conn)(state2)(notify));
                }));
              });
            };
          };
        };
      };
    };
    mkStartPscIdeServer = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(notify(Info.value)("Going to start purs IDE server")))(function() {
              return bind(bindAff)(createWorkDoneProgress(conn))(function(progressReporter) {
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(workBegin(progressReporter)({
                  title: "Starting PureScript IDE server"
                })))(function() {
                  return bind(bindAff)(liftEffect(monadEffectAff)(getWorkspaceRoot(state2)))(function(rootPath) {
                    return bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(settings) {
                      return bind(bindAff)(startServer$prime2(settings)(rootPath)(notify)(notify))(function(startRes) {
                        return discard(discardUnit)(bindAff)(retry(notify)(6)(function() {
                          if (startRes.port instanceof Just) {
                            return discard(discardUnit)(bindAff)(bind(bindAff)(loadAll(startRes.port.value0))(function(v) {
                              if (v instanceof Left && contains("Version mismatch for the externs")(v.value0)) {
                                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(info2(conn)("Error loading modules: " + v.value0)))(function() {
                                  return buildWarningDialog(config)(conn)(state2)(notify)(v.value0 + ". Ensure project is built with the same purs version as the IDE server is using");
                                });
                              }
                              ;
                              if (v instanceof Left) {
                                return liftEffect(monadEffectAff)(notify(Info.value)("Non-fatal error loading modules: " + v.value0));
                              }
                              ;
                              return pure(applicativeAff)(unit);
                            }))(function() {
                              return liftEffect(monadEffectAff)(function __do2() {
                                modify_(over()()(ServerState)(function(v2) {
                                  return {
                                    port: new Just(startRes.port.value0),
                                    deactivate: startRes.quit,
                                    purs: startRes.purs,
                                    clientCapabilities: v2.clientCapabilities,
                                    conn: v2.conn,
                                    diagnostics: v2.diagnostics,
                                    diagnosticsQueue: v2.diagnosticsQueue,
                                    fastRebuildQueue: v2.fastRebuildQueue,
                                    fullBuildWaiting: v2.fullBuildWaiting,
                                    modules: v2.modules,
                                    modulesFile: v2.modulesFile,
                                    parsedModules: v2.parsedModules,
                                    rebuildRunning: v2.rebuildRunning,
                                    revertCacheDbTimeout: v2.revertCacheDbTimeout,
                                    root: v2.root,
                                    runningRebuild: v2.runningRebuild,
                                    savedCacheDb: v2.savedCacheDb
                                  };
                                }))(state2)();
                                var v = liftEffect(monadEffectEffect)(read(state2))();
                                return when(applicativeEffect)(supportsRefresh(v.clientCapabilities))(codeLensRefresh(conn))();
                              });
                            });
                          }
                          ;
                          return pure(applicativeAff)(unit);
                        }()))(function() {
                          return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(workDone(progressReporter)))(function() {
                            return liftEffect(monadEffectAff)(checkBuildTasks(config)(conn)(state2)(notify));
                          });
                        });
                      });
                    });
                  });
                });
              });
            });
          };
        };
      };
    };
    handleCommands = function(config) {
      return function(conn) {
        return function(state2) {
          return function(documents) {
            return function(notify) {
              var stopPscIdeServer = mkStopPscIdeServer(state2)(notify);
              var startPscIdeServer = mkStartPscIdeServer(config)(conn)(state2)(notify);
              var restartPscIdeServer = discard(discardUnit)(bindAff)(apathize(stopPscIdeServer))(function() {
                return startPscIdeServer;
              });
              var onClean = function(v) {
                return function(c2) {
                  return function(v1) {
                    return function(v2) {
                      return cleanProject(conn)(c2);
                    };
                  };
                };
              };
              var onBuild = function(v) {
                return function(v1) {
                  return function(v2) {
                    return function(v32) {
                      return liftEffect(monadEffectAff)(requestFullBuild(config)(conn)(state2)(notify));
                    };
                  };
                };
              };
              var noResult = unsafeToForeign(toNullable(Nothing.value));
              var voidHandler = function(h) {
                return function(d) {
                  return function(c2) {
                    return function(s) {
                      return function(a) {
                        return bind(bindAff)($$try2(monadErrorAff)(h(d)(c2)(s)(a)))(function(v) {
                          if (v instanceof Left) {
                            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(notify($$Error.value)(show(showError)(v.value0))))(function() {
                              return pure(applicativeAff)(noResult);
                            });
                          }
                          ;
                          if (v instanceof Right) {
                            return pure(applicativeAff)(noResult);
                          }
                          ;
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 564, column 13 - line 568, column 35): " + [v.constructor.name]);
                        });
                      };
                    };
                  };
                };
              };
              var simpleHandler = function(h) {
                return function(v) {
                  return function(v1) {
                    return function(v2) {
                      return function(v32) {
                        return voidLeft(functorAff)(h)(noResult);
                      };
                    };
                  };
                };
              };
              var handlers = fromFoldable4(foldableArray)(map(functorArray)(first(strongFn)(cmdName))([new Tuple(caseSplitCmd, voidHandler(caseSplit2)), new Tuple(addClauseCmd, voidHandler(addClause2)), new Tuple(replaceSuggestionCmd, voidHandler(onReplaceSuggestion)), new Tuple(replaceAllSuggestionsCmd, voidHandler(onReplaceAllSuggestions)), new Tuple(buildCmd, voidHandler(onBuild)), new Tuple(cleanCmd, voidHandler(onClean)), new Tuple(addCompletionImportCmd, addCompletionImport2(notify)), new Tuple(addModuleImportCmd, voidHandler(addModuleImport$prime(notify))), new Tuple(sortImportsCmd, reformatImports(notify)), new Tuple(startPscIdeCmd, simpleHandler(startPscIdeServer)), new Tuple(stopPscIdeCmd, simpleHandler(stopPscIdeServer)), new Tuple(restartPscIdeCmd, simpleHandler(restartPscIdeServer)), new Tuple(getAvailableModulesCmd, getAllModules(notify)), new Tuple(searchCmd, search2), new Tuple(fixTypoCmd, fixTypo(notify)), new Tuple(typedHoleExplicitCmd, voidHandler(fillTypedHole(notify)))]));
              return onExecuteCommand(conn)(function(v) {
                return fromAff(bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(c2) {
                  return bind(bindAff)(liftEffect(monadEffectAff)(read(state2)))(function(s) {
                    var v1 = lookup2(v.command)(handlers);
                    if (v1 instanceof Just) {
                      return v1.value0(documents)(c2)(s)(v["arguments"]);
                    }
                    ;
                    if (v1 instanceof Nothing) {
                      return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(error3(conn)("Unknown command: " + v.command)))(function() {
                        return pure(applicativeAff)(noResult);
                      });
                    }
                    ;
                    throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 598, column 11 - line 602, column 28): " + [v1.constructor.name]);
                  });
                }));
              });
            };
          };
        };
      };
    };
    autoStartPcsIdeServer = function(config) {
      return function(conn) {
        return function(state2) {
          return function(notify) {
            var workspaceRoot = getWorkspaceRoot(state2);
            var launchAff2 = function() {
              var $129 = $$void(functorEffect);
              var $130 = launchAffLog(notify);
              return function($131) {
                return $129($130($131));
              };
            }();
            var startPscIdeServer = mkStartPscIdeServer(config)(conn)(state2)(notify);
            var resolvePath = function(p) {
              return function __do2() {
                var root = workspaceRoot();
                return resolve([root])(p)();
              };
            };
            return bind(bindAff)(liftEffect(monadEffectAff)(read(config)))(function(c2) {
              return when(applicativeAff)(autoStartPscIde(c2))(discard(discardUnit)(bindAff)(startPscIdeServer)(function() {
                return bind(bindAff)(liftEffect(monadEffectAff)(map(functorEffect)(or(foldableArray)(heytingAlgebraBoolean))(traverse(traversableArray)(applicativeEffect)(composeKleisliFlipped(bindEffect)(exists)(resolvePath))(["bower.json", "psc-package.json", "spago.dhall", "spago.yaml", "flake.nix", "shell.nix"]))))(function(hasPackageFile) {
                  return bind(bindAff)(getEnvPursIdeSources(monadEffectAff))(function(envIdeSources) {
                    return discard(discardUnit)(bindAff)(when(applicativeAff)(!hasPackageFile && isNothing(envIdeSources))(liftEffect(monadEffectAff)(showError2(conn)("It doesn't look like the workspace root is a PureScript project(has bower.json/psc-package.json/spago.dhall/flake.nix/shell.nix).The PureScript project should be opened as a root workspace folder."))))(function() {
                      return bind(bindAff)(liftEffect(monadEffectAff)(getOutputDir(config)(state2)))(function(outputDir) {
                        return bind(bindAff)(liftEffect(monadEffectAff)(exists(outputDir)))(function(exists2) {
                          return unless(applicativeAff)(exists2)(liftEffect(monadEffectAff)(launchAff2(function() {
                            var message2 = "Output directory does not exist at '" + (outputDir + "'");
                            return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(info2(conn)(message2)))(function() {
                              return buildWarningDialog(config)(conn)(state2)(notify)(message2 + ". Ensure project is built, or check configuration of output directory and build command.");
                            });
                          }())));
                        });
                      });
                    });
                  });
                });
              }));
            });
          };
        };
      };
    };
    handleConfig = function(config) {
      return function(conn) {
        return function(state2) {
          return function(cmdLineConfig) {
            return function(notify) {
              var launchAff2 = function() {
                var $132 = $$void(functorEffect);
                var $133 = launchAffLog(notify);
                return function($134) {
                  return $132($133($134));
                };
              }();
              return bind(bindAff)(empty4)(function(v) {
                var setConfig = function(source2) {
                  return function(newConfig) {
                    return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(function __do2() {
                      log3(conn)("Got new config (" + (source2 + ")"))();
                      return write(newConfig)(config)();
                    }))(function() {
                      return bind(bindAff)(tryPut2(unit)(v))(function(v1) {
                        if (v1) {
                          return pure(applicativeAff)(unit);
                        }
                        ;
                        if (!v1) {
                          return liftEffect(monadEffectAff)(log3(conn)("Not starting server, already started"));
                        }
                        ;
                        throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 509, column 13 - line 511, column 80): " + [v1.constructor.name]);
                      });
                    });
                  };
                };
                return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(onDidChangeConfiguration(conn)(function(v1) {
                  return launchAff2(setConfig("client push")(v1.settings));
                })))(function() {
                  return bind(bindAff)(forkAff(discard(discardUnit)(bindAff)(read4(v))(function() {
                    return autoStartPcsIdeServer(config)(conn)(state2)(notify);
                  })))(function() {
                    return discard(discardUnit)(bindAff)(maybe(pure(applicativeAff)(unit))(setConfig("command line"))(cmdLineConfig))(function() {
                      return discard(discardUnit)(bindAff)(delay(50))(function() {
                        return bind(bindAff)(map(functorAff)(isFilled)(status2(v)))(function(got1) {
                          return unless(applicativeAff)(got1)(bind(bindAff)(attempt(getConfiguration(conn)))(function(initialConfig) {
                            if (initialConfig instanceof Right) {
                              return setConfig("by request")(initialConfig.value0);
                            }
                            ;
                            if (initialConfig instanceof Left) {
                              return discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(log3(conn)("Failed to request settings: " + show(showError)(initialConfig.value0))))(function() {
                                return discard(discardUnit)(bindAff)(delay(200))(function() {
                                  return bind(bindAff)(map(functorAff)(isFilled)(status2(v)))(function(got2) {
                                    return unless(applicativeAff)(got2)(discard(discardUnit)(bindAff)(liftEffect(monadEffectAff)(notify(Warning.value)("Proceeding with no config received")))(function() {
                                      return $$void(functorAff)(tryPut2(unit)(v));
                                    }));
                                  });
                                });
                              });
                            }
                            ;
                            throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 529, column 5 - line 539, column 44): " + [initialConfig.constructor.name]);
                          }));
                        });
                      });
                    });
                  });
                });
              });
            };
          };
        };
      };
    };
    main$prime = function(v) {
      return function __do2() {
        var state2 = $$new(defaultServerState)();
        var config = $$new(unsafeToForeign({}))();
        var conn = connect(state2)();
        var documents = initDocumentStore(conn)();
        var notify = mkNotify(v.filename)(state2);
        handleEvents(config)(conn)(state2)(documents)(notify)();
        handleCommands(config)(conn)(state2)(documents)(notify)();
        $$void(functorEffect)(launchAffLog(notify)(handleConfig(config)(conn)(state2)(v.config)(notify)))();
        var plsVersion = version();
        return log3(conn)("PureScript Language Server started (" + (plsVersion + ")"))();
      };
    };
    main = function __do() {
      var maybeArgs = map(functorEffect)(parseArgs)(argv)();
      if (maybeArgs instanceof Nothing) {
        error2("Error parsing args")();
        return exit(1)();
      }
      ;
      if (maybeArgs instanceof Just && maybeArgs.value0.version) {
        var v = version();
        return log2(v)();
      }
      ;
      if (maybeArgs instanceof Just) {
        maybe(pure(applicativeEffect)(unit))(flip(writeTextFile(UTF8.value))("Starting logging...\n"))(maybeArgs.value0.filename)();
        var config$prime = function() {
          if (maybeArgs.value0.config instanceof Just) {
            return either($$const(Nothing.value))(Just.create)(runExcept(parseJSON(maybeArgs.value0.config.value0)));
          }
          ;
          if (maybeArgs.value0.config instanceof Nothing) {
            return Nothing.value;
          }
          ;
          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 623, column 19 - line 625, column 29): " + [maybeArgs.value0.config.constructor.name]);
        }();
        return main$prime({
          config: config$prime,
          filename: maybeArgs.value0.filename
        })();
      }
      ;
      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main (line 611, column 3 - line 626, column 57): " + [maybeArgs.constructor.name]);
    };
  }
});

// main.js
(init_LanguageServer_IdePurescript23(), LanguageServer_IdePurescript_exports).main();
